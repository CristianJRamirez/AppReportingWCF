package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService;
//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/15/2017 9:13:05 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.SolicitudServicio;
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorByte;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class SolicitudDatosPlanos implements KvmSerializable {
    
    public String bastidor;
    public boolean cambioManual;
    public boolean cambioManualSpecified;
    public int cilindada;
    public boolean cilindadaSpecified;
    public String combustible;
    public boolean conRemolque;
    public boolean conRemolqueSpecified;
    public boolean conTurbo;
    public boolean conTurboSpecified;
    public String contrasenyaHomologacion;
    public boolean cuatrotiempos;
    public boolean cuatrotiemposSpecified;
    public String estacionUltimaValidez;
    public String extensionBastidor;
    public long fK_IdClassificacionField;
    public boolean fK_IdClassificacionSpecifiedField;
    public long fK_IdCombustible;
    public boolean fK_IdCombustibleSpecified;
    public long fK_IdSolicitud;
    public boolean fK_IdSolicitudSpecified;
    public String fechaPrimeraMatriculacion;
    public boolean fechaPrimeraMatriculacionSpecified;
    public String fechaRegistro;
    public boolean fechaRegistroSpecified;
    public String fechaUltimaValidez;
    public boolean fechaUltimaValidezSpecified;
    public long idSolicitudDatosPalnos;
    public boolean idSolicitudDatosPalnosSpecified;
    public int kilometros;
    public boolean kilometrosSpecified;
    public int mMA;
    public boolean mMASpecified;
    public int mOM;
    public boolean mOMSpecified;
    public String marcaVehiculo;
    public String matricula;
    public String modeloVehiculo;
    public String notasOcultas;
    public int numEjes;
    public boolean numEjesSpecified;
    public int pMA;
    public boolean pMASpecified;
    public String pORApellidos;
    public String pORCP;
    public String pORDomicilio;
    public String pOREmail;
    public String pOREscPisoPta;
    public boolean pORMailingCorreo;
    public boolean pORMailingCorreoSpecified;
    public boolean pORMailingCorreoOrdinario;
    public boolean pORMailingCorreoOrdinarioSpecified;
    public boolean pORMailingNoRecibir;
    public boolean pORMailingNoRecibirSpecified;
    public boolean pORMailingSMS;
    public boolean pORMailingSMSSpecified;
    public String pORMecanismoPago;
    public String pORMovil;
    public String pORNIF;
    public String pORNoCuentaCorriente;
    public String pORNombre;
    public String pORNumero;
    public String pORObservaciones;
    public String pORPoblacion;
    public String pORProvincia;
    public String pORTelefono;
    public String pORTipoVia;
    public int plazas;
    public boolean plazasSpecified;
    public int potenciaFiscal;
    public boolean potenciaFiscalSpecified;
    public String provinciaPrimeraMatriculacion;
    public boolean publicado;
    public boolean publicadoSpecified;
    public SolicitudServicio solicitudServicio;
    public String tITApellidos;
    public String tITCP;
    public String tITDomicilio;
    public String tITEmail;
    public String tITEscPisoPta;
    public boolean tITMailingCorreo;
    public boolean tITMailingCorreoSpecified;
    public boolean tITMailingCorreoOrdinario;
    public boolean tITMailingCorreoOrdinarioSpecified;
    public boolean tITMailingNoRecibir;
    public boolean tITMailingNoRecibirSpecified;
    public boolean tITMailingSMS;
    public boolean tITMailingSMSSpecified;
    public String tITMecanismoPago;
    public String tITMovil;
    public String tITNIF;
    public String tITNoCuentaCorriente;
    public String tITNombre;
    public String tITNumero;
    public String tITObservaciones;
    public String tITPoblacion;
    public String tITProvincia;
    public String tITTelefono;
    public String tITTipoVia;
    public String tipoFichaTecnica;
    public String tipoMarcaModelo;
    public String tipoMatricula;
    public String vehiculoClasificacion;
    public String vehiculoCodigoInterno;
    public String vehiculoConstruccion;
    public String vehiculoUtilizacion;
    public int velocidadMaxima;
    public boolean velocidadMaximaSpecified;
    public String fechaModificacion;
    public boolean fechaModificacionSpecified;
    public VectorByte timestamp;
    public long usuarioModificacion;
    public boolean usuarioModificacionSpecified;
    public String id;
    public String ref;
    
    public SolicitudDatosPlanos(){}
    
    public SolicitudDatosPlanos(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Bastidor"))
        {
            Object obj = soapObject.getProperty("Bastidor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                bastidor = j.toString();
            }else if (obj!= null && obj instanceof String){
                bastidor = (String) obj;
            }
        }
        if (soapObject.hasProperty("CambioManual"))
        {
            Object obj = soapObject.getProperty("CambioManual");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cambioManual = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cambioManual = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("CambioManualSpecified"))
        {
            Object obj = soapObject.getProperty("CambioManualSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cambioManualSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cambioManualSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Cilindada"))
        {
            Object obj = soapObject.getProperty("Cilindada");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cilindada = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                cilindada = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CilindadaSpecified"))
        {
            Object obj = soapObject.getProperty("CilindadaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cilindadaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cilindadaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Combustible"))
        {
            Object obj = soapObject.getProperty("Combustible");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                combustible = j.toString();
            }else if (obj!= null && obj instanceof String){
                combustible = (String) obj;
            }
        }
        if (soapObject.hasProperty("ConRemolque"))
        {
            Object obj = soapObject.getProperty("ConRemolque");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                conRemolque = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                conRemolque = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ConRemolqueSpecified"))
        {
            Object obj = soapObject.getProperty("ConRemolqueSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                conRemolqueSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                conRemolqueSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ConTurbo"))
        {
            Object obj = soapObject.getProperty("ConTurbo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                conTurbo = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                conTurbo = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ConTurboSpecified"))
        {
            Object obj = soapObject.getProperty("ConTurboSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                conTurboSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                conTurboSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ContrasenyaHomologacion"))
        {
            Object obj = soapObject.getProperty("ContrasenyaHomologacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                contrasenyaHomologacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                contrasenyaHomologacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("Cuatrotiempos"))
        {
            Object obj = soapObject.getProperty("Cuatrotiempos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cuatrotiempos = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cuatrotiempos = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("CuatrotiemposSpecified"))
        {
            Object obj = soapObject.getProperty("CuatrotiemposSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cuatrotiemposSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cuatrotiemposSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("EstacionUltimaValidez"))
        {
            Object obj = soapObject.getProperty("EstacionUltimaValidez");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                estacionUltimaValidez = j.toString();
            }else if (obj!= null && obj instanceof String){
                estacionUltimaValidez = (String) obj;
            }
        }
        if (soapObject.hasProperty("ExtensionBastidor"))
        {
            Object obj = soapObject.getProperty("ExtensionBastidor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                extensionBastidor = j.toString();
            }else if (obj!= null && obj instanceof String){
                extensionBastidor = (String) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdClassificacion"))
        {
            Object obj = soapObject.getProperty("FK_IdClassificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdClassificacionField = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdClassificacionField = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdClassificacionSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdClassificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdClassificacionSpecifiedField = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdClassificacionSpecifiedField = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCombustible"))
        {
            Object obj = soapObject.getProperty("FK_IdCombustible");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCombustible = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdCombustible = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCombustibleSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdCombustibleSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCombustibleSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdCombustibleSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdSolicitud"))
        {
            Object obj = soapObject.getProperty("FK_IdSolicitud");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdSolicitud = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdSolicitud = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdSolicitudSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdSolicitudSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdSolicitudSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdSolicitudSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaPrimeraMatriculacion"))
        {
            Object obj = soapObject.getProperty("FechaPrimeraMatriculacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaPrimeraMatriculacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaPrimeraMatriculacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaPrimeraMatriculacionSpecified"))
        {
            Object obj = soapObject.getProperty("FechaPrimeraMatriculacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaPrimeraMatriculacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaPrimeraMatriculacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaRegistro"))
        {
            Object obj = soapObject.getProperty("FechaRegistro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaRegistro = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaRegistro = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaRegistroSpecified"))
        {
            Object obj = soapObject.getProperty("FechaRegistroSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaRegistroSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaRegistroSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaUltimaValidez"))
        {
            Object obj = soapObject.getProperty("FechaUltimaValidez");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaUltimaValidez = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaUltimaValidez = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaUltimaValidezSpecified"))
        {
            Object obj = soapObject.getProperty("FechaUltimaValidezSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaUltimaValidezSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaUltimaValidezSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdSolicitudDatosPalnos"))
        {
            Object obj = soapObject.getProperty("IdSolicitudDatosPalnos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idSolicitudDatosPalnos = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idSolicitudDatosPalnos = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdSolicitudDatosPalnosSpecified"))
        {
            Object obj = soapObject.getProperty("IdSolicitudDatosPalnosSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idSolicitudDatosPalnosSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idSolicitudDatosPalnosSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Kilometros"))
        {
            Object obj = soapObject.getProperty("Kilometros");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                kilometros = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                kilometros = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("KilometrosSpecified"))
        {
            Object obj = soapObject.getProperty("KilometrosSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                kilometrosSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                kilometrosSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("MMA"))
        {
            Object obj = soapObject.getProperty("MMA");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mMA = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                mMA = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("MMASpecified"))
        {
            Object obj = soapObject.getProperty("MMASpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mMASpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                mMASpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("MOM"))
        {
            Object obj = soapObject.getProperty("MOM");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mOM = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                mOM = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("MOMSpecified"))
        {
            Object obj = soapObject.getProperty("MOMSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mOMSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                mOMSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("MarcaVehiculo"))
        {
            Object obj = soapObject.getProperty("MarcaVehiculo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                marcaVehiculo = j.toString();
            }else if (obj!= null && obj instanceof String){
                marcaVehiculo = (String) obj;
            }
        }
        if (soapObject.hasProperty("Matricula"))
        {
            Object obj = soapObject.getProperty("Matricula");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                matricula = j.toString();
            }else if (obj!= null && obj instanceof String){
                matricula = (String) obj;
            }
        }
        if (soapObject.hasProperty("ModeloVehiculo"))
        {
            Object obj = soapObject.getProperty("ModeloVehiculo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                modeloVehiculo = j.toString();
            }else if (obj!= null && obj instanceof String){
                modeloVehiculo = (String) obj;
            }
        }
        if (soapObject.hasProperty("NotasOcultas"))
        {
            Object obj = soapObject.getProperty("NotasOcultas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                notasOcultas = j.toString();
            }else if (obj!= null && obj instanceof String){
                notasOcultas = (String) obj;
            }
        }
        if (soapObject.hasProperty("NumEjes"))
        {
            Object obj = soapObject.getProperty("NumEjes");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numEjes = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                numEjes = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("NumEjesSpecified"))
        {
            Object obj = soapObject.getProperty("NumEjesSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numEjesSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                numEjesSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PMA"))
        {
            Object obj = soapObject.getProperty("PMA");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pMA = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                pMA = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PMASpecified"))
        {
            Object obj = soapObject.getProperty("PMASpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pMASpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                pMASpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PORApellidos"))
        {
            Object obj = soapObject.getProperty("PORApellidos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORApellidos = j.toString();
            }else if (obj!= null && obj instanceof String){
                pORApellidos = (String) obj;
            }
        }
        if (soapObject.hasProperty("PORCP"))
        {
            Object obj = soapObject.getProperty("PORCP");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORCP = j.toString();
            }else if (obj!= null && obj instanceof String){
                pORCP = (String) obj;
            }
        }
        if (soapObject.hasProperty("PORDomicilio"))
        {
            Object obj = soapObject.getProperty("PORDomicilio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORDomicilio = j.toString();
            }else if (obj!= null && obj instanceof String){
                pORDomicilio = (String) obj;
            }
        }
        if (soapObject.hasProperty("POREmail"))
        {
            Object obj = soapObject.getProperty("POREmail");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pOREmail = j.toString();
            }else if (obj!= null && obj instanceof String){
                pOREmail = (String) obj;
            }
        }
        if (soapObject.hasProperty("POREscPisoPta"))
        {
            Object obj = soapObject.getProperty("POREscPisoPta");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pOREscPisoPta = j.toString();
            }else if (obj!= null && obj instanceof String){
                pOREscPisoPta = (String) obj;
            }
        }
        if (soapObject.hasProperty("PORMailingCorreo"))
        {
            Object obj = soapObject.getProperty("PORMailingCorreo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORMailingCorreo = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                pORMailingCorreo = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PORMailingCorreoSpecified"))
        {
            Object obj = soapObject.getProperty("PORMailingCorreoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORMailingCorreoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                pORMailingCorreoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PORMailingCorreoOrdinario"))
        {
            Object obj = soapObject.getProperty("PORMailingCorreoOrdinario");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORMailingCorreoOrdinario = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                pORMailingCorreoOrdinario = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PORMailingCorreoOrdinarioSpecified"))
        {
            Object obj = soapObject.getProperty("PORMailingCorreoOrdinarioSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORMailingCorreoOrdinarioSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                pORMailingCorreoOrdinarioSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PORMailingNoRecibir"))
        {
            Object obj = soapObject.getProperty("PORMailingNoRecibir");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORMailingNoRecibir = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                pORMailingNoRecibir = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PORMailingNoRecibirSpecified"))
        {
            Object obj = soapObject.getProperty("PORMailingNoRecibirSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORMailingNoRecibirSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                pORMailingNoRecibirSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PORMailingSMS"))
        {
            Object obj = soapObject.getProperty("PORMailingSMS");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORMailingSMS = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                pORMailingSMS = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PORMailingSMSSpecified"))
        {
            Object obj = soapObject.getProperty("PORMailingSMSSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORMailingSMSSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                pORMailingSMSSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PORMecanismoPago"))
        {
            Object obj = soapObject.getProperty("PORMecanismoPago");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORMecanismoPago = j.toString();
            }else if (obj!= null && obj instanceof String){
                pORMecanismoPago = (String) obj;
            }
        }
        if (soapObject.hasProperty("PORMovil"))
        {
            Object obj = soapObject.getProperty("PORMovil");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORMovil = j.toString();
            }else if (obj!= null && obj instanceof String){
                pORMovil = (String) obj;
            }
        }
        if (soapObject.hasProperty("PORNIF"))
        {
            Object obj = soapObject.getProperty("PORNIF");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORNIF = j.toString();
            }else if (obj!= null && obj instanceof String){
                pORNIF = (String) obj;
            }
        }
        if (soapObject.hasProperty("PORNoCuentaCorriente"))
        {
            Object obj = soapObject.getProperty("PORNoCuentaCorriente");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORNoCuentaCorriente = j.toString();
            }else if (obj!= null && obj instanceof String){
                pORNoCuentaCorriente = (String) obj;
            }
        }
        if (soapObject.hasProperty("PORNombre"))
        {
            Object obj = soapObject.getProperty("PORNombre");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORNombre = j.toString();
            }else if (obj!= null && obj instanceof String){
                pORNombre = (String) obj;
            }
        }
        if (soapObject.hasProperty("PORNumero"))
        {
            Object obj = soapObject.getProperty("PORNumero");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORNumero = j.toString();
            }else if (obj!= null && obj instanceof String){
                pORNumero = (String) obj;
            }
        }
        if (soapObject.hasProperty("PORObservaciones"))
        {
            Object obj = soapObject.getProperty("PORObservaciones");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORObservaciones = j.toString();
            }else if (obj!= null && obj instanceof String){
                pORObservaciones = (String) obj;
            }
        }
        if (soapObject.hasProperty("PORPoblacion"))
        {
            Object obj = soapObject.getProperty("PORPoblacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORPoblacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                pORPoblacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("PORProvincia"))
        {
            Object obj = soapObject.getProperty("PORProvincia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORProvincia = j.toString();
            }else if (obj!= null && obj instanceof String){
                pORProvincia = (String) obj;
            }
        }
        if (soapObject.hasProperty("PORTelefono"))
        {
            Object obj = soapObject.getProperty("PORTelefono");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORTelefono = j.toString();
            }else if (obj!= null && obj instanceof String){
                pORTelefono = (String) obj;
            }
        }
        if (soapObject.hasProperty("PORTipoVia"))
        {
            Object obj = soapObject.getProperty("PORTipoVia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pORTipoVia = j.toString();
            }else if (obj!= null && obj instanceof String){
                pORTipoVia = (String) obj;
            }
        }
        if (soapObject.hasProperty("Plazas"))
        {
            Object obj = soapObject.getProperty("Plazas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                plazas = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                plazas = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PlazasSpecified"))
        {
            Object obj = soapObject.getProperty("PlazasSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                plazasSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                plazasSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PotenciaFiscal"))
        {
            Object obj = soapObject.getProperty("PotenciaFiscal");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                potenciaFiscal = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                potenciaFiscal = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PotenciaFiscalSpecified"))
        {
            Object obj = soapObject.getProperty("PotenciaFiscalSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                potenciaFiscalSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                potenciaFiscalSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ProvinciaPrimeraMatriculacion"))
        {
            Object obj = soapObject.getProperty("ProvinciaPrimeraMatriculacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                provinciaPrimeraMatriculacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                provinciaPrimeraMatriculacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("Publicado"))
        {
            Object obj = soapObject.getProperty("Publicado");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicado = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicado = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PublicadoSpecified"))
        {
            Object obj = soapObject.getProperty("PublicadoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicadoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicadoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("SolicitudServicio"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("SolicitudServicio");
            solicitudServicio =  new SolicitudServicio (j);
            
        }
        if (soapObject.hasProperty("TITApellidos"))
        {
            Object obj = soapObject.getProperty("TITApellidos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITApellidos = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITApellidos = (String) obj;
            }
        }
        if (soapObject.hasProperty("TITCP"))
        {
            Object obj = soapObject.getProperty("TITCP");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITCP = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITCP = (String) obj;
            }
        }
        if (soapObject.hasProperty("TITDomicilio"))
        {
            Object obj = soapObject.getProperty("TITDomicilio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITDomicilio = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITDomicilio = (String) obj;
            }
        }
        if (soapObject.hasProperty("TITEmail"))
        {
            Object obj = soapObject.getProperty("TITEmail");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITEmail = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITEmail = (String) obj;
            }
        }
        if (soapObject.hasProperty("TITEscPisoPta"))
        {
            Object obj = soapObject.getProperty("TITEscPisoPta");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITEscPisoPta = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITEscPisoPta = (String) obj;
            }
        }
        if (soapObject.hasProperty("TITMailingCorreo"))
        {
            Object obj = soapObject.getProperty("TITMailingCorreo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITMailingCorreo = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tITMailingCorreo = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("TITMailingCorreoSpecified"))
        {
            Object obj = soapObject.getProperty("TITMailingCorreoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITMailingCorreoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tITMailingCorreoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("TITMailingCorreoOrdinario"))
        {
            Object obj = soapObject.getProperty("TITMailingCorreoOrdinario");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITMailingCorreoOrdinario = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tITMailingCorreoOrdinario = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("TITMailingCorreoOrdinarioSpecified"))
        {
            Object obj = soapObject.getProperty("TITMailingCorreoOrdinarioSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITMailingCorreoOrdinarioSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tITMailingCorreoOrdinarioSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("TITMailingNoRecibir"))
        {
            Object obj = soapObject.getProperty("TITMailingNoRecibir");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITMailingNoRecibir = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tITMailingNoRecibir = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("TITMailingNoRecibirSpecified"))
        {
            Object obj = soapObject.getProperty("TITMailingNoRecibirSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITMailingNoRecibirSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tITMailingNoRecibirSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("TITMailingSMS"))
        {
            Object obj = soapObject.getProperty("TITMailingSMS");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITMailingSMS = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tITMailingSMS = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("TITMailingSMSSpecified"))
        {
            Object obj = soapObject.getProperty("TITMailingSMSSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITMailingSMSSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tITMailingSMSSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("TITMecanismoPago"))
        {
            Object obj = soapObject.getProperty("TITMecanismoPago");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITMecanismoPago = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITMecanismoPago = (String) obj;
            }
        }
        if (soapObject.hasProperty("TITMovil"))
        {
            Object obj = soapObject.getProperty("TITMovil");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITMovil = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITMovil = (String) obj;
            }
        }
        if (soapObject.hasProperty("TITNIF"))
        {
            Object obj = soapObject.getProperty("TITNIF");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITNIF = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITNIF = (String) obj;
            }
        }
        if (soapObject.hasProperty("TITNoCuentaCorriente"))
        {
            Object obj = soapObject.getProperty("TITNoCuentaCorriente");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITNoCuentaCorriente = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITNoCuentaCorriente = (String) obj;
            }
        }
        if (soapObject.hasProperty("TITNombre"))
        {
            Object obj = soapObject.getProperty("TITNombre");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITNombre = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITNombre = (String) obj;
            }
        }
        if (soapObject.hasProperty("TITNumero"))
        {
            Object obj = soapObject.getProperty("TITNumero");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITNumero = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITNumero = (String) obj;
            }
        }
        if (soapObject.hasProperty("TITObservaciones"))
        {
            Object obj = soapObject.getProperty("TITObservaciones");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITObservaciones = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITObservaciones = (String) obj;
            }
        }
        if (soapObject.hasProperty("TITPoblacion"))
        {
            Object obj = soapObject.getProperty("TITPoblacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITPoblacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITPoblacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("TITProvincia"))
        {
            Object obj = soapObject.getProperty("TITProvincia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITProvincia = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITProvincia = (String) obj;
            }
        }
        if (soapObject.hasProperty("TITTelefono"))
        {
            Object obj = soapObject.getProperty("TITTelefono");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITTelefono = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITTelefono = (String) obj;
            }
        }
        if (soapObject.hasProperty("TITTipoVia"))
        {
            Object obj = soapObject.getProperty("TITTipoVia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tITTipoVia = j.toString();
            }else if (obj!= null && obj instanceof String){
                tITTipoVia = (String) obj;
            }
        }
        if (soapObject.hasProperty("TipoFichaTecnica"))
        {
            Object obj = soapObject.getProperty("TipoFichaTecnica");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tipoFichaTecnica = j.toString();
            }else if (obj!= null && obj instanceof String){
                tipoFichaTecnica = (String) obj;
            }
        }
        if (soapObject.hasProperty("TipoMarcaModelo"))
        {
            Object obj = soapObject.getProperty("TipoMarcaModelo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tipoMarcaModelo = j.toString();
            }else if (obj!= null && obj instanceof String){
                tipoMarcaModelo = (String) obj;
            }
        }
        if (soapObject.hasProperty("TipoMatricula"))
        {
            Object obj = soapObject.getProperty("TipoMatricula");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tipoMatricula = j.toString();
            }else if (obj!= null && obj instanceof String){
                tipoMatricula = (String) obj;
            }
        }
        if (soapObject.hasProperty("VehiculoClasificacion"))
        {
            Object obj = soapObject.getProperty("VehiculoClasificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehiculoClasificacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehiculoClasificacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("VehiculoCodigoInterno"))
        {
            Object obj = soapObject.getProperty("VehiculoCodigoInterno");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehiculoCodigoInterno = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehiculoCodigoInterno = (String) obj;
            }
        }
        if (soapObject.hasProperty("VehiculoConstruccion"))
        {
            Object obj = soapObject.getProperty("VehiculoConstruccion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehiculoConstruccion = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehiculoConstruccion = (String) obj;
            }
        }
        if (soapObject.hasProperty("VehiculoUtilizacion"))
        {
            Object obj = soapObject.getProperty("VehiculoUtilizacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehiculoUtilizacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehiculoUtilizacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("VelocidadMaxima"))
        {
            Object obj = soapObject.getProperty("VelocidadMaxima");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                velocidadMaxima = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                velocidadMaxima = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("VelocidadMaximaSpecified"))
        {
            Object obj = soapObject.getProperty("VelocidadMaximaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                velocidadMaximaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                velocidadMaximaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacion"))
        {
            Object obj = soapObject.getProperty("fechaModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaModificacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("fechaModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("timestamp"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("timestamp");
            timestamp = new VectorByte(j);
        }
        if (soapObject.hasProperty("usuarioModificacion"))
        {
            Object obj = soapObject.getProperty("usuarioModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                usuarioModificacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("usuarioModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("usuarioModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                usuarioModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return bastidor;
            case 1:
                return cambioManual;
            case 2:
                return cambioManualSpecified;
            case 3:
                return cilindada;
            case 4:
                return cilindadaSpecified;
            case 5:
                return combustible;
            case 6:
                return conRemolque;
            case 7:
                return conRemolqueSpecified;
            case 8:
                return conTurbo;
            case 9:
                return conTurboSpecified;
            case 10:
                return contrasenyaHomologacion;
            case 11:
                return cuatrotiempos;
            case 12:
                return cuatrotiemposSpecified;
            case 13:
                return estacionUltimaValidez;
            case 14:
                return extensionBastidor;
            case 15:
                return fK_IdClassificacionField;
            case 16:
                return fK_IdClassificacionSpecifiedField;
            case 17:
                return fK_IdCombustible;
            case 18:
                return fK_IdCombustibleSpecified;
            case 19:
                return fK_IdSolicitud;
            case 20:
                return fK_IdSolicitudSpecified;
            case 21:
                return fechaPrimeraMatriculacion;
            case 22:
                return fechaPrimeraMatriculacionSpecified;
            case 23:
                return fechaRegistro;
            case 24:
                return fechaRegistroSpecified;
            case 25:
                return fechaUltimaValidez;
            case 26:
                return fechaUltimaValidezSpecified;
            case 27:
                return idSolicitudDatosPalnos;
            case 28:
                return idSolicitudDatosPalnosSpecified;
            case 29:
                return kilometros;
            case 30:
                return kilometrosSpecified;
            case 31:
                return mMA;
            case 32:
                return mMASpecified;
            case 33:
                return mOM;
            case 34:
                return mOMSpecified;
            case 35:
                return marcaVehiculo;
            case 36:
                return matricula;
            case 37:
                return modeloVehiculo;
            case 38:
                return notasOcultas;
            case 39:
                return numEjes;
            case 40:
                return numEjesSpecified;
            case 41:
                return pMA;
            case 42:
                return pMASpecified;
            case 43:
                return pORApellidos;
            case 44:
                return pORCP;
            case 45:
                return pORDomicilio;
            case 46:
                return pOREmail;
            case 47:
                return pOREscPisoPta;
            case 48:
                return pORMailingCorreo;
            case 49:
                return pORMailingCorreoSpecified;
            case 50:
                return pORMailingCorreoOrdinario;
            case 51:
                return pORMailingCorreoOrdinarioSpecified;
            case 52:
                return pORMailingNoRecibir;
            case 53:
                return pORMailingNoRecibirSpecified;
            case 54:
                return pORMailingSMS;
            case 55:
                return pORMailingSMSSpecified;
            case 56:
                return pORMecanismoPago;
            case 57:
                return pORMovil;
            case 58:
                return pORNIF;
            case 59:
                return pORNoCuentaCorriente;
            case 60:
                return pORNombre;
            case 61:
                return pORNumero;
            case 62:
                return pORObservaciones;
            case 63:
                return pORPoblacion;
            case 64:
                return pORProvincia;
            case 65:
                return pORTelefono;
            case 66:
                return pORTipoVia;
            case 67:
                return plazas;
            case 68:
                return plazasSpecified;
            case 69:
                return potenciaFiscal;
            case 70:
                return potenciaFiscalSpecified;
            case 71:
                return provinciaPrimeraMatriculacion;
            case 72:
                return publicado;
            case 73:
                return publicadoSpecified;
            case 74:
                return solicitudServicio;
            case 75:
                return tITApellidos;
            case 76:
                return tITCP;
            case 77:
                return tITDomicilio;
            case 78:
                return tITEmail;
            case 79:
                return tITEscPisoPta;
            case 80:
                return tITMailingCorreo;
            case 81:
                return tITMailingCorreoSpecified;
            case 82:
                return tITMailingCorreoOrdinario;
            case 83:
                return tITMailingCorreoOrdinarioSpecified;
            case 84:
                return tITMailingNoRecibir;
            case 85:
                return tITMailingNoRecibirSpecified;
            case 86:
                return tITMailingSMS;
            case 87:
                return tITMailingSMSSpecified;
            case 88:
                return tITMecanismoPago;
            case 89:
                return tITMovil;
            case 90:
                return tITNIF;
            case 91:
                return tITNoCuentaCorriente;
            case 92:
                return tITNombre;
            case 93:
                return tITNumero;
            case 94:
                return tITObservaciones;
            case 95:
                return tITPoblacion;
            case 96:
                return tITProvincia;
            case 97:
                return tITTelefono;
            case 98:
                return tITTipoVia;
            case 99:
                return tipoFichaTecnica;
            case 100:
                return tipoMarcaModelo;
            case 101:
                return tipoMatricula;
            case 102:
                return vehiculoClasificacion;
            case 103:
                return vehiculoCodigoInterno;
            case 104:
                return vehiculoConstruccion;
            case 105:
                return vehiculoUtilizacion;
            case 106:
                return velocidadMaxima;
            case 107:
                return velocidadMaximaSpecified;
            case 108:
                return fechaModificacion;
            case 109:
                return fechaModificacionSpecified;
            case 110:
                return timestamp.toString();
            case 111:
                return usuarioModificacion;
            case 112:
                return usuarioModificacionSpecified;
            case 113:
                return id;
            case 114:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 115;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Bastidor";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CambioManual";
                break;
            case 2:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CambioManualSpecified";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Cilindada";
                break;
            case 4:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CilindadaSpecified";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Combustible";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ConRemolque";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ConRemolqueSpecified";
                break;
            case 8:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ConTurbo";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ConTurboSpecified";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ContrasenyaHomologacion";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Cuatrotiempos";
                break;
            case 12:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CuatrotiemposSpecified";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EstacionUltimaValidez";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExtensionBastidor";
                break;
            case 15:
                info.type = Long.class;
                info.name = "FK_IdClassificacion";
                break;
            case 16:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdClassificacionSpecified";
                break;
            case 17:
                info.type = Long.class;
                info.name = "FK_IdCombustible";
                break;
            case 18:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdCombustibleSpecified";
                break;
            case 19:
                info.type = Long.class;
                info.name = "FK_IdSolicitud";
                break;
            case 20:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdSolicitudSpecified";
                break;
            case 21:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaPrimeraMatriculacion";
                break;
            case 22:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaPrimeraMatriculacionSpecified";
                break;
            case 23:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaRegistro";
                break;
            case 24:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaRegistroSpecified";
                break;
            case 25:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaUltimaValidez";
                break;
            case 26:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaUltimaValidezSpecified";
                break;
            case 27:
                info.type = Long.class;
                info.name = "IdSolicitudDatosPalnos";
                break;
            case 28:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdSolicitudDatosPalnosSpecified";
                break;
            case 29:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Kilometros";
                break;
            case 30:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "KilometrosSpecified";
                break;
            case 31:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "MMA";
                break;
            case 32:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "MMASpecified";
                break;
            case 33:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "MOM";
                break;
            case 34:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "MOMSpecified";
                break;
            case 35:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "MarcaVehiculo";
                break;
            case 36:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Matricula";
                break;
            case 37:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ModeloVehiculo";
                break;
            case 38:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NotasOcultas";
                break;
            case 39:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "NumEjes";
                break;
            case 40:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "NumEjesSpecified";
                break;
            case 41:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PMA";
                break;
            case 42:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PMASpecified";
                break;
            case 43:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PORApellidos";
                break;
            case 44:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PORCP";
                break;
            case 45:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PORDomicilio";
                break;
            case 46:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "POREmail";
                break;
            case 47:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "POREscPisoPta";
                break;
            case 48:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PORMailingCorreo";
                break;
            case 49:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PORMailingCorreoSpecified";
                break;
            case 50:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PORMailingCorreoOrdinario";
                break;
            case 51:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PORMailingCorreoOrdinarioSpecified";
                break;
            case 52:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PORMailingNoRecibir";
                break;
            case 53:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PORMailingNoRecibirSpecified";
                break;
            case 54:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PORMailingSMS";
                break;
            case 55:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PORMailingSMSSpecified";
                break;
            case 56:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PORMecanismoPago";
                break;
            case 57:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PORMovil";
                break;
            case 58:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PORNIF";
                break;
            case 59:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PORNoCuentaCorriente";
                break;
            case 60:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PORNombre";
                break;
            case 61:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PORNumero";
                break;
            case 62:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PORObservaciones";
                break;
            case 63:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PORPoblacion";
                break;
            case 64:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PORProvincia";
                break;
            case 65:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PORTelefono";
                break;
            case 66:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PORTipoVia";
                break;
            case 67:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Plazas";
                break;
            case 68:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PlazasSpecified";
                break;
            case 69:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PotenciaFiscal";
                break;
            case 70:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PotenciaFiscalSpecified";
                break;
            case 71:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProvinciaPrimeraMatriculacion";
                break;
            case 72:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Publicado";
                break;
            case 73:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PublicadoSpecified";
                break;
            case 74:
                info.type = SolicitudServicio.class;
                info.name = "SolicitudServicio";
                break;
            case 75:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITApellidos";
                break;
            case 76:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITCP";
                break;
            case 77:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITDomicilio";
                break;
            case 78:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITEmail";
                break;
            case 79:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITEscPisoPta";
                break;
            case 80:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TITMailingCorreo";
                break;
            case 81:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TITMailingCorreoSpecified";
                break;
            case 82:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TITMailingCorreoOrdinario";
                break;
            case 83:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TITMailingCorreoOrdinarioSpecified";
                break;
            case 84:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TITMailingNoRecibir";
                break;
            case 85:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TITMailingNoRecibirSpecified";
                break;
            case 86:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TITMailingSMS";
                break;
            case 87:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TITMailingSMSSpecified";
                break;
            case 88:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITMecanismoPago";
                break;
            case 89:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITMovil";
                break;
            case 90:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITNIF";
                break;
            case 91:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITNoCuentaCorriente";
                break;
            case 92:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITNombre";
                break;
            case 93:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITNumero";
                break;
            case 94:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITObservaciones";
                break;
            case 95:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITPoblacion";
                break;
            case 96:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITProvincia";
                break;
            case 97:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITTelefono";
                break;
            case 98:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TITTipoVia";
                break;
            case 99:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TipoFichaTecnica";
                break;
            case 100:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TipoMarcaModelo";
                break;
            case 101:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TipoMatricula";
                break;
            case 102:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VehiculoClasificacion";
                break;
            case 103:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VehiculoCodigoInterno";
                break;
            case 104:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VehiculoConstruccion";
                break;
            case 105:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VehiculoUtilizacion";
                break;
            case 106:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "VelocidadMaxima";
                break;
            case 107:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "VelocidadMaximaSpecified";
                break;
            case 108:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "fechaModificacion";
                break;
            case 109:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "fechaModificacionSpecified";
                break;
            case 110:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "timestamp";
                break;
            case 111:
                info.type = Long.class;
                info.name = "usuarioModificacion";
                break;
            case 112:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "usuarioModificacionSpecified";
                break;
            case 113:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 114:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    

    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
