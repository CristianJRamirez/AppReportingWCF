package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService;
//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/15/2017 9:13:06 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorFactura;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorSolicitudServicio;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.TipoMatricula;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorByte;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class Vehiculo implements KvmSerializable {
    
    public String bastidor;
    public boolean cambioManual;
    public boolean cambioManualSpecified;
    public int cilindada;
    public boolean cilindadaSpecified;
    public boolean conRemolque;
    public boolean conRemolqueSpecified;
    public boolean conTurbo;
    public boolean conTurboSpecified;
    public String contrasenyaHomologacion;
    public boolean cuatroTiempos;
    public boolean cuatroTiemposSpecified;
    public boolean deBaja;
    public boolean deBajaSpecified;
    public String estacionUltimaValidez;
    public String extensionBastidor;
    public long fK_IdCombustible;
    public boolean fK_IdCombustibleSpecified;
    public long fK_IdMarcaVehiculo;
    public boolean fK_IdMarcaVehiculoSpecified;
    public long fK_IdModeloVehiculo;
    public boolean fK_IdModeloVehiculoSpecified;
    public long fK_IdTipoMatricula;
    public boolean fK_IdTipoMatriculaSpecified;
    public long fK_IdVehiculoClasificacion;
    public boolean fK_IdVehiculoClasificacionSpecified;
    public VectorFactura factura;
    public String fechaPrimeraMatriculacion;
    public boolean fechaPrimeraMatriculacionSpecified;
    public String fechaUltimaValidez;
    public boolean fechaUltimaValidezSpecified;
    public long idVehiculo;
    public boolean idVehiculoSpecified;
    public int kilometros;
    public boolean kilometrosSpecified;
    public String lugarPrimeraMatriculacion;
    public int mMA;
    public boolean mMASpecified;
    public int mOM;
    public boolean mOMSpecified;
    public String matricula;
    public String notasOcultas;
    public int numEjes;
    public boolean numEjesSpecified;
    public String observaciones;
    public int pMA;
    public boolean pMASpecified;
    public int plazas;
    public boolean plazasSpecified;
    public int potenciaFiscal;
    public boolean potenciaFiscalSpecified;
    public boolean publicado;
    public boolean publicadoSpecified;
    public VectorSolicitudServicio solicitudServicio;
    public String tipoFichaTecnica;
    public String tipoMarcaModelo;
    public TipoMatricula tipoMatricula;
    public int velocidadMaxima;
    public boolean velocidadMaximaSpecified;
    public String fechaModificacion;
    public boolean fechaModificacionSpecified;
    public VectorByte timestamp;
    public long usuarioModificacion;
    public boolean usuarioModificacionSpecified;
    public String id;
    public String ref;
    
    public Vehiculo(){}
    
    public Vehiculo(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Bastidor"))
        {
            Object obj = soapObject.getProperty("Bastidor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                bastidor = j.toString();
            }else if (obj!= null && obj instanceof String){
                bastidor = (String) obj;
            }
        }
        if (soapObject.hasProperty("CambioManual"))
        {
            Object obj = soapObject.getProperty("CambioManual");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cambioManual = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cambioManual = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("CambioManualSpecified"))
        {
            Object obj = soapObject.getProperty("CambioManualSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cambioManualSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cambioManualSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Cilindada"))
        {
            Object obj = soapObject.getProperty("Cilindada");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cilindada = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                cilindada = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CilindadaSpecified"))
        {
            Object obj = soapObject.getProperty("CilindadaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cilindadaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cilindadaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ConRemolque"))
        {
            Object obj = soapObject.getProperty("ConRemolque");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                conRemolque = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                conRemolque = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ConRemolqueSpecified"))
        {
            Object obj = soapObject.getProperty("ConRemolqueSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                conRemolqueSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                conRemolqueSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ConTurbo"))
        {
            Object obj = soapObject.getProperty("ConTurbo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                conTurbo = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                conTurbo = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ConTurboSpecified"))
        {
            Object obj = soapObject.getProperty("ConTurboSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                conTurboSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                conTurboSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ContrasenyaHomologacion"))
        {
            Object obj = soapObject.getProperty("ContrasenyaHomologacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                contrasenyaHomologacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                contrasenyaHomologacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("CuatroTiempos"))
        {
            Object obj = soapObject.getProperty("CuatroTiempos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cuatroTiempos = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cuatroTiempos = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("CuatroTiemposSpecified"))
        {
            Object obj = soapObject.getProperty("CuatroTiemposSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cuatroTiemposSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cuatroTiemposSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("DeBaja"))
        {
            Object obj = soapObject.getProperty("DeBaja");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                deBaja = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                deBaja = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("DeBajaSpecified"))
        {
            Object obj = soapObject.getProperty("DeBajaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                deBajaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                deBajaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("EstacionUltimaValidez"))
        {
            Object obj = soapObject.getProperty("EstacionUltimaValidez");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                estacionUltimaValidez = j.toString();
            }else if (obj!= null && obj instanceof String){
                estacionUltimaValidez = (String) obj;
            }
        }
        if (soapObject.hasProperty("ExtensionBastidor"))
        {
            Object obj = soapObject.getProperty("ExtensionBastidor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                extensionBastidor = j.toString();
            }else if (obj!= null && obj instanceof String){
                extensionBastidor = (String) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCombustible"))
        {
            Object obj = soapObject.getProperty("FK_IdCombustible");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCombustible = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdCombustible = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCombustibleSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdCombustibleSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCombustibleSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdCombustibleSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdMarcaVehiculo"))
        {
            Object obj = soapObject.getProperty("FK_IdMarcaVehiculo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdMarcaVehiculo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdMarcaVehiculo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdMarcaVehiculoSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdMarcaVehiculoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdMarcaVehiculoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdMarcaVehiculoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdModeloVehiculo"))
        {
            Object obj = soapObject.getProperty("FK_IdModeloVehiculo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdModeloVehiculo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdModeloVehiculo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdModeloVehiculoSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdModeloVehiculoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdModeloVehiculoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdModeloVehiculoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTipoMatricula"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoMatricula");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoMatricula = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdTipoMatricula = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTipoMatriculaSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoMatriculaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoMatriculaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdTipoMatriculaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdVehiculoClasificacion"))
        {
            Object obj = soapObject.getProperty("FK_IdVehiculoClasificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdVehiculoClasificacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdVehiculoClasificacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdVehiculoClasificacionSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdVehiculoClasificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdVehiculoClasificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdVehiculoClasificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Factura"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Factura");
            factura = new VectorFactura(j);
        }
        if (soapObject.hasProperty("FechaPrimeraMatriculacion"))
        {
            Object obj = soapObject.getProperty("FechaPrimeraMatriculacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaPrimeraMatriculacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaPrimeraMatriculacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaPrimeraMatriculacionSpecified"))
        {
            Object obj = soapObject.getProperty("FechaPrimeraMatriculacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaPrimeraMatriculacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaPrimeraMatriculacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaUltimaValidez"))
        {
            Object obj = soapObject.getProperty("FechaUltimaValidez");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaUltimaValidez = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaUltimaValidez = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaUltimaValidezSpecified"))
        {
            Object obj = soapObject.getProperty("FechaUltimaValidezSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaUltimaValidezSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaUltimaValidezSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdVehiculo"))
        {
            Object obj = soapObject.getProperty("IdVehiculo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idVehiculo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idVehiculo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdVehiculoSpecified"))
        {
            Object obj = soapObject.getProperty("IdVehiculoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idVehiculoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idVehiculoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Kilometros"))
        {
            Object obj = soapObject.getProperty("Kilometros");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                kilometros = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                kilometros = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("KilometrosSpecified"))
        {
            Object obj = soapObject.getProperty("KilometrosSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                kilometrosSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                kilometrosSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("LugarPrimeraMatriculacion"))
        {
            Object obj = soapObject.getProperty("LugarPrimeraMatriculacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lugarPrimeraMatriculacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                lugarPrimeraMatriculacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("MMA"))
        {
            Object obj = soapObject.getProperty("MMA");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mMA = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                mMA = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("MMASpecified"))
        {
            Object obj = soapObject.getProperty("MMASpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mMASpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                mMASpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("MOM"))
        {
            Object obj = soapObject.getProperty("MOM");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mOM = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                mOM = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("MOMSpecified"))
        {
            Object obj = soapObject.getProperty("MOMSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mOMSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                mOMSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Matricula"))
        {
            Object obj = soapObject.getProperty("Matricula");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                matricula = j.toString();
            }else if (obj!= null && obj instanceof String){
                matricula = (String) obj;
            }
        }
        if (soapObject.hasProperty("NotasOcultas"))
        {
            Object obj = soapObject.getProperty("NotasOcultas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                notasOcultas = j.toString();
            }else if (obj!= null && obj instanceof String){
                notasOcultas = (String) obj;
            }
        }
        if (soapObject.hasProperty("NumEjes"))
        {
            Object obj = soapObject.getProperty("NumEjes");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numEjes = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                numEjes = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("NumEjesSpecified"))
        {
            Object obj = soapObject.getProperty("NumEjesSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numEjesSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                numEjesSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Observaciones"))
        {
            Object obj = soapObject.getProperty("Observaciones");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                observaciones = j.toString();
            }else if (obj!= null && obj instanceof String){
                observaciones = (String) obj;
            }
        }
        if (soapObject.hasProperty("PMA"))
        {
            Object obj = soapObject.getProperty("PMA");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pMA = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                pMA = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PMASpecified"))
        {
            Object obj = soapObject.getProperty("PMASpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pMASpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                pMASpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Plazas"))
        {
            Object obj = soapObject.getProperty("Plazas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                plazas = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                plazas = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PlazasSpecified"))
        {
            Object obj = soapObject.getProperty("PlazasSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                plazasSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                plazasSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PotenciaFiscal"))
        {
            Object obj = soapObject.getProperty("PotenciaFiscal");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                potenciaFiscal = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                potenciaFiscal = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PotenciaFiscalSpecified"))
        {
            Object obj = soapObject.getProperty("PotenciaFiscalSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                potenciaFiscalSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                potenciaFiscalSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Publicado"))
        {
            Object obj = soapObject.getProperty("Publicado");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicado = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicado = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PublicadoSpecified"))
        {
            Object obj = soapObject.getProperty("PublicadoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicadoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicadoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("SolicitudServicio"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("SolicitudServicio");
            solicitudServicio = new VectorSolicitudServicio(j);
        }
        if (soapObject.hasProperty("TipoFichaTecnica"))
        {
            Object obj = soapObject.getProperty("TipoFichaTecnica");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tipoFichaTecnica = j.toString();
            }else if (obj!= null && obj instanceof String){
                tipoFichaTecnica = (String) obj;
            }
        }
        if (soapObject.hasProperty("TipoMarcaModelo"))
        {
            Object obj = soapObject.getProperty("TipoMarcaModelo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tipoMarcaModelo = j.toString();
            }else if (obj!= null && obj instanceof String){
                tipoMarcaModelo = (String) obj;
            }
        }
        if (soapObject.hasProperty("TipoMatricula"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("TipoMatricula");
            tipoMatricula =  new TipoMatricula (j);
            
        }
        if (soapObject.hasProperty("VelocidadMaxima"))
        {
            Object obj = soapObject.getProperty("VelocidadMaxima");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                velocidadMaxima = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                velocidadMaxima = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("VelocidadMaximaSpecified"))
        {
            Object obj = soapObject.getProperty("VelocidadMaximaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                velocidadMaximaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                velocidadMaximaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacion"))
        {
            Object obj = soapObject.getProperty("fechaModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaModificacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("fechaModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("timestamp"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("timestamp");
            timestamp = new VectorByte(j);
        }
        if (soapObject.hasProperty("usuarioModificacion"))
        {
            Object obj = soapObject.getProperty("usuarioModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                usuarioModificacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("usuarioModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("usuarioModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                usuarioModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return bastidor;
            case 1:
                return cambioManual;
            case 2:
                return cambioManualSpecified;
            case 3:
                return cilindada;
            case 4:
                return cilindadaSpecified;
            case 5:
                return conRemolque;
            case 6:
                return conRemolqueSpecified;
            case 7:
                return conTurbo;
            case 8:
                return conTurboSpecified;
            case 9:
                return contrasenyaHomologacion;
            case 10:
                return cuatroTiempos;
            case 11:
                return cuatroTiemposSpecified;
            case 12:
                return deBaja;
            case 13:
                return deBajaSpecified;
            case 14:
                return estacionUltimaValidez;
            case 15:
                return extensionBastidor;
            case 16:
                return fK_IdCombustible;
            case 17:
                return fK_IdCombustibleSpecified;
            case 18:
                return fK_IdMarcaVehiculo;
            case 19:
                return fK_IdMarcaVehiculoSpecified;
            case 20:
                return fK_IdModeloVehiculo;
            case 21:
                return fK_IdModeloVehiculoSpecified;
            case 22:
                return fK_IdTipoMatricula;
            case 23:
                return fK_IdTipoMatriculaSpecified;
            case 24:
                return fK_IdVehiculoClasificacion;
            case 25:
                return fK_IdVehiculoClasificacionSpecified;
            case 26:
                return factura;
            case 27:
                return fechaPrimeraMatriculacion;
            case 28:
                return fechaPrimeraMatriculacionSpecified;
            case 29:
                return fechaUltimaValidez;
            case 30:
                return fechaUltimaValidezSpecified;
            case 31:
                return idVehiculo;
            case 32:
                return idVehiculoSpecified;
            case 33:
                return kilometros;
            case 34:
                return kilometrosSpecified;
            case 35:
                return lugarPrimeraMatriculacion;
            case 36:
                return mMA;
            case 37:
                return mMASpecified;
            case 38:
                return mOM;
            case 39:
                return mOMSpecified;
            case 40:
                return matricula;
            case 41:
                return notasOcultas;
            case 42:
                return numEjes;
            case 43:
                return numEjesSpecified;
            case 44:
                return observaciones;
            case 45:
                return pMA;
            case 46:
                return pMASpecified;
            case 47:
                return plazas;
            case 48:
                return plazasSpecified;
            case 49:
                return potenciaFiscal;
            case 50:
                return potenciaFiscalSpecified;
            case 51:
                return publicado;
            case 52:
                return publicadoSpecified;
            case 53:
                return solicitudServicio;
            case 54:
                return tipoFichaTecnica;
            case 55:
                return tipoMarcaModelo;
            case 56:
                return tipoMatricula;
            case 57:
                return velocidadMaxima;
            case 58:
                return velocidadMaximaSpecified;
            case 59:
                return fechaModificacion;
            case 60:
                return fechaModificacionSpecified;
            case 61:
                return timestamp.toString();
            case 62:
                return usuarioModificacion;
            case 63:
                return usuarioModificacionSpecified;
            case 64:
                return id;
            case 65:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 66;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Bastidor";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CambioManual";
                break;
            case 2:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CambioManualSpecified";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Cilindada";
                break;
            case 4:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CilindadaSpecified";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ConRemolque";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ConRemolqueSpecified";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ConTurbo";
                break;
            case 8:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ConTurboSpecified";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ContrasenyaHomologacion";
                break;
            case 10:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CuatroTiempos";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CuatroTiemposSpecified";
                break;
            case 12:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "DeBaja";
                break;
            case 13:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "DeBajaSpecified";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EstacionUltimaValidez";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExtensionBastidor";
                break;
            case 16:
                info.type = Long.class;
                info.name = "FK_IdCombustible";
                break;
            case 17:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdCombustibleSpecified";
                break;
            case 18:
                info.type = Long.class;
                info.name = "FK_IdMarcaVehiculo";
                break;
            case 19:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdMarcaVehiculoSpecified";
                break;
            case 20:
                info.type = Long.class;
                info.name = "FK_IdModeloVehiculo";
                break;
            case 21:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdModeloVehiculoSpecified";
                break;
            case 22:
                info.type = Long.class;
                info.name = "FK_IdTipoMatricula";
                break;
            case 23:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdTipoMatriculaSpecified";
                break;
            case 24:
                info.type = Long.class;
                info.name = "FK_IdVehiculoClasificacion";
                break;
            case 25:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdVehiculoClasificacionSpecified";
                break;
            case 26:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "Factura";
                break;
            case 27:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaPrimeraMatriculacion";
                break;
            case 28:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaPrimeraMatriculacionSpecified";
                break;
            case 29:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaUltimaValidez";
                break;
            case 30:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaUltimaValidezSpecified";
                break;
            case 31:
                info.type = Long.class;
                info.name = "IdVehiculo";
                break;
            case 32:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdVehiculoSpecified";
                break;
            case 33:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Kilometros";
                break;
            case 34:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "KilometrosSpecified";
                break;
            case 35:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LugarPrimeraMatriculacion";
                break;
            case 36:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "MMA";
                break;
            case 37:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "MMASpecified";
                break;
            case 38:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "MOM";
                break;
            case 39:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "MOMSpecified";
                break;
            case 40:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Matricula";
                break;
            case 41:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NotasOcultas";
                break;
            case 42:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "NumEjes";
                break;
            case 43:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "NumEjesSpecified";
                break;
            case 44:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Observaciones";
                break;
            case 45:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PMA";
                break;
            case 46:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PMASpecified";
                break;
            case 47:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Plazas";
                break;
            case 48:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PlazasSpecified";
                break;
            case 49:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PotenciaFiscal";
                break;
            case 50:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PotenciaFiscalSpecified";
                break;
            case 51:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Publicado";
                break;
            case 52:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PublicadoSpecified";
                break;
            case 53:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "SolicitudServicio";
                break;
            case 54:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TipoFichaTecnica";
                break;
            case 55:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TipoMarcaModelo";
                break;
            case 56:
                info.type = TipoMatricula.class;
                info.name = "TipoMatricula";
                break;
            case 57:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "VelocidadMaxima";
                break;
            case 58:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "VelocidadMaximaSpecified";
                break;
            case 59:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "fechaModificacion";
                break;
            case 60:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "fechaModificacionSpecified";
                break;
            case 61:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "timestamp";
                break;
            case 62:
                info.type = Long.class;
                info.name = "usuarioModificacion";
                break;
            case 63:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "usuarioModificacionSpecified";
                break;
            case 64:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 65:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
