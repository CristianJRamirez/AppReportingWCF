package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService;
//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/15/2017 9:13:05 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.FacturaAlbaran;
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorByte;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class FacturaAlbaranSubTotal implements KvmSerializable {
    
    public double baseImponible;
    public boolean baseImponibleSpecified;
    public long fK_IdFacturaAlbaran;
    public boolean fK_IdFacturaAlbaranSpecified;
    public FacturaAlbaran facturaAlbaran;
    public long idFacturaAlbaranSubTotal;
    public boolean idFacturaAlbaranSubTotalSpecified;
    public double iva;
    public boolean ivaSpecified;
    public int ivaValor;
    public boolean ivaValorSpecified;
    public boolean publicado;
    public boolean publicadoSpecified;
    public double subTotal;
    public boolean subTotalSpecified;
    public double tasas;
    public boolean tasasSpecified;
    public String fechaModificacion;
    public boolean fechaModificacionSpecified;
    public VectorByte timestamp;
    public long usuarioModificacion;
    public boolean usuarioModificacionSpecified;
    public String id;
    public String ref;
    
    public FacturaAlbaranSubTotal(){}
    
    public FacturaAlbaranSubTotal(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("BaseImponible"))
        {
            Object obj = soapObject.getProperty("BaseImponible");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                baseImponible = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                baseImponible = (Double) obj;
            }
        }
        if (soapObject.hasProperty("BaseImponibleSpecified"))
        {
            Object obj = soapObject.getProperty("BaseImponibleSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                baseImponibleSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                baseImponibleSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdFacturaAlbaran"))
        {
            Object obj = soapObject.getProperty("FK_IdFacturaAlbaran");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdFacturaAlbaran = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdFacturaAlbaran = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdFacturaAlbaranSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdFacturaAlbaranSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdFacturaAlbaranSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdFacturaAlbaranSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FacturaAlbaran"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("FacturaAlbaran");
            facturaAlbaran =  new FacturaAlbaran (j);
            
        }
        if (soapObject.hasProperty("IdFacturaAlbaranSubTotal"))
        {
            Object obj = soapObject.getProperty("IdFacturaAlbaranSubTotal");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idFacturaAlbaranSubTotal = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idFacturaAlbaranSubTotal = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdFacturaAlbaranSubTotalSpecified"))
        {
            Object obj = soapObject.getProperty("IdFacturaAlbaranSubTotalSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idFacturaAlbaranSubTotalSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idFacturaAlbaranSubTotalSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Iva"))
        {
            Object obj = soapObject.getProperty("Iva");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                iva = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                iva = (Double) obj;
            }
        }
        if (soapObject.hasProperty("IvaSpecified"))
        {
            Object obj = soapObject.getProperty("IvaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ivaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                ivaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IvaValor"))
        {
            Object obj = soapObject.getProperty("IvaValor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ivaValor = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                ivaValor = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IvaValorSpecified"))
        {
            Object obj = soapObject.getProperty("IvaValorSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ivaValorSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                ivaValorSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Publicado"))
        {
            Object obj = soapObject.getProperty("Publicado");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicado = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicado = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PublicadoSpecified"))
        {
            Object obj = soapObject.getProperty("PublicadoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicadoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicadoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("SubTotal"))
        {
            Object obj = soapObject.getProperty("SubTotal");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                subTotal = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                subTotal = (Double) obj;
            }
        }
        if (soapObject.hasProperty("SubTotalSpecified"))
        {
            Object obj = soapObject.getProperty("SubTotalSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                subTotalSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                subTotalSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Tasas"))
        {
            Object obj = soapObject.getProperty("Tasas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasas = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                tasas = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TasasSpecified"))
        {
            Object obj = soapObject.getProperty("TasasSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasasSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tasasSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacion"))
        {
            Object obj = soapObject.getProperty("fechaModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaModificacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("fechaModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("timestamp"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("timestamp");
            timestamp = new VectorByte(j);
        }
        if (soapObject.hasProperty("usuarioModificacion"))
        {
            Object obj = soapObject.getProperty("usuarioModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                usuarioModificacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("usuarioModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("usuarioModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                usuarioModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return baseImponible;
            case 1:
                return baseImponibleSpecified;
            case 2:
                return fK_IdFacturaAlbaran;
            case 3:
                return fK_IdFacturaAlbaranSpecified;
            case 4:
                return facturaAlbaran;
            case 5:
                return idFacturaAlbaranSubTotal;
            case 6:
                return idFacturaAlbaranSubTotalSpecified;
            case 7:
                return iva;
            case 8:
                return ivaSpecified;
            case 9:
                return ivaValor;
            case 10:
                return ivaValorSpecified;
            case 11:
                return publicado;
            case 12:
                return publicadoSpecified;
            case 13:
                return subTotal;
            case 14:
                return subTotalSpecified;
            case 15:
                return tasas;
            case 16:
                return tasasSpecified;
            case 17:
                return fechaModificacion;
            case 18:
                return fechaModificacionSpecified;
            case 19:
                return timestamp.toString();
            case 20:
                return usuarioModificacion;
            case 21:
                return usuarioModificacionSpecified;
            case 22:
                return id;
            case 23:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 24;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = Double.class;
                info.name = "BaseImponible";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "BaseImponibleSpecified";
                break;
            case 2:
                info.type = Long.class;
                info.name = "FK_IdFacturaAlbaran";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdFacturaAlbaranSpecified";
                break;
            case 4:
                info.type = FacturaAlbaran.class;
                info.name = "FacturaAlbaran";
                break;
            case 5:
                info.type = Long.class;
                info.name = "IdFacturaAlbaranSubTotal";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdFacturaAlbaranSubTotalSpecified";
                break;
            case 7:
                info.type = Double.class;
                info.name = "Iva";
                break;
            case 8:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IvaSpecified";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IvaValor";
                break;
            case 10:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IvaValorSpecified";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Publicado";
                break;
            case 12:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PublicadoSpecified";
                break;
            case 13:
                info.type = Double.class;
                info.name = "SubTotal";
                break;
            case 14:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "SubTotalSpecified";
                break;
            case 15:
                info.type = Double.class;
                info.name = "Tasas";
                break;
            case 16:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TasasSpecified";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "fechaModificacion";
                break;
            case 18:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "fechaModificacionSpecified";
                break;
            case 19:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "timestamp";
                break;
            case 20:
                info.type = Long.class;
                info.name = "usuarioModificacion";
                break;
            case 21:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "usuarioModificacionSpecified";
                break;
            case 22:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 23:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    

    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
