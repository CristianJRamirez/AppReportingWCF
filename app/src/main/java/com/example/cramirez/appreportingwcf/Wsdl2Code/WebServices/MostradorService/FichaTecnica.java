package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService;
//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/15/2017 9:13:05 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.SolicitudServicio;
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorByte;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class FichaTecnica implements KvmSerializable {
    
    public String a1;
    public String a2;
    public String b1;
    public String b2;
    public String cI;
    public String cL;
    public String cV;
    public String d1;
    public String d2;
    public String d3;
    public String d6;
    public String e;
    public String eP;
    public String eP1;
    public String eP2;
    public String eP3;
    public String eP4;
    public String f1;
    public String f11;
    public String f15;
    public String f2;
    public String f21;
    public String f3;
    public String f31;
    public String f4;
    public String f5;
    public String f51;
    public String f6;
    public String f61;
    public String f7;
    public String f71;
    public String f8;
    public String f81;
    public long fK_idSolicitudServicio;
    public boolean fK_idSolicitudServicioSpecified;
    public String fechaEmision;
    public boolean fechaEmisionSpecified;
    public String fechaHoraImpresion;
    public boolean fechaHoraImpresionSpecified;
    public String fechaInspeccion;
    public boolean fechaInspeccionSpecified;
    public String fechaValidez;
    public boolean fechaValidezSpecified;
    public String g;
    public String g1;
    public String g2;
    public String j;
    public String j1;
    public String j2;
    public String j3;
    public String k;
    public String k1;
    public String k2;
    public String l;
    public String l0;
    public String l1;
    public String l2;
    public String m1;
    public String m4;
    public boolean noImpCHomologacion;
    public boolean noImpCHomologacionSpecified;
    public boolean noImpMatricula;
    public boolean noImpMatriculaSpecified;
    public String numeroImpreso;
    public String o1;
    public String o11;
    public String o12;
    public String o13;
    public String o14;
    public String o21;
    public String o22;
    public String o23;
    public String o3;
    public String observaciones;
    public String opciones;
    public String p1;
    public String p11;
    public String p2;
    public String p21;
    public String p3;
    public String p5;
    public String p51;
    public boolean publicado;
    public boolean publicadoSpecified;
    public String q;
    public String r;
    public String reformas;
    public boolean revisada;
    public boolean revisadaSpecified;
    public String s1;
    public String s11;
    public String s2;
    public SolicitudServicio solicitudServicio;
    public String t;
    public String tipoFicha;
    public String u1;
    public String u2;
    public String v7;
    public String v8;
    public String v9;
    public String z;
    public String fechaModificacion;
    public boolean fechaModificacionSpecified;
    public long idFichaTecnica;
    public boolean idFichaTecnicaSpecified;
    public VectorByte timestamp;
    public long usuarioModificacion;
    public boolean usuarioModificacionSpecified;
    public String id;
    public String ref;
    
    public FichaTecnica(){}
    
    public FichaTecnica(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("A1"))
        {
            Object obj = soapObject.getProperty("A1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                a1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                a1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("A2"))
        {
            Object obj = soapObject.getProperty("A2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                a2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                a2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("B1"))
        {
            Object obj = soapObject.getProperty("B1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                b1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                b1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("B2"))
        {
            Object obj = soapObject.getProperty("B2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                b2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                b2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("CI"))
        {
            Object obj = soapObject.getProperty("CI");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cI = j.toString();
            }else if (obj!= null && obj instanceof String){
                cI = (String) obj;
            }
        }
        if (soapObject.hasProperty("CL"))
        {
            Object obj = soapObject.getProperty("CL");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cL = j.toString();
            }else if (obj!= null && obj instanceof String){
                cL = (String) obj;
            }
        }
        if (soapObject.hasProperty("CV"))
        {
            Object obj = soapObject.getProperty("CV");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cV = j.toString();
            }else if (obj!= null && obj instanceof String){
                cV = (String) obj;
            }
        }
        if (soapObject.hasProperty("D1"))
        {
            Object obj = soapObject.getProperty("D1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                d1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                d1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("D2"))
        {
            Object obj = soapObject.getProperty("D2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                d2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                d2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("D3"))
        {
            Object obj = soapObject.getProperty("D3");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                d3 = j.toString();
            }else if (obj!= null && obj instanceof String){
                d3 = (String) obj;
            }
        }
        if (soapObject.hasProperty("D6"))
        {
            Object obj = soapObject.getProperty("D6");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                d6 = j.toString();
            }else if (obj!= null && obj instanceof String){
                d6 = (String) obj;
            }
        }
        if (soapObject.hasProperty("E"))
        {
            Object obj = soapObject.getProperty("E");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                e = j.toString();
            }else if (obj!= null && obj instanceof String){
                e = (String) obj;
            }
        }
        if (soapObject.hasProperty("EP"))
        {
            Object obj = soapObject.getProperty("EP");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                eP = j.toString();
            }else if (obj!= null && obj instanceof String){
                eP = (String) obj;
            }
        }
        if (soapObject.hasProperty("EP1"))
        {
            Object obj = soapObject.getProperty("EP1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                eP1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                eP1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("EP2"))
        {
            Object obj = soapObject.getProperty("EP2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                eP2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                eP2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("EP3"))
        {
            Object obj = soapObject.getProperty("EP3");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                eP3 = j.toString();
            }else if (obj!= null && obj instanceof String){
                eP3 = (String) obj;
            }
        }
        if (soapObject.hasProperty("EP4"))
        {
            Object obj = soapObject.getProperty("EP4");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                eP4 = j.toString();
            }else if (obj!= null && obj instanceof String){
                eP4 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F1"))
        {
            Object obj = soapObject.getProperty("F1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F11"))
        {
            Object obj = soapObject.getProperty("F11");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f11 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f11 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F15"))
        {
            Object obj = soapObject.getProperty("F15");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f15 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f15 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F2"))
        {
            Object obj = soapObject.getProperty("F2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F21"))
        {
            Object obj = soapObject.getProperty("F21");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f21 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f21 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F3"))
        {
            Object obj = soapObject.getProperty("F3");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f3 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f3 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F31"))
        {
            Object obj = soapObject.getProperty("F31");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f31 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f31 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F4"))
        {
            Object obj = soapObject.getProperty("F4");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f4 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f4 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F5"))
        {
            Object obj = soapObject.getProperty("F5");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f5 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f5 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F51"))
        {
            Object obj = soapObject.getProperty("F51");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f51 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f51 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F6"))
        {
            Object obj = soapObject.getProperty("F6");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f6 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f6 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F61"))
        {
            Object obj = soapObject.getProperty("F61");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f61 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f61 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F7"))
        {
            Object obj = soapObject.getProperty("F7");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f7 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f7 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F71"))
        {
            Object obj = soapObject.getProperty("F71");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f71 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f71 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F8"))
        {
            Object obj = soapObject.getProperty("F8");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f8 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f8 = (String) obj;
            }
        }
        if (soapObject.hasProperty("F81"))
        {
            Object obj = soapObject.getProperty("F81");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                f81 = j.toString();
            }else if (obj!= null && obj instanceof String){
                f81 = (String) obj;
            }
        }
        if (soapObject.hasProperty("FK_idSolicitudServicio"))
        {
            Object obj = soapObject.getProperty("FK_idSolicitudServicio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_idSolicitudServicio = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_idSolicitudServicio = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_idSolicitudServicioSpecified"))
        {
            Object obj = soapObject.getProperty("FK_idSolicitudServicioSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_idSolicitudServicioSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_idSolicitudServicioSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaEmision"))
        {
            Object obj = soapObject.getProperty("FechaEmision");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaEmision = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaEmision = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaEmisionSpecified"))
        {
            Object obj = soapObject.getProperty("FechaEmisionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaEmisionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaEmisionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaHoraImpresion"))
        {
            Object obj = soapObject.getProperty("FechaHoraImpresion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaHoraImpresion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaHoraImpresion = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaHoraImpresionSpecified"))
        {
            Object obj = soapObject.getProperty("FechaHoraImpresionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaHoraImpresionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaHoraImpresionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaInspeccion"))
        {
            Object obj = soapObject.getProperty("FechaInspeccion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaInspeccion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaInspeccion = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaInspeccionSpecified"))
        {
            Object obj = soapObject.getProperty("FechaInspeccionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaInspeccionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaInspeccionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaValidez"))
        {
            Object obj = soapObject.getProperty("FechaValidez");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaValidez = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaValidez = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaValidezSpecified"))
        {
            Object obj = soapObject.getProperty("FechaValidezSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaValidezSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaValidezSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("G"))
        {
            Object obj = soapObject.getProperty("G");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                g = j.toString();
            }else if (obj!= null && obj instanceof String){
                g = (String) obj;
            }
        }
        if (soapObject.hasProperty("G1"))
        {
            Object obj = soapObject.getProperty("G1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                g1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                g1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("G2"))
        {
            Object obj = soapObject.getProperty("G2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                g2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                g2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("J"))
        {
            Object obj = soapObject.getProperty("J");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                j = j.toString();
            }else if (obj!= null && obj instanceof String){
                j = (String) obj;
            }
        }
        if (soapObject.hasProperty("J1"))
        {
            Object obj = soapObject.getProperty("J1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                j1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                j1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("J2"))
        {
            Object obj = soapObject.getProperty("J2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                j2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                j2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("J3"))
        {
            Object obj = soapObject.getProperty("J3");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                j3 = j.toString();
            }else if (obj!= null && obj instanceof String){
                j3 = (String) obj;
            }
        }
        if (soapObject.hasProperty("K"))
        {
            Object obj = soapObject.getProperty("K");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                k = j.toString();
            }else if (obj!= null && obj instanceof String){
                k = (String) obj;
            }
        }
        if (soapObject.hasProperty("K1"))
        {
            Object obj = soapObject.getProperty("K1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                k1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                k1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("K2"))
        {
            Object obj = soapObject.getProperty("K2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                k2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                k2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("L"))
        {
            Object obj = soapObject.getProperty("L");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                l = j.toString();
            }else if (obj!= null && obj instanceof String){
                l = (String) obj;
            }
        }
        if (soapObject.hasProperty("L0"))
        {
            Object obj = soapObject.getProperty("L0");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                l0 = j.toString();
            }else if (obj!= null && obj instanceof String){
                l0 = (String) obj;
            }
        }
        if (soapObject.hasProperty("L1"))
        {
            Object obj = soapObject.getProperty("L1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                l1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                l1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("L2"))
        {
            Object obj = soapObject.getProperty("L2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                l2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                l2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("M1"))
        {
            Object obj = soapObject.getProperty("M1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                m1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                m1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("M4"))
        {
            Object obj = soapObject.getProperty("M4");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                m4 = j.toString();
            }else if (obj!= null && obj instanceof String){
                m4 = (String) obj;
            }
        }
        if (soapObject.hasProperty("NoImpCHomologacion"))
        {
            Object obj = soapObject.getProperty("NoImpCHomologacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                noImpCHomologacion = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                noImpCHomologacion = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("NoImpCHomologacionSpecified"))
        {
            Object obj = soapObject.getProperty("NoImpCHomologacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                noImpCHomologacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                noImpCHomologacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("NoImpMatricula"))
        {
            Object obj = soapObject.getProperty("NoImpMatricula");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                noImpMatricula = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                noImpMatricula = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("NoImpMatriculaSpecified"))
        {
            Object obj = soapObject.getProperty("NoImpMatriculaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                noImpMatriculaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                noImpMatriculaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("NumeroImpreso"))
        {
            Object obj = soapObject.getProperty("NumeroImpreso");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numeroImpreso = j.toString();
            }else if (obj!= null && obj instanceof String){
                numeroImpreso = (String) obj;
            }
        }
        if (soapObject.hasProperty("O1"))
        {
            Object obj = soapObject.getProperty("O1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                o1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                o1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("O11"))
        {
            Object obj = soapObject.getProperty("O11");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                o11 = j.toString();
            }else if (obj!= null && obj instanceof String){
                o11 = (String) obj;
            }
        }
        if (soapObject.hasProperty("O12"))
        {
            Object obj = soapObject.getProperty("O12");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                o12 = j.toString();
            }else if (obj!= null && obj instanceof String){
                o12 = (String) obj;
            }
        }
        if (soapObject.hasProperty("O13"))
        {
            Object obj = soapObject.getProperty("O13");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                o13 = j.toString();
            }else if (obj!= null && obj instanceof String){
                o13 = (String) obj;
            }
        }
        if (soapObject.hasProperty("O14"))
        {
            Object obj = soapObject.getProperty("O14");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                o14 = j.toString();
            }else if (obj!= null && obj instanceof String){
                o14 = (String) obj;
            }
        }
        if (soapObject.hasProperty("O21"))
        {
            Object obj = soapObject.getProperty("O21");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                o21 = j.toString();
            }else if (obj!= null && obj instanceof String){
                o21 = (String) obj;
            }
        }
        if (soapObject.hasProperty("O22"))
        {
            Object obj = soapObject.getProperty("O22");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                o22 = j.toString();
            }else if (obj!= null && obj instanceof String){
                o22 = (String) obj;
            }
        }
        if (soapObject.hasProperty("O23"))
        {
            Object obj = soapObject.getProperty("O23");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                o23 = j.toString();
            }else if (obj!= null && obj instanceof String){
                o23 = (String) obj;
            }
        }
        if (soapObject.hasProperty("O3"))
        {
            Object obj = soapObject.getProperty("O3");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                o3 = j.toString();
            }else if (obj!= null && obj instanceof String){
                o3 = (String) obj;
            }
        }
        if (soapObject.hasProperty("Observaciones"))
        {
            Object obj = soapObject.getProperty("Observaciones");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                observaciones = j.toString();
            }else if (obj!= null && obj instanceof String){
                observaciones = (String) obj;
            }
        }
        if (soapObject.hasProperty("Opciones"))
        {
            Object obj = soapObject.getProperty("Opciones");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                opciones = j.toString();
            }else if (obj!= null && obj instanceof String){
                opciones = (String) obj;
            }
        }
        if (soapObject.hasProperty("P1"))
        {
            Object obj = soapObject.getProperty("P1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                p1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                p1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("P11"))
        {
            Object obj = soapObject.getProperty("P11");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                p11 = j.toString();
            }else if (obj!= null && obj instanceof String){
                p11 = (String) obj;
            }
        }
        if (soapObject.hasProperty("P2"))
        {
            Object obj = soapObject.getProperty("P2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                p2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                p2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("P21"))
        {
            Object obj = soapObject.getProperty("P21");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                p21 = j.toString();
            }else if (obj!= null && obj instanceof String){
                p21 = (String) obj;
            }
        }
        if (soapObject.hasProperty("P3"))
        {
            Object obj = soapObject.getProperty("P3");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                p3 = j.toString();
            }else if (obj!= null && obj instanceof String){
                p3 = (String) obj;
            }
        }
        if (soapObject.hasProperty("P5"))
        {
            Object obj = soapObject.getProperty("P5");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                p5 = j.toString();
            }else if (obj!= null && obj instanceof String){
                p5 = (String) obj;
            }
        }
        if (soapObject.hasProperty("P51"))
        {
            Object obj = soapObject.getProperty("P51");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                p51 = j.toString();
            }else if (obj!= null && obj instanceof String){
                p51 = (String) obj;
            }
        }
        if (soapObject.hasProperty("Publicado"))
        {
            Object obj = soapObject.getProperty("Publicado");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicado = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicado = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PublicadoSpecified"))
        {
            Object obj = soapObject.getProperty("PublicadoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicadoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicadoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Q"))
        {
            Object obj = soapObject.getProperty("Q");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                q = j.toString();
            }else if (obj!= null && obj instanceof String){
                q = (String) obj;
            }
        }
        if (soapObject.hasProperty("R"))
        {
            Object obj = soapObject.getProperty("R");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                r = j.toString();
            }else if (obj!= null && obj instanceof String){
                r = (String) obj;
            }
        }
        if (soapObject.hasProperty("Reformas"))
        {
            Object obj = soapObject.getProperty("Reformas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                reformas = j.toString();
            }else if (obj!= null && obj instanceof String){
                reformas = (String) obj;
            }
        }
        if (soapObject.hasProperty("Revisada"))
        {
            Object obj = soapObject.getProperty("Revisada");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                revisada = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                revisada = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("RevisadaSpecified"))
        {
            Object obj = soapObject.getProperty("RevisadaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                revisadaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                revisadaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("S1"))
        {
            Object obj = soapObject.getProperty("S1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                s1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                s1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("S11"))
        {
            Object obj = soapObject.getProperty("S11");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                s11 = j.toString();
            }else if (obj!= null && obj instanceof String){
                s11 = (String) obj;
            }
        }
        if (soapObject.hasProperty("S2"))
        {
            Object obj = soapObject.getProperty("S2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                s2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                s2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("SolicitudServicio"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("SolicitudServicio");
            solicitudServicio =  new SolicitudServicio (j);
            
        }
        if (soapObject.hasProperty("T"))
        {
            Object obj = soapObject.getProperty("T");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                t = j.toString();
            }else if (obj!= null && obj instanceof String){
                t = (String) obj;
            }
        }
        if (soapObject.hasProperty("TipoFicha"))
        {
            Object obj = soapObject.getProperty("TipoFicha");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tipoFicha = j.toString();
            }else if (obj!= null && obj instanceof String){
                tipoFicha = (String) obj;
            }
        }
        if (soapObject.hasProperty("U1"))
        {
            Object obj = soapObject.getProperty("U1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                u1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                u1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("U2"))
        {
            Object obj = soapObject.getProperty("U2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                u2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                u2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("V7"))
        {
            Object obj = soapObject.getProperty("V7");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                v7 = j.toString();
            }else if (obj!= null && obj instanceof String){
                v7 = (String) obj;
            }
        }
        if (soapObject.hasProperty("V8"))
        {
            Object obj = soapObject.getProperty("V8");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                v8 = j.toString();
            }else if (obj!= null && obj instanceof String){
                v8 = (String) obj;
            }
        }
        if (soapObject.hasProperty("V9"))
        {
            Object obj = soapObject.getProperty("V9");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                v9 = j.toString();
            }else if (obj!= null && obj instanceof String){
                v9 = (String) obj;
            }
        }
        if (soapObject.hasProperty("Z"))
        {
            Object obj = soapObject.getProperty("Z");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                z = j.toString();
            }else if (obj!= null && obj instanceof String){
                z = (String) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacion"))
        {
            Object obj = soapObject.getProperty("fechaModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaModificacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("fechaModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("idFichaTecnica"))
        {
            Object obj = soapObject.getProperty("idFichaTecnica");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idFichaTecnica = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idFichaTecnica = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("idFichaTecnicaSpecified"))
        {
            Object obj = soapObject.getProperty("idFichaTecnicaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idFichaTecnicaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idFichaTecnicaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("timestamp"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("timestamp");
            timestamp = new VectorByte(j);
        }
        if (soapObject.hasProperty("usuarioModificacion"))
        {
            Object obj = soapObject.getProperty("usuarioModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                usuarioModificacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("usuarioModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("usuarioModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                usuarioModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return a1;
            case 1:
                return a2;
            case 2:
                return b1;
            case 3:
                return b2;
            case 4:
                return cI;
            case 5:
                return cL;
            case 6:
                return cV;
            case 7:
                return d1;
            case 8:
                return d2;
            case 9:
                return d3;
            case 10:
                return d6;
            case 11:
                return e;
            case 12:
                return eP;
            case 13:
                return eP1;
            case 14:
                return eP2;
            case 15:
                return eP3;
            case 16:
                return eP4;
            case 17:
                return f1;
            case 18:
                return f11;
            case 19:
                return f15;
            case 20:
                return f2;
            case 21:
                return f21;
            case 22:
                return f3;
            case 23:
                return f31;
            case 24:
                return f4;
            case 25:
                return f5;
            case 26:
                return f51;
            case 27:
                return f6;
            case 28:
                return f61;
            case 29:
                return f7;
            case 30:
                return f71;
            case 31:
                return f8;
            case 32:
                return f81;
            case 33:
                return fK_idSolicitudServicio;
            case 34:
                return fK_idSolicitudServicioSpecified;
            case 35:
                return fechaEmision;
            case 36:
                return fechaEmisionSpecified;
            case 37:
                return fechaHoraImpresion;
            case 38:
                return fechaHoraImpresionSpecified;
            case 39:
                return fechaInspeccion;
            case 40:
                return fechaInspeccionSpecified;
            case 41:
                return fechaValidez;
            case 42:
                return fechaValidezSpecified;
            case 43:
                return g;
            case 44:
                return g1;
            case 45:
                return g2;
            case 46:
                return j;
            case 47:
                return j1;
            case 48:
                return j2;
            case 49:
                return j3;
            case 50:
                return k;
            case 51:
                return k1;
            case 52:
                return k2;
            case 53:
                return l;
            case 54:
                return l0;
            case 55:
                return l1;
            case 56:
                return l2;
            case 57:
                return m1;
            case 58:
                return m4;
            case 59:
                return noImpCHomologacion;
            case 60:
                return noImpCHomologacionSpecified;
            case 61:
                return noImpMatricula;
            case 62:
                return noImpMatriculaSpecified;
            case 63:
                return numeroImpreso;
            case 64:
                return o1;
            case 65:
                return o11;
            case 66:
                return o12;
            case 67:
                return o13;
            case 68:
                return o14;
            case 69:
                return o21;
            case 70:
                return o22;
            case 71:
                return o23;
            case 72:
                return o3;
            case 73:
                return observaciones;
            case 74:
                return opciones;
            case 75:
                return p1;
            case 76:
                return p11;
            case 77:
                return p2;
            case 78:
                return p21;
            case 79:
                return p3;
            case 80:
                return p5;
            case 81:
                return p51;
            case 82:
                return publicado;
            case 83:
                return publicadoSpecified;
            case 84:
                return q;
            case 85:
                return r;
            case 86:
                return reformas;
            case 87:
                return revisada;
            case 88:
                return revisadaSpecified;
            case 89:
                return s1;
            case 90:
                return s11;
            case 91:
                return s2;
            case 92:
                return solicitudServicio;
            case 93:
                return t;
            case 94:
                return tipoFicha;
            case 95:
                return u1;
            case 96:
                return u2;
            case 97:
                return v7;
            case 98:
                return v8;
            case 99:
                return v9;
            case 100:
                return z;
            case 101:
                return fechaModificacion;
            case 102:
                return fechaModificacionSpecified;
            case 103:
                return idFichaTecnica;
            case 104:
                return idFichaTecnicaSpecified;
            case 105:
                return timestamp.toString();
            case 106:
                return usuarioModificacion;
            case 107:
                return usuarioModificacionSpecified;
            case 108:
                return id;
            case 109:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 110;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "A1";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "A2";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "B1";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "B2";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CI";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CL";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CV";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "D1";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "D2";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "D3";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "D6";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "E";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EP";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EP1";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EP2";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EP3";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EP4";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F1";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F11";
                break;
            case 19:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F15";
                break;
            case 20:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F2";
                break;
            case 21:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F21";
                break;
            case 22:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F3";
                break;
            case 23:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F31";
                break;
            case 24:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F4";
                break;
            case 25:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F5";
                break;
            case 26:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F51";
                break;
            case 27:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F6";
                break;
            case 28:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F61";
                break;
            case 29:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F7";
                break;
            case 30:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F71";
                break;
            case 31:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F8";
                break;
            case 32:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "F81";
                break;
            case 33:
                info.type = Long.class;
                info.name = "FK_idSolicitudServicio";
                break;
            case 34:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_idSolicitudServicioSpecified";
                break;
            case 35:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaEmision";
                break;
            case 36:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaEmisionSpecified";
                break;
            case 37:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaHoraImpresion";
                break;
            case 38:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaHoraImpresionSpecified";
                break;
            case 39:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaInspeccion";
                break;
            case 40:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaInspeccionSpecified";
                break;
            case 41:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaValidez";
                break;
            case 42:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaValidezSpecified";
                break;
            case 43:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "G";
                break;
            case 44:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "G1";
                break;
            case 45:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "G2";
                break;
            case 46:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "J";
                break;
            case 47:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "J1";
                break;
            case 48:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "J2";
                break;
            case 49:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "J3";
                break;
            case 50:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "K";
                break;
            case 51:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "K1";
                break;
            case 52:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "K2";
                break;
            case 53:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "L";
                break;
            case 54:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "L0";
                break;
            case 55:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "L1";
                break;
            case 56:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "L2";
                break;
            case 57:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "M1";
                break;
            case 58:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "M4";
                break;
            case 59:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "NoImpCHomologacion";
                break;
            case 60:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "NoImpCHomologacionSpecified";
                break;
            case 61:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "NoImpMatricula";
                break;
            case 62:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "NoImpMatriculaSpecified";
                break;
            case 63:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NumeroImpreso";
                break;
            case 64:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "O1";
                break;
            case 65:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "O11";
                break;
            case 66:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "O12";
                break;
            case 67:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "O13";
                break;
            case 68:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "O14";
                break;
            case 69:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "O21";
                break;
            case 70:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "O22";
                break;
            case 71:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "O23";
                break;
            case 72:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "O3";
                break;
            case 73:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Observaciones";
                break;
            case 74:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Opciones";
                break;
            case 75:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "P1";
                break;
            case 76:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "P11";
                break;
            case 77:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "P2";
                break;
            case 78:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "P21";
                break;
            case 79:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "P3";
                break;
            case 80:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "P5";
                break;
            case 81:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "P51";
                break;
            case 82:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Publicado";
                break;
            case 83:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PublicadoSpecified";
                break;
            case 84:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Q";
                break;
            case 85:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "R";
                break;
            case 86:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Reformas";
                break;
            case 87:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Revisada";
                break;
            case 88:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "RevisadaSpecified";
                break;
            case 89:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "S1";
                break;
            case 90:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "S11";
                break;
            case 91:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "S2";
                break;
            case 92:
                info.type = SolicitudServicio.class;
                info.name = "SolicitudServicio";
                break;
            case 93:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "T";
                break;
            case 94:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TipoFicha";
                break;
            case 95:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "U1";
                break;
            case 96:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "U2";
                break;
            case 97:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "V7";
                break;
            case 98:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "V8";
                break;
            case 99:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "V9";
                break;
            case 100:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Z";
                break;
            case 101:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "fechaModificacion";
                break;
            case 102:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "fechaModificacionSpecified";
                break;
            case 103:
                info.type = Long.class;
                info.name = "idFichaTecnica";
                break;
            case 104:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "idFichaTecnicaSpecified";
                break;
            case 105:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "timestamp";
                break;
            case 106:
                info.type = Long.class;
                info.name = "usuarioModificacion";
                break;
            case 107:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "usuarioModificacionSpecified";
                break;
            case 108:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 109:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    

    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
