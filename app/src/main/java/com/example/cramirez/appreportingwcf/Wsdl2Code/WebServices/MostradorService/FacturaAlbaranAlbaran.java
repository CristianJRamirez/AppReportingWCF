package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService;
//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/15/2017 9:13:05 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.FacturaAlbaran;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorByte;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class FacturaAlbaranAlbaran implements KvmSerializable {
    
    public boolean abono;
    public boolean abonoSpecified;
    public double base;
    public boolean baseSpecified;
    public String centroCodigo;
    public String centroDescripcion;
    public long fK_IdFacturaAlbaran;
    public boolean fK_IdFacturaAlbaranSpecified;
    public long fK_IdVehiculo;
    public boolean fK_IdVehiculoSpecified;
    public FacturaAlbaran facturaAlbaran;
    public String fechaEmision;
    public boolean fechaEmisionSpecified;
    public long idFacturaAlbaranAlbaran;
    public boolean idFacturaAlbaranAlbaranSpecified;
    public double importe;
    public boolean importeSpecified;
    public double impuestos;
    public boolean impuestosSpecified;
    public String numFactura;
    public boolean publicado;
    public boolean publicadoSpecified;
    public double recargos;
    public boolean recargosSpecified;
    public String servicios;
    public double tasas;
    public boolean tasasSpecified;
    public String usuarioEmision;
    public String vehiculoMatricula;
    public String fechaModificacion;
    public boolean fechaModificacionSpecified;
    public VectorByte timestamp;
    public long usuarioModificacion;
    public boolean usuarioModificacionSpecified;
    public String id;
    public String ref;
    
    public FacturaAlbaranAlbaran(){}
    
    public FacturaAlbaranAlbaran(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Abono"))
        {
            Object obj = soapObject.getProperty("Abono");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                abono = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                abono = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AbonoSpecified"))
        {
            Object obj = soapObject.getProperty("AbonoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                abonoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                abonoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Base"))
        {
            Object obj = soapObject.getProperty("Base");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                base = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                base = (Double) obj;
            }
        }
        if (soapObject.hasProperty("BaseSpecified"))
        {
            Object obj = soapObject.getProperty("BaseSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                baseSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                baseSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("CentroCodigo"))
        {
            Object obj = soapObject.getProperty("CentroCodigo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                centroCodigo = j.toString();
            }else if (obj!= null && obj instanceof String){
                centroCodigo = (String) obj;
            }
        }
        if (soapObject.hasProperty("CentroDescripcion"))
        {
            Object obj = soapObject.getProperty("CentroDescripcion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                centroDescripcion = j.toString();
            }else if (obj!= null && obj instanceof String){
                centroDescripcion = (String) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdFacturaAlbaran"))
        {
            Object obj = soapObject.getProperty("FK_IdFacturaAlbaran");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdFacturaAlbaran = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdFacturaAlbaran = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdFacturaAlbaranSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdFacturaAlbaranSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdFacturaAlbaranSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdFacturaAlbaranSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdVehiculo"))
        {
            Object obj = soapObject.getProperty("FK_IdVehiculo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdVehiculo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdVehiculo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdVehiculoSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdVehiculoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdVehiculoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdVehiculoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FacturaAlbaran"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("FacturaAlbaran");
            facturaAlbaran =  new FacturaAlbaran (j);
            
        }
        if (soapObject.hasProperty("FechaEmision"))
        {
            Object obj = soapObject.getProperty("FechaEmision");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaEmision = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaEmision = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaEmisionSpecified"))
        {
            Object obj = soapObject.getProperty("FechaEmisionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaEmisionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaEmisionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdFacturaAlbaranAlbaran"))
        {
            Object obj = soapObject.getProperty("IdFacturaAlbaranAlbaran");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idFacturaAlbaranAlbaran = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idFacturaAlbaranAlbaran = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdFacturaAlbaranAlbaranSpecified"))
        {
            Object obj = soapObject.getProperty("IdFacturaAlbaranAlbaranSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idFacturaAlbaranAlbaranSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idFacturaAlbaranAlbaranSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Importe"))
        {
            Object obj = soapObject.getProperty("Importe");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                importe = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                importe = (Double) obj;
            }
        }
        if (soapObject.hasProperty("ImporteSpecified"))
        {
            Object obj = soapObject.getProperty("ImporteSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                importeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                importeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Impuestos"))
        {
            Object obj = soapObject.getProperty("Impuestos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                impuestos = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                impuestos = (Double) obj;
            }
        }
        if (soapObject.hasProperty("ImpuestosSpecified"))
        {
            Object obj = soapObject.getProperty("ImpuestosSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                impuestosSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                impuestosSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("NumFactura"))
        {
            Object obj = soapObject.getProperty("NumFactura");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numFactura = j.toString();
            }else if (obj!= null && obj instanceof String){
                numFactura = (String) obj;
            }
        }
        if (soapObject.hasProperty("Publicado"))
        {
            Object obj = soapObject.getProperty("Publicado");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicado = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicado = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PublicadoSpecified"))
        {
            Object obj = soapObject.getProperty("PublicadoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicadoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicadoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Recargos"))
        {
            Object obj = soapObject.getProperty("Recargos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                recargos = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                recargos = (Double) obj;
            }
        }
        if (soapObject.hasProperty("RecargosSpecified"))
        {
            Object obj = soapObject.getProperty("RecargosSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                recargosSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                recargosSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Servicios"))
        {
            Object obj = soapObject.getProperty("Servicios");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                servicios = j.toString();
            }else if (obj!= null && obj instanceof String){
                servicios = (String) obj;
            }
        }
        if (soapObject.hasProperty("Tasas"))
        {
            Object obj = soapObject.getProperty("Tasas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasas = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                tasas = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TasasSpecified"))
        {
            Object obj = soapObject.getProperty("TasasSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasasSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tasasSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("UsuarioEmision"))
        {
            Object obj = soapObject.getProperty("UsuarioEmision");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioEmision = j.toString();
            }else if (obj!= null && obj instanceof String){
                usuarioEmision = (String) obj;
            }
        }
        if (soapObject.hasProperty("VehiculoMatricula"))
        {
            Object obj = soapObject.getProperty("VehiculoMatricula");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehiculoMatricula = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehiculoMatricula = (String) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacion"))
        {
            Object obj = soapObject.getProperty("fechaModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaModificacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("fechaModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("timestamp"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("timestamp");
            timestamp = new VectorByte(j);
        }
        if (soapObject.hasProperty("usuarioModificacion"))
        {
            Object obj = soapObject.getProperty("usuarioModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                usuarioModificacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("usuarioModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("usuarioModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                usuarioModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return abono;
            case 1:
                return abonoSpecified;
            case 2:
                return base;
            case 3:
                return baseSpecified;
            case 4:
                return centroCodigo;
            case 5:
                return centroDescripcion;
            case 6:
                return fK_IdFacturaAlbaran;
            case 7:
                return fK_IdFacturaAlbaranSpecified;
            case 8:
                return fK_IdVehiculo;
            case 9:
                return fK_IdVehiculoSpecified;
            case 10:
                return facturaAlbaran;
            case 11:
                return fechaEmision;
            case 12:
                return fechaEmisionSpecified;
            case 13:
                return idFacturaAlbaranAlbaran;
            case 14:
                return idFacturaAlbaranAlbaranSpecified;
            case 15:
                return importe;
            case 16:
                return importeSpecified;
            case 17:
                return impuestos;
            case 18:
                return impuestosSpecified;
            case 19:
                return numFactura;
            case 20:
                return publicado;
            case 21:
                return publicadoSpecified;
            case 22:
                return recargos;
            case 23:
                return recargosSpecified;
            case 24:
                return servicios;
            case 25:
                return tasas;
            case 26:
                return tasasSpecified;
            case 27:
                return usuarioEmision;
            case 28:
                return vehiculoMatricula;
            case 29:
                return fechaModificacion;
            case 30:
                return fechaModificacionSpecified;
            case 31:
                return timestamp.toString();
            case 32:
                return usuarioModificacion;
            case 33:
                return usuarioModificacionSpecified;
            case 34:
                return id;
            case 35:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 36;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Abono";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AbonoSpecified";
                break;
            case 2:
                info.type = Double.class;
                info.name = "Base";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "BaseSpecified";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CentroCodigo";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CentroDescripcion";
                break;
            case 6:
                info.type = Long.class;
                info.name = "FK_IdFacturaAlbaran";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdFacturaAlbaranSpecified";
                break;
            case 8:
                info.type = Long.class;
                info.name = "FK_IdVehiculo";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdVehiculoSpecified";
                break;
            case 10:
                info.type = FacturaAlbaran.class;
                info.name = "FacturaAlbaran";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaEmision";
                break;
            case 12:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaEmisionSpecified";
                break;
            case 13:
                info.type = Long.class;
                info.name = "IdFacturaAlbaranAlbaran";
                break;
            case 14:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdFacturaAlbaranAlbaranSpecified";
                break;
            case 15:
                info.type = Double.class;
                info.name = "Importe";
                break;
            case 16:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ImporteSpecified";
                break;
            case 17:
                info.type = Double.class;
                info.name = "Impuestos";
                break;
            case 18:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ImpuestosSpecified";
                break;
            case 19:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NumFactura";
                break;
            case 20:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Publicado";
                break;
            case 21:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PublicadoSpecified";
                break;
            case 22:
                info.type = Double.class;
                info.name = "Recargos";
                break;
            case 23:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "RecargosSpecified";
                break;
            case 24:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Servicios";
                break;
            case 25:
                info.type = Double.class;
                info.name = "Tasas";
                break;
            case 26:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TasasSpecified";
                break;
            case 27:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "UsuarioEmision";
                break;
            case 28:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VehiculoMatricula";
                break;
            case 29:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "fechaModificacion";
                break;
            case 30:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "fechaModificacionSpecified";
                break;
            case 31:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "timestamp";
                break;
            case 32:
                info.type = Long.class;
                info.name = "usuarioModificacion";
                break;
            case 33:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "usuarioModificacionSpecified";
                break;
            case 34:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 35:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
