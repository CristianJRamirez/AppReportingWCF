package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.ReportingService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 4/25/2017 7:43:53 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class QUERY_DefectologiaUsuarioSPC_Result implements KvmSerializable {
    
    public String capitulo;
    public String centro;
    public String codigoCentro;
    public String codigoUsuarioActivo;
    public double inspecciones;
    public boolean inspeccionesSpecified;
    public double inspeccionesTotales;
    public boolean inspeccionesTotalesSpecified;
    public double porcentajeRechazadas;
    public boolean porcentajeRechazadasSpecified;
    public double porcentajeRechazadasTotales;
    public boolean porcentajeRechazadasTotalesSpecified;
    public String punto;
    public double rechazadas;
    public boolean rechazadasSpecified;
    public double rechazadasTotales;
    public boolean rechazadasTotalesSpecified;
    public String id;
    public String ref;
    
    public QUERY_DefectologiaUsuarioSPC_Result(){}
    
    public QUERY_DefectologiaUsuarioSPC_Result(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Capitulo"))
        {
            Object obj = soapObject.getProperty("Capitulo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                capitulo = j.toString();
            }else if (obj!= null && obj instanceof String){
                capitulo = (String) obj;
            }
        }
        if (soapObject.hasProperty("Centro"))
        {
            Object obj = soapObject.getProperty("Centro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                centro = j.toString();
            }else if (obj!= null && obj instanceof String){
                centro = (String) obj;
            }
        }
        if (soapObject.hasProperty("CodigoCentro"))
        {
            Object obj = soapObject.getProperty("CodigoCentro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                codigoCentro = j.toString();
            }else if (obj!= null && obj instanceof String){
                codigoCentro = (String) obj;
            }
        }
        if (soapObject.hasProperty("CodigoUsuarioActivo"))
        {
            Object obj = soapObject.getProperty("CodigoUsuarioActivo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                codigoUsuarioActivo = j.toString();
            }else if (obj!= null && obj instanceof String){
                codigoUsuarioActivo = (String) obj;
            }
        }
        if (soapObject.hasProperty("Inspecciones"))
        {
            Object obj = soapObject.getProperty("Inspecciones");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                inspecciones = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                inspecciones = (Double) obj;
            }
        }
        if (soapObject.hasProperty("InspeccionesSpecified"))
        {
            Object obj = soapObject.getProperty("InspeccionesSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                inspeccionesSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                inspeccionesSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("InspeccionesTotales"))
        {
            Object obj = soapObject.getProperty("InspeccionesTotales");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                inspeccionesTotales = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                inspeccionesTotales = (Double) obj;
            }
        }
        if (soapObject.hasProperty("InspeccionesTotalesSpecified"))
        {
            Object obj = soapObject.getProperty("InspeccionesTotalesSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                inspeccionesTotalesSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                inspeccionesTotalesSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PorcentajeRechazadas"))
        {
            Object obj = soapObject.getProperty("PorcentajeRechazadas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                porcentajeRechazadas = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                porcentajeRechazadas = (Double) obj;
            }
        }
        if (soapObject.hasProperty("PorcentajeRechazadasSpecified"))
        {
            Object obj = soapObject.getProperty("PorcentajeRechazadasSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                porcentajeRechazadasSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                porcentajeRechazadasSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PorcentajeRechazadasTotales"))
        {
            Object obj = soapObject.getProperty("PorcentajeRechazadasTotales");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                porcentajeRechazadasTotales = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                porcentajeRechazadasTotales = (Double) obj;
            }
        }
        if (soapObject.hasProperty("PorcentajeRechazadasTotalesSpecified"))
        {
            Object obj = soapObject.getProperty("PorcentajeRechazadasTotalesSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                porcentajeRechazadasTotalesSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                porcentajeRechazadasTotalesSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Punto"))
        {
            Object obj = soapObject.getProperty("Punto");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                punto = j.toString();
            }else if (obj!= null && obj instanceof String){
                punto = (String) obj;
            }
        }
        if (soapObject.hasProperty("Rechazadas"))
        {
            Object obj = soapObject.getProperty("Rechazadas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                rechazadas = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                rechazadas = (Double) obj;
            }
        }
        if (soapObject.hasProperty("RechazadasSpecified"))
        {
            Object obj = soapObject.getProperty("RechazadasSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                rechazadasSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                rechazadasSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("RechazadasTotales"))
        {
            Object obj = soapObject.getProperty("RechazadasTotales");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                rechazadasTotales = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                rechazadasTotales = (Double) obj;
            }
        }
        if (soapObject.hasProperty("RechazadasTotalesSpecified"))
        {
            Object obj = soapObject.getProperty("RechazadasTotalesSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                rechazadasTotalesSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                rechazadasTotalesSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return capitulo;
            case 1:
                return centro;
            case 2:
                return codigoCentro;
            case 3:
                return codigoUsuarioActivo;
            case 4:
                return inspecciones;
            case 5:
                return inspeccionesSpecified;
            case 6:
                return inspeccionesTotales;
            case 7:
                return inspeccionesTotalesSpecified;
            case 8:
                return porcentajeRechazadas;
            case 9:
                return porcentajeRechazadasSpecified;
            case 10:
                return porcentajeRechazadasTotales;
            case 11:
                return porcentajeRechazadasTotalesSpecified;
            case 12:
                return punto;
            case 13:
                return rechazadas;
            case 14:
                return rechazadasSpecified;
            case 15:
                return rechazadasTotales;
            case 16:
                return rechazadasTotalesSpecified;
            case 17:
                return id;
            case 18:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 19;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Capitulo";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Centro";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CodigoCentro";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CodigoUsuarioActivo";
                break;
            case 4:
                info.type = Double.class;
                info.name = "Inspecciones";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "InspeccionesSpecified";
                break;
            case 6:
                info.type = Double.class;
                info.name = "InspeccionesTotales";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "InspeccionesTotalesSpecified";
                break;
            case 8:
                info.type = Double.class;
                info.name = "PorcentajeRechazadas";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PorcentajeRechazadasSpecified";
                break;
            case 10:
                info.type = Double.class;
                info.name = "PorcentajeRechazadasTotales";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PorcentajeRechazadasTotalesSpecified";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Punto";
                break;
            case 13:
                info.type = Double.class;
                info.name = "Rechazadas";
                break;
            case 14:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "RechazadasSpecified";
                break;
            case 15:
                info.type = Double.class;
                info.name = "RechazadasTotales";
                break;
            case 16:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "RechazadasTotalesSpecified";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    

    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
