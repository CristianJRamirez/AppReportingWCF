package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService;
//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/15/2017 9:13:05 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class QUERY_ListaTIT_Result implements KvmSerializable {
    
    public String cliente;
    public String culturaDocumento;
    public long fK_IdVehiculoClasificacion;
    public boolean fK_IdVehiculoClasificacionSpecified;
    public String fechaModifTIT;
    public boolean fechaModifTITSpecified;
    public long idSolicitudServicio;
    public boolean idSolicitudServicioSpecified;
    public String matricula;
    public String numExpediente;
    public String numSolicitud;
    public String id;
    public String ref;
    
    public QUERY_ListaTIT_Result(){}
    
    public QUERY_ListaTIT_Result(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Cliente"))
        {
            Object obj = soapObject.getProperty("Cliente");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cliente = j.toString();
            }else if (obj!= null && obj instanceof String){
                cliente = (String) obj;
            }
        }
        if (soapObject.hasProperty("CulturaDocumento"))
        {
            Object obj = soapObject.getProperty("CulturaDocumento");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                culturaDocumento = j.toString();
            }else if (obj!= null && obj instanceof String){
                culturaDocumento = (String) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdVehiculoClasificacion"))
        {
            Object obj = soapObject.getProperty("FK_IdVehiculoClasificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdVehiculoClasificacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdVehiculoClasificacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdVehiculoClasificacionSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdVehiculoClasificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdVehiculoClasificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdVehiculoClasificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaModifTIT"))
        {
            Object obj = soapObject.getProperty("FechaModifTIT");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModifTIT = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaModifTIT = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaModifTITSpecified"))
        {
            Object obj = soapObject.getProperty("FechaModifTITSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModifTITSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaModifTITSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdSolicitudServicio"))
        {
            Object obj = soapObject.getProperty("IdSolicitudServicio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idSolicitudServicio = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idSolicitudServicio = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdSolicitudServicioSpecified"))
        {
            Object obj = soapObject.getProperty("IdSolicitudServicioSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idSolicitudServicioSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idSolicitudServicioSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Matricula"))
        {
            Object obj = soapObject.getProperty("Matricula");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                matricula = j.toString();
            }else if (obj!= null && obj instanceof String){
                matricula = (String) obj;
            }
        }
        if (soapObject.hasProperty("NumExpediente"))
        {
            Object obj = soapObject.getProperty("NumExpediente");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numExpediente = j.toString();
            }else if (obj!= null && obj instanceof String){
                numExpediente = (String) obj;
            }
        }
        if (soapObject.hasProperty("NumSolicitud"))
        {
            Object obj = soapObject.getProperty("NumSolicitud");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numSolicitud = j.toString();
            }else if (obj!= null && obj instanceof String){
                numSolicitud = (String) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return cliente;
            case 1:
                return culturaDocumento;
            case 2:
                return fK_IdVehiculoClasificacion;
            case 3:
                return fK_IdVehiculoClasificacionSpecified;
            case 4:
                return fechaModifTIT;
            case 5:
                return fechaModifTITSpecified;
            case 6:
                return idSolicitudServicio;
            case 7:
                return idSolicitudServicioSpecified;
            case 8:
                return matricula;
            case 9:
                return numExpediente;
            case 10:
                return numSolicitud;
            case 11:
                return id;
            case 12:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 13;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Cliente";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CulturaDocumento";
                break;
            case 2:
                info.type = Long.class;
                info.name = "FK_IdVehiculoClasificacion";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdVehiculoClasificacionSpecified";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaModifTIT";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaModifTITSpecified";
                break;
            case 6:
                info.type = Long.class;
                info.name = "IdSolicitudServicio";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdSolicitudServicioSpecified";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Matricula";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NumExpediente";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NumSolicitud";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    

    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
