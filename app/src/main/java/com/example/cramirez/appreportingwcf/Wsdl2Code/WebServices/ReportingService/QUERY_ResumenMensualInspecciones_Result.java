package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.ReportingService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 4/25/2017 7:43:53 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class QUERY_ResumenMensualInspecciones_Result implements KvmSerializable {
    
    public String centro;
    public String detalle;
    public int gratuitaRechazo;
    public boolean gratuitaRechazoSpecified;
    public int gratuitaTotal;
    public boolean gratuitaTotalSpecified;
    public String grupo;
    public int idCentro;
    public boolean idCentroSpecified;
    public int idDetalle;
    public boolean idDetalleSpecified;
    public int idGrupo;
    public boolean idGrupoSpecified;
    public int idSubGrupo;
    public boolean idSubGrupoSpecified;
    public int idTipoGrupo;
    public boolean idTipoGrupoSpecified;
    public int primeraRechazo;
    public boolean primeraRechazoSpecified;
    public int primeraTotal;
    public boolean primeraTotalSpecified;
    public int segundaRechazo;
    public boolean segundaRechazoSpecified;
    public int segundaTotal;
    public boolean segundaTotalSpecified;
    public String subGrupo;
    public String tipoGrupo;
    public int total;
    public boolean totalSpecified;
    public String id;
    public String ref;
    
    public QUERY_ResumenMensualInspecciones_Result(){}
    
    public QUERY_ResumenMensualInspecciones_Result(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Centro"))
        {
            Object obj = soapObject.getProperty("Centro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                centro = j.toString();
            }else if (obj!= null && obj instanceof String){
                centro = (String) obj;
            }
        }
        if (soapObject.hasProperty("Detalle"))
        {
            Object obj = soapObject.getProperty("Detalle");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                detalle = j.toString();
            }else if (obj!= null && obj instanceof String){
                detalle = (String) obj;
            }
        }
        if (soapObject.hasProperty("GratuitaRechazo"))
        {
            Object obj = soapObject.getProperty("GratuitaRechazo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                gratuitaRechazo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                gratuitaRechazo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("GratuitaRechazoSpecified"))
        {
            Object obj = soapObject.getProperty("GratuitaRechazoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                gratuitaRechazoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                gratuitaRechazoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("GratuitaTotal"))
        {
            Object obj = soapObject.getProperty("GratuitaTotal");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                gratuitaTotal = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                gratuitaTotal = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("GratuitaTotalSpecified"))
        {
            Object obj = soapObject.getProperty("GratuitaTotalSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                gratuitaTotalSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                gratuitaTotalSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Grupo"))
        {
            Object obj = soapObject.getProperty("Grupo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                grupo = j.toString();
            }else if (obj!= null && obj instanceof String){
                grupo = (String) obj;
            }
        }
        if (soapObject.hasProperty("IdCentro"))
        {
            Object obj = soapObject.getProperty("IdCentro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idCentro = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idCentro = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdCentroSpecified"))
        {
            Object obj = soapObject.getProperty("IdCentroSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idCentroSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idCentroSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdDetalle"))
        {
            Object obj = soapObject.getProperty("IdDetalle");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idDetalle = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idDetalle = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdDetalleSpecified"))
        {
            Object obj = soapObject.getProperty("IdDetalleSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idDetalleSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idDetalleSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdGrupo"))
        {
            Object obj = soapObject.getProperty("IdGrupo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idGrupo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idGrupo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdGrupoSpecified"))
        {
            Object obj = soapObject.getProperty("IdGrupoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idGrupoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idGrupoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdSubGrupo"))
        {
            Object obj = soapObject.getProperty("IdSubGrupo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idSubGrupo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idSubGrupo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdSubGrupoSpecified"))
        {
            Object obj = soapObject.getProperty("IdSubGrupoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idSubGrupoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idSubGrupoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdTipoGrupo"))
        {
            Object obj = soapObject.getProperty("IdTipoGrupo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idTipoGrupo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idTipoGrupo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdTipoGrupoSpecified"))
        {
            Object obj = soapObject.getProperty("IdTipoGrupoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idTipoGrupoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idTipoGrupoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PrimeraRechazo"))
        {
            Object obj = soapObject.getProperty("PrimeraRechazo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                primeraRechazo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                primeraRechazo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PrimeraRechazoSpecified"))
        {
            Object obj = soapObject.getProperty("PrimeraRechazoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                primeraRechazoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                primeraRechazoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PrimeraTotal"))
        {
            Object obj = soapObject.getProperty("PrimeraTotal");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                primeraTotal = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                primeraTotal = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PrimeraTotalSpecified"))
        {
            Object obj = soapObject.getProperty("PrimeraTotalSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                primeraTotalSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                primeraTotalSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("SegundaRechazo"))
        {
            Object obj = soapObject.getProperty("SegundaRechazo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                segundaRechazo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                segundaRechazo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SegundaRechazoSpecified"))
        {
            Object obj = soapObject.getProperty("SegundaRechazoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                segundaRechazoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                segundaRechazoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("SegundaTotal"))
        {
            Object obj = soapObject.getProperty("SegundaTotal");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                segundaTotal = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                segundaTotal = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SegundaTotalSpecified"))
        {
            Object obj = soapObject.getProperty("SegundaTotalSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                segundaTotalSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                segundaTotalSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("SubGrupo"))
        {
            Object obj = soapObject.getProperty("SubGrupo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                subGrupo = j.toString();
            }else if (obj!= null && obj instanceof String){
                subGrupo = (String) obj;
            }
        }
        if (soapObject.hasProperty("TipoGrupo"))
        {
            Object obj = soapObject.getProperty("TipoGrupo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tipoGrupo = j.toString();
            }else if (obj!= null && obj instanceof String){
                tipoGrupo = (String) obj;
            }
        }
        if (soapObject.hasProperty("Total"))
        {
            Object obj = soapObject.getProperty("Total");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                total = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                total = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("TotalSpecified"))
        {
            Object obj = soapObject.getProperty("TotalSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                totalSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return centro;
            case 1:
                return detalle;
            case 2:
                return gratuitaRechazo;
            case 3:
                return gratuitaRechazoSpecified;
            case 4:
                return gratuitaTotal;
            case 5:
                return gratuitaTotalSpecified;
            case 6:
                return grupo;
            case 7:
                return idCentro;
            case 8:
                return idCentroSpecified;
            case 9:
                return idDetalle;
            case 10:
                return idDetalleSpecified;
            case 11:
                return idGrupo;
            case 12:
                return idGrupoSpecified;
            case 13:
                return idSubGrupo;
            case 14:
                return idSubGrupoSpecified;
            case 15:
                return idTipoGrupo;
            case 16:
                return idTipoGrupoSpecified;
            case 17:
                return primeraRechazo;
            case 18:
                return primeraRechazoSpecified;
            case 19:
                return primeraTotal;
            case 20:
                return primeraTotalSpecified;
            case 21:
                return segundaRechazo;
            case 22:
                return segundaRechazoSpecified;
            case 23:
                return segundaTotal;
            case 24:
                return segundaTotalSpecified;
            case 25:
                return subGrupo;
            case 26:
                return tipoGrupo;
            case 27:
                return total;
            case 28:
                return totalSpecified;
            case 29:
                return id;
            case 30:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 31;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Centro";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Detalle";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "GratuitaRechazo";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "GratuitaRechazoSpecified";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "GratuitaTotal";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "GratuitaTotalSpecified";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Grupo";
                break;
            case 7:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdCentro";
                break;
            case 8:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdCentroSpecified";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdDetalle";
                break;
            case 10:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdDetalleSpecified";
                break;
            case 11:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdGrupo";
                break;
            case 12:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdGrupoSpecified";
                break;
            case 13:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdSubGrupo";
                break;
            case 14:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdSubGrupoSpecified";
                break;
            case 15:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdTipoGrupo";
                break;
            case 16:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdTipoGrupoSpecified";
                break;
            case 17:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PrimeraRechazo";
                break;
            case 18:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PrimeraRechazoSpecified";
                break;
            case 19:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PrimeraTotal";
                break;
            case 20:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PrimeraTotalSpecified";
                break;
            case 21:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SegundaRechazo";
                break;
            case 22:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "SegundaRechazoSpecified";
                break;
            case 23:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SegundaTotal";
                break;
            case 24:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "SegundaTotalSpecified";
                break;
            case 25:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SubGrupo";
                break;
            case 26:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TipoGrupo";
                break;
            case 27:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Total";
                break;
            case 28:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TotalSpecified";
                break;
            case 29:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 30:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    

    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
