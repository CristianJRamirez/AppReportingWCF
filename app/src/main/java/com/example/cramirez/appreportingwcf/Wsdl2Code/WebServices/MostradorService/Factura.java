package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService;
//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/15/2017 9:13:05 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.Centro;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.Cliente;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.EstadoFactura;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorFactura;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.Factura;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorFacturaPrestacion;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorFacturaTransaccion;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.MecanismoPago;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.SolicitudServicio;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.TipoDocumento;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.TipoFactura;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.Vehiculo;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorByte;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class Factura implements KvmSerializable {
    
    public boolean abono;
    public boolean abonoSpecified;
    public String apellidos;
    public Centro centro;
    public Cliente cliente;
    public String codigoPostalDescripcion;
    public String domicilio;
    public String email;
    public String escPisoPta;
    public EstadoFactura estadoFactura;
    public long fK_IdCentro;
    public boolean fK_IdCentroSpecified;
    public long fK_IdCliente;
    public boolean fK_IdClienteSpecified;
    public long fK_IdCodigoPostal;
    public boolean fK_IdCodigoPostalSpecified;
    public long fK_IdEstadoFactura;
    public boolean fK_IdEstadoFacturaSpecified;
    public long fK_IdFacturaPrevia;
    public boolean fK_IdFacturaPreviaSpecified;
    public long fK_IdMecanismoPago;
    public boolean fK_IdMecanismoPagoSpecified;
    public long fK_IdProvincia;
    public boolean fK_IdProvinciaSpecified;
    public long fK_IdSolicitudServicio;
    public boolean fK_IdSolicitudServicioSpecified;
    public long fK_IdTipoDocumento;
    public boolean fK_IdTipoDocumentoSpecified;
    public long fK_IdTipoFactura;
    public boolean fK_IdTipoFacturaSpecified;
    public long fK_IdTipoVia;
    public boolean fK_IdTipoViaSpecified;
    public long fK_IdVehiculo;
    public boolean fK_IdVehiculoSpecified;
    public VectorFactura factura1;
    public Factura factura2;
    public VectorFacturaPrestacion facturaPrestacion;
    public VectorFacturaTransaccion facturaTransaccion;
    public String fechaCobro;
    public boolean fechaCobroSpecified;
    public String fechaEmision;
    public boolean fechaEmisionSpecified;
    public long idFactura;
    public boolean idFacturaSpecified;
    public MecanismoPago mecanismoPago;
    public String mecanismoPagoDescripcion;
    public String movil;
    public String nIF;
    public String nombre;
    public String notasOcultas;
    public String numFactura;
    public String numero;
    public String observaciones;
    public String poblacion;
    public String provinciaDescripcion;
    public boolean publicado;
    public boolean publicadoSpecified;
    public boolean rectificativa;
    public boolean rectificativaSpecified;
    public SolicitudServicio solicitudServicio;
    public String telefono;
    public TipoDocumento tipoDocumento;
    public TipoFactura tipoFactura;
    public String tipoViaDescripcion;
    public double totalFactura;
    public boolean totalFacturaSpecified;
    public String usuarioCobro;
    public String usuarioEmision;
    public Vehiculo vehiculo;
    public String fechaModificacion;
    public boolean fechaModificacionSpecified;
    public VectorByte timestamp;
    public long usuarioModificacion;
    public boolean usuarioModificacionSpecified;
    public String vehBastidor;
    public int vehCMA;
    public boolean vehCMASpecified;
    public int vehCilindada;
    public boolean vehCilindadaSpecified;
    public String vehCombustible;
    public String vehContrasenyaHomologacion;
    public String vehEstacionUltimaValidez;
    public String vehFechaPrimeraMatriculacion;
    public boolean vehFechaPrimeraMatriculacionSpecified;
    public String vehFechaUltimaValidez;
    public boolean vehFechaUltimaValidezSpecified;
    public long vehIdVehiculoClasificacion;
    public boolean vehIdVehiculoClasificacionSpecified;
    public String vehMarcaVehiculo;
    public String vehMatricula;
    public String vehModeloVehiculo;
    public String vehNotasOcultas;
    public int vehNumEjes;
    public boolean vehNumEjesSpecified;
    public int vehPMA;
    public boolean vehPMASpecified;
    public int vehPlazas;
    public boolean vehPlazasSpecified;
    public int vehPotenciaFiscal;
    public boolean vehPotenciaFiscalSpecified;
    public String vehProvinciaPrimeraMatriculacion;
    public String vehTipoFichaTecnica;
    public String vehTipoMatricula;
    public String vehVehiculoClasificacionDescripcion;
    public int vehVelocidadMaxima;
    public boolean vehVelocidadMaximaSpecified;
    public String id;
    public String ref;
    
    public Factura(){}
    
    public Factura(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Abono"))
        {
            Object obj = soapObject.getProperty("Abono");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                abono = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                abono = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AbonoSpecified"))
        {
            Object obj = soapObject.getProperty("AbonoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                abonoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                abonoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Apellidos"))
        {
            Object obj = soapObject.getProperty("Apellidos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                apellidos = j.toString();
            }else if (obj!= null && obj instanceof String){
                apellidos = (String) obj;
            }
        }
        if (soapObject.hasProperty("Centro"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Centro");
            centro =  new Centro (j);
            
        }
        if (soapObject.hasProperty("Cliente"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Cliente");
            cliente =  new Cliente (j);
            
        }
        if (soapObject.hasProperty("CodigoPostalDescripcion"))
        {
            Object obj = soapObject.getProperty("CodigoPostalDescripcion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                codigoPostalDescripcion = j.toString();
            }else if (obj!= null && obj instanceof String){
                codigoPostalDescripcion = (String) obj;
            }
        }
        if (soapObject.hasProperty("Domicilio"))
        {
            Object obj = soapObject.getProperty("Domicilio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                domicilio = j.toString();
            }else if (obj!= null && obj instanceof String){
                domicilio = (String) obj;
            }
        }
        if (soapObject.hasProperty("Email"))
        {
            Object obj = soapObject.getProperty("Email");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                email = j.toString();
            }else if (obj!= null && obj instanceof String){
                email = (String) obj;
            }
        }
        if (soapObject.hasProperty("EscPisoPta"))
        {
            Object obj = soapObject.getProperty("EscPisoPta");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                escPisoPta = j.toString();
            }else if (obj!= null && obj instanceof String){
                escPisoPta = (String) obj;
            }
        }
        if (soapObject.hasProperty("EstadoFactura"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("EstadoFactura");
            estadoFactura =  new EstadoFactura (j);
            
        }
        if (soapObject.hasProperty("FK_IdCentro"))
        {
            Object obj = soapObject.getProperty("FK_IdCentro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCentro = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdCentro = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCentroSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdCentroSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCentroSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdCentroSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCliente"))
        {
            Object obj = soapObject.getProperty("FK_IdCliente");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCliente = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdCliente = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdClienteSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdClienteSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdClienteSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdClienteSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCodigoPostal"))
        {
            Object obj = soapObject.getProperty("FK_IdCodigoPostal");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCodigoPostal = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdCodigoPostal = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCodigoPostalSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdCodigoPostalSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCodigoPostalSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdCodigoPostalSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdEstadoFactura"))
        {
            Object obj = soapObject.getProperty("FK_IdEstadoFactura");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdEstadoFactura = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdEstadoFactura = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdEstadoFacturaSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdEstadoFacturaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdEstadoFacturaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdEstadoFacturaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdFacturaPrevia"))
        {
            Object obj = soapObject.getProperty("FK_IdFacturaPrevia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdFacturaPrevia = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdFacturaPrevia = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdFacturaPreviaSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdFacturaPreviaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdFacturaPreviaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdFacturaPreviaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdMecanismoPago"))
        {
            Object obj = soapObject.getProperty("FK_IdMecanismoPago");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdMecanismoPago = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdMecanismoPago = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdMecanismoPagoSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdMecanismoPagoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdMecanismoPagoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdMecanismoPagoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdProvincia"))
        {
            Object obj = soapObject.getProperty("FK_IdProvincia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdProvincia = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdProvincia = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdProvinciaSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdProvinciaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdProvinciaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdProvinciaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdSolicitudServicio"))
        {
            Object obj = soapObject.getProperty("FK_IdSolicitudServicio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdSolicitudServicio = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdSolicitudServicio = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdSolicitudServicioSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdSolicitudServicioSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdSolicitudServicioSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdSolicitudServicioSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTipoDocumento"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoDocumento");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoDocumento = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdTipoDocumento = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTipoDocumentoSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoDocumentoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoDocumentoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdTipoDocumentoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTipoFactura"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoFactura");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoFactura = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdTipoFactura = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTipoFacturaSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoFacturaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoFacturaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdTipoFacturaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTipoVia"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoVia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoVia = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdTipoVia = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTipoViaSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoViaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoViaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdTipoViaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdVehiculo"))
        {
            Object obj = soapObject.getProperty("FK_IdVehiculo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdVehiculo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdVehiculo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdVehiculoSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdVehiculoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdVehiculoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdVehiculoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Factura1"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Factura1");
            factura1 = new VectorFactura(j);
        }
        if (soapObject.hasProperty("Factura2"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Factura2");
            factura2 =  new Factura (j);
            
        }
        if (soapObject.hasProperty("FacturaPrestacion"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("FacturaPrestacion");
            facturaPrestacion = new VectorFacturaPrestacion(j);
        }
        if (soapObject.hasProperty("FacturaTransaccion"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("FacturaTransaccion");
            facturaTransaccion = new VectorFacturaTransaccion(j);
        }
        if (soapObject.hasProperty("FechaCobro"))
        {
            Object obj = soapObject.getProperty("FechaCobro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaCobro = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaCobro = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaCobroSpecified"))
        {
            Object obj = soapObject.getProperty("FechaCobroSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaCobroSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaCobroSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaEmision"))
        {
            Object obj = soapObject.getProperty("FechaEmision");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaEmision = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaEmision = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaEmisionSpecified"))
        {
            Object obj = soapObject.getProperty("FechaEmisionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaEmisionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaEmisionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdFactura"))
        {
            Object obj = soapObject.getProperty("IdFactura");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idFactura = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idFactura = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdFacturaSpecified"))
        {
            Object obj = soapObject.getProperty("IdFacturaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idFacturaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idFacturaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("MecanismoPago"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("MecanismoPago");
            mecanismoPago =  new MecanismoPago (j);
            
        }
        if (soapObject.hasProperty("MecanismoPagoDescripcion"))
        {
            Object obj = soapObject.getProperty("MecanismoPagoDescripcion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mecanismoPagoDescripcion = j.toString();
            }else if (obj!= null && obj instanceof String){
                mecanismoPagoDescripcion = (String) obj;
            }
        }
        if (soapObject.hasProperty("Movil"))
        {
            Object obj = soapObject.getProperty("Movil");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                movil = j.toString();
            }else if (obj!= null && obj instanceof String){
                movil = (String) obj;
            }
        }
        if (soapObject.hasProperty("NIF"))
        {
            Object obj = soapObject.getProperty("NIF");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nIF = j.toString();
            }else if (obj!= null && obj instanceof String){
                nIF = (String) obj;
            }
        }
        if (soapObject.hasProperty("Nombre"))
        {
            Object obj = soapObject.getProperty("Nombre");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nombre = j.toString();
            }else if (obj!= null && obj instanceof String){
                nombre = (String) obj;
            }
        }
        if (soapObject.hasProperty("NotasOcultas"))
        {
            Object obj = soapObject.getProperty("NotasOcultas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                notasOcultas = j.toString();
            }else if (obj!= null && obj instanceof String){
                notasOcultas = (String) obj;
            }
        }
        if (soapObject.hasProperty("NumFactura"))
        {
            Object obj = soapObject.getProperty("NumFactura");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numFactura = j.toString();
            }else if (obj!= null && obj instanceof String){
                numFactura = (String) obj;
            }
        }
        if (soapObject.hasProperty("Numero"))
        {
            Object obj = soapObject.getProperty("Numero");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numero = j.toString();
            }else if (obj!= null && obj instanceof String){
                numero = (String) obj;
            }
        }
        if (soapObject.hasProperty("Observaciones"))
        {
            Object obj = soapObject.getProperty("Observaciones");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                observaciones = j.toString();
            }else if (obj!= null && obj instanceof String){
                observaciones = (String) obj;
            }
        }
        if (soapObject.hasProperty("Poblacion"))
        {
            Object obj = soapObject.getProperty("Poblacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                poblacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                poblacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("ProvinciaDescripcion"))
        {
            Object obj = soapObject.getProperty("ProvinciaDescripcion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                provinciaDescripcion = j.toString();
            }else if (obj!= null && obj instanceof String){
                provinciaDescripcion = (String) obj;
            }
        }
        if (soapObject.hasProperty("Publicado"))
        {
            Object obj = soapObject.getProperty("Publicado");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicado = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicado = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PublicadoSpecified"))
        {
            Object obj = soapObject.getProperty("PublicadoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicadoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicadoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Rectificativa"))
        {
            Object obj = soapObject.getProperty("Rectificativa");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                rectificativa = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                rectificativa = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("RectificativaSpecified"))
        {
            Object obj = soapObject.getProperty("RectificativaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                rectificativaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                rectificativaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("SolicitudServicio"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("SolicitudServicio");
            solicitudServicio =  new SolicitudServicio (j);
            
        }
        if (soapObject.hasProperty("Telefono"))
        {
            Object obj = soapObject.getProperty("Telefono");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                telefono = j.toString();
            }else if (obj!= null && obj instanceof String){
                telefono = (String) obj;
            }
        }
        if (soapObject.hasProperty("TipoDocumento"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("TipoDocumento");
            tipoDocumento =  new TipoDocumento (j);
            
        }
        if (soapObject.hasProperty("TipoFactura"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("TipoFactura");
            tipoFactura =  new TipoFactura (j);
            
        }
        if (soapObject.hasProperty("TipoViaDescripcion"))
        {
            Object obj = soapObject.getProperty("TipoViaDescripcion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tipoViaDescripcion = j.toString();
            }else if (obj!= null && obj instanceof String){
                tipoViaDescripcion = (String) obj;
            }
        }
        if (soapObject.hasProperty("TotalFactura"))
        {
            Object obj = soapObject.getProperty("TotalFactura");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalFactura = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                totalFactura = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TotalFacturaSpecified"))
        {
            Object obj = soapObject.getProperty("TotalFacturaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalFacturaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                totalFacturaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("UsuarioCobro"))
        {
            Object obj = soapObject.getProperty("UsuarioCobro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioCobro = j.toString();
            }else if (obj!= null && obj instanceof String){
                usuarioCobro = (String) obj;
            }
        }
        if (soapObject.hasProperty("UsuarioEmision"))
        {
            Object obj = soapObject.getProperty("UsuarioEmision");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioEmision = j.toString();
            }else if (obj!= null && obj instanceof String){
                usuarioEmision = (String) obj;
            }
        }
        if (soapObject.hasProperty("Vehiculo"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Vehiculo");
            vehiculo =  new Vehiculo (j);
            
        }
        if (soapObject.hasProperty("fechaModificacion"))
        {
            Object obj = soapObject.getProperty("fechaModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaModificacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("fechaModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("timestamp"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("timestamp");
            timestamp = new VectorByte(j);
        }
        if (soapObject.hasProperty("usuarioModificacion"))
        {
            Object obj = soapObject.getProperty("usuarioModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                usuarioModificacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("usuarioModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("usuarioModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                usuarioModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("vehBastidor"))
        {
            Object obj = soapObject.getProperty("vehBastidor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehBastidor = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehBastidor = (String) obj;
            }
        }
        if (soapObject.hasProperty("vehCMA"))
        {
            Object obj = soapObject.getProperty("vehCMA");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehCMA = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                vehCMA = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("vehCMASpecified"))
        {
            Object obj = soapObject.getProperty("vehCMASpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehCMASpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                vehCMASpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("vehCilindada"))
        {
            Object obj = soapObject.getProperty("vehCilindada");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehCilindada = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                vehCilindada = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("vehCilindadaSpecified"))
        {
            Object obj = soapObject.getProperty("vehCilindadaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehCilindadaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                vehCilindadaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("vehCombustible"))
        {
            Object obj = soapObject.getProperty("vehCombustible");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehCombustible = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehCombustible = (String) obj;
            }
        }
        if (soapObject.hasProperty("vehContrasenyaHomologacion"))
        {
            Object obj = soapObject.getProperty("vehContrasenyaHomologacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehContrasenyaHomologacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehContrasenyaHomologacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("vehEstacionUltimaValidez"))
        {
            Object obj = soapObject.getProperty("vehEstacionUltimaValidez");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehEstacionUltimaValidez = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehEstacionUltimaValidez = (String) obj;
            }
        }
        if (soapObject.hasProperty("vehFechaPrimeraMatriculacion"))
        {
            Object obj = soapObject.getProperty("vehFechaPrimeraMatriculacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehFechaPrimeraMatriculacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehFechaPrimeraMatriculacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("vehFechaPrimeraMatriculacionSpecified"))
        {
            Object obj = soapObject.getProperty("vehFechaPrimeraMatriculacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehFechaPrimeraMatriculacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                vehFechaPrimeraMatriculacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("vehFechaUltimaValidez"))
        {
            Object obj = soapObject.getProperty("vehFechaUltimaValidez");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehFechaUltimaValidez = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehFechaUltimaValidez = (String) obj;
            }
        }
        if (soapObject.hasProperty("vehFechaUltimaValidezSpecified"))
        {
            Object obj = soapObject.getProperty("vehFechaUltimaValidezSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehFechaUltimaValidezSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                vehFechaUltimaValidezSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("vehIdVehiculoClasificacion"))
        {
            Object obj = soapObject.getProperty("vehIdVehiculoClasificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehIdVehiculoClasificacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                vehIdVehiculoClasificacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("vehIdVehiculoClasificacionSpecified"))
        {
            Object obj = soapObject.getProperty("vehIdVehiculoClasificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehIdVehiculoClasificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                vehIdVehiculoClasificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("vehMarcaVehiculo"))
        {
            Object obj = soapObject.getProperty("vehMarcaVehiculo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehMarcaVehiculo = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehMarcaVehiculo = (String) obj;
            }
        }
        if (soapObject.hasProperty("vehMatricula"))
        {
            Object obj = soapObject.getProperty("vehMatricula");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehMatricula = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehMatricula = (String) obj;
            }
        }
        if (soapObject.hasProperty("vehModeloVehiculo"))
        {
            Object obj = soapObject.getProperty("vehModeloVehiculo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehModeloVehiculo = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehModeloVehiculo = (String) obj;
            }
        }
        if (soapObject.hasProperty("vehNotasOcultas"))
        {
            Object obj = soapObject.getProperty("vehNotasOcultas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehNotasOcultas = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehNotasOcultas = (String) obj;
            }
        }
        if (soapObject.hasProperty("vehNumEjes"))
        {
            Object obj = soapObject.getProperty("vehNumEjes");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehNumEjes = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                vehNumEjes = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("vehNumEjesSpecified"))
        {
            Object obj = soapObject.getProperty("vehNumEjesSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehNumEjesSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                vehNumEjesSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("vehPMA"))
        {
            Object obj = soapObject.getProperty("vehPMA");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehPMA = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                vehPMA = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("vehPMASpecified"))
        {
            Object obj = soapObject.getProperty("vehPMASpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehPMASpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                vehPMASpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("vehPlazas"))
        {
            Object obj = soapObject.getProperty("vehPlazas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehPlazas = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                vehPlazas = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("vehPlazasSpecified"))
        {
            Object obj = soapObject.getProperty("vehPlazasSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehPlazasSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                vehPlazasSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("vehPotenciaFiscal"))
        {
            Object obj = soapObject.getProperty("vehPotenciaFiscal");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehPotenciaFiscal = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                vehPotenciaFiscal = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("vehPotenciaFiscalSpecified"))
        {
            Object obj = soapObject.getProperty("vehPotenciaFiscalSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehPotenciaFiscalSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                vehPotenciaFiscalSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("vehProvinciaPrimeraMatriculacion"))
        {
            Object obj = soapObject.getProperty("vehProvinciaPrimeraMatriculacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehProvinciaPrimeraMatriculacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehProvinciaPrimeraMatriculacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("vehTipoFichaTecnica"))
        {
            Object obj = soapObject.getProperty("vehTipoFichaTecnica");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehTipoFichaTecnica = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehTipoFichaTecnica = (String) obj;
            }
        }
        if (soapObject.hasProperty("vehTipoMatricula"))
        {
            Object obj = soapObject.getProperty("vehTipoMatricula");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehTipoMatricula = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehTipoMatricula = (String) obj;
            }
        }
        if (soapObject.hasProperty("vehVehiculoClasificacionDescripcion"))
        {
            Object obj = soapObject.getProperty("vehVehiculoClasificacionDescripcion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehVehiculoClasificacionDescripcion = j.toString();
            }else if (obj!= null && obj instanceof String){
                vehVehiculoClasificacionDescripcion = (String) obj;
            }
        }
        if (soapObject.hasProperty("vehVelocidadMaxima"))
        {
            Object obj = soapObject.getProperty("vehVelocidadMaxima");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehVelocidadMaxima = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                vehVelocidadMaxima = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("vehVelocidadMaximaSpecified"))
        {
            Object obj = soapObject.getProperty("vehVelocidadMaximaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vehVelocidadMaximaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                vehVelocidadMaximaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return abono;
            case 1:
                return abonoSpecified;
            case 2:
                return apellidos;
            case 3:
                return centro;
            case 4:
                return cliente;
            case 5:
                return codigoPostalDescripcion;
            case 6:
                return domicilio;
            case 7:
                return email;
            case 8:
                return escPisoPta;
            case 9:
                return estadoFactura;
            case 10:
                return fK_IdCentro;
            case 11:
                return fK_IdCentroSpecified;
            case 12:
                return fK_IdCliente;
            case 13:
                return fK_IdClienteSpecified;
            case 14:
                return fK_IdCodigoPostal;
            case 15:
                return fK_IdCodigoPostalSpecified;
            case 16:
                return fK_IdEstadoFactura;
            case 17:
                return fK_IdEstadoFacturaSpecified;
            case 18:
                return fK_IdFacturaPrevia;
            case 19:
                return fK_IdFacturaPreviaSpecified;
            case 20:
                return fK_IdMecanismoPago;
            case 21:
                return fK_IdMecanismoPagoSpecified;
            case 22:
                return fK_IdProvincia;
            case 23:
                return fK_IdProvinciaSpecified;
            case 24:
                return fK_IdSolicitudServicio;
            case 25:
                return fK_IdSolicitudServicioSpecified;
            case 26:
                return fK_IdTipoDocumento;
            case 27:
                return fK_IdTipoDocumentoSpecified;
            case 28:
                return fK_IdTipoFactura;
            case 29:
                return fK_IdTipoFacturaSpecified;
            case 30:
                return fK_IdTipoVia;
            case 31:
                return fK_IdTipoViaSpecified;
            case 32:
                return fK_IdVehiculo;
            case 33:
                return fK_IdVehiculoSpecified;
            case 34:
                return factura1;
            case 35:
                return factura2;
            case 36:
                return facturaPrestacion;
            case 37:
                return facturaTransaccion;
            case 38:
                return fechaCobro;
            case 39:
                return fechaCobroSpecified;
            case 40:
                return fechaEmision;
            case 41:
                return fechaEmisionSpecified;
            case 42:
                return idFactura;
            case 43:
                return idFacturaSpecified;
            case 44:
                return mecanismoPago;
            case 45:
                return mecanismoPagoDescripcion;
            case 46:
                return movil;
            case 47:
                return nIF;
            case 48:
                return nombre;
            case 49:
                return notasOcultas;
            case 50:
                return numFactura;
            case 51:
                return numero;
            case 52:
                return observaciones;
            case 53:
                return poblacion;
            case 54:
                return provinciaDescripcion;
            case 55:
                return publicado;
            case 56:
                return publicadoSpecified;
            case 57:
                return rectificativa;
            case 58:
                return rectificativaSpecified;
            case 59:
                return solicitudServicio;
            case 60:
                return telefono;
            case 61:
                return tipoDocumento;
            case 62:
                return tipoFactura;
            case 63:
                return tipoViaDescripcion;
            case 64:
                return totalFactura;
            case 65:
                return totalFacturaSpecified;
            case 66:
                return usuarioCobro;
            case 67:
                return usuarioEmision;
            case 68:
                return vehiculo;
            case 69:
                return fechaModificacion;
            case 70:
                return fechaModificacionSpecified;
            case 71:
                return timestamp.toString();
            case 72:
                return usuarioModificacion;
            case 73:
                return usuarioModificacionSpecified;
            case 74:
                return vehBastidor;
            case 75:
                return vehCMA;
            case 76:
                return vehCMASpecified;
            case 77:
                return vehCilindada;
            case 78:
                return vehCilindadaSpecified;
            case 79:
                return vehCombustible;
            case 80:
                return vehContrasenyaHomologacion;
            case 81:
                return vehEstacionUltimaValidez;
            case 82:
                return vehFechaPrimeraMatriculacion;
            case 83:
                return vehFechaPrimeraMatriculacionSpecified;
            case 84:
                return vehFechaUltimaValidez;
            case 85:
                return vehFechaUltimaValidezSpecified;
            case 86:
                return vehIdVehiculoClasificacion;
            case 87:
                return vehIdVehiculoClasificacionSpecified;
            case 88:
                return vehMarcaVehiculo;
            case 89:
                return vehMatricula;
            case 90:
                return vehModeloVehiculo;
            case 91:
                return vehNotasOcultas;
            case 92:
                return vehNumEjes;
            case 93:
                return vehNumEjesSpecified;
            case 94:
                return vehPMA;
            case 95:
                return vehPMASpecified;
            case 96:
                return vehPlazas;
            case 97:
                return vehPlazasSpecified;
            case 98:
                return vehPotenciaFiscal;
            case 99:
                return vehPotenciaFiscalSpecified;
            case 100:
                return vehProvinciaPrimeraMatriculacion;
            case 101:
                return vehTipoFichaTecnica;
            case 102:
                return vehTipoMatricula;
            case 103:
                return vehVehiculoClasificacionDescripcion;
            case 104:
                return vehVelocidadMaxima;
            case 105:
                return vehVelocidadMaximaSpecified;
            case 106:
                return id;
            case 107:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 108;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Abono";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AbonoSpecified";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Apellidos";
                break;
            case 3:
                info.type = Centro.class;
                info.name = "Centro";
                break;
            case 4:
                info.type = Cliente.class;
                info.name = "Cliente";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CodigoPostalDescripcion";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Domicilio";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Email";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EscPisoPta";
                break;
            case 9:
                info.type = EstadoFactura.class;
                info.name = "EstadoFactura";
                break;
            case 10:
                info.type = Long.class;
                info.name = "FK_IdCentro";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdCentroSpecified";
                break;
            case 12:
                info.type = Long.class;
                info.name = "FK_IdCliente";
                break;
            case 13:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdClienteSpecified";
                break;
            case 14:
                info.type = Long.class;
                info.name = "FK_IdCodigoPostal";
                break;
            case 15:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdCodigoPostalSpecified";
                break;
            case 16:
                info.type = Long.class;
                info.name = "FK_IdEstadoFactura";
                break;
            case 17:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdEstadoFacturaSpecified";
                break;
            case 18:
                info.type = Long.class;
                info.name = "FK_IdFacturaPrevia";
                break;
            case 19:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdFacturaPreviaSpecified";
                break;
            case 20:
                info.type = Long.class;
                info.name = "FK_IdMecanismoPago";
                break;
            case 21:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdMecanismoPagoSpecified";
                break;
            case 22:
                info.type = Long.class;
                info.name = "FK_IdProvincia";
                break;
            case 23:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdProvinciaSpecified";
                break;
            case 24:
                info.type = Long.class;
                info.name = "FK_IdSolicitudServicio";
                break;
            case 25:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdSolicitudServicioSpecified";
                break;
            case 26:
                info.type = Long.class;
                info.name = "FK_IdTipoDocumento";
                break;
            case 27:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdTipoDocumentoSpecified";
                break;
            case 28:
                info.type = Long.class;
                info.name = "FK_IdTipoFactura";
                break;
            case 29:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdTipoFacturaSpecified";
                break;
            case 30:
                info.type = Long.class;
                info.name = "FK_IdTipoVia";
                break;
            case 31:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdTipoViaSpecified";
                break;
            case 32:
                info.type = Long.class;
                info.name = "FK_IdVehiculo";
                break;
            case 33:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdVehiculoSpecified";
                break;
            case 34:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "Factura1";
                break;
            case 35:
                info.type = Factura.class;
                info.name = "Factura2";
                break;
            case 36:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "FacturaPrestacion";
                break;
            case 37:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "FacturaTransaccion";
                break;
            case 38:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaCobro";
                break;
            case 39:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaCobroSpecified";
                break;
            case 40:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaEmision";
                break;
            case 41:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaEmisionSpecified";
                break;
            case 42:
                info.type = Long.class;
                info.name = "IdFactura";
                break;
            case 43:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdFacturaSpecified";
                break;
            case 44:
                info.type = MecanismoPago.class;
                info.name = "MecanismoPago";
                break;
            case 45:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "MecanismoPagoDescripcion";
                break;
            case 46:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Movil";
                break;
            case 47:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NIF";
                break;
            case 48:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Nombre";
                break;
            case 49:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NotasOcultas";
                break;
            case 50:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NumFactura";
                break;
            case 51:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Numero";
                break;
            case 52:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Observaciones";
                break;
            case 53:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Poblacion";
                break;
            case 54:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProvinciaDescripcion";
                break;
            case 55:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Publicado";
                break;
            case 56:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PublicadoSpecified";
                break;
            case 57:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Rectificativa";
                break;
            case 58:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "RectificativaSpecified";
                break;
            case 59:
                info.type = SolicitudServicio.class;
                info.name = "SolicitudServicio";
                break;
            case 60:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Telefono";
                break;
            case 61:
                info.type = TipoDocumento.class;
                info.name = "TipoDocumento";
                break;
            case 62:
                info.type = TipoFactura.class;
                info.name = "TipoFactura";
                break;
            case 63:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TipoViaDescripcion";
                break;
            case 64:
                info.type = Double.class;
                info.name = "TotalFactura";
                break;
            case 65:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TotalFacturaSpecified";
                break;
            case 66:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "UsuarioCobro";
                break;
            case 67:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "UsuarioEmision";
                break;
            case 68:
                info.type = Vehiculo.class;
                info.name = "Vehiculo";
                break;
            case 69:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "fechaModificacion";
                break;
            case 70:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "fechaModificacionSpecified";
                break;
            case 71:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "timestamp";
                break;
            case 72:
                info.type = Long.class;
                info.name = "usuarioModificacion";
                break;
            case 73:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "usuarioModificacionSpecified";
                break;
            case 74:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "vehBastidor";
                break;
            case 75:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "vehCMA";
                break;
            case 76:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "vehCMASpecified";
                break;
            case 77:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "vehCilindada";
                break;
            case 78:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "vehCilindadaSpecified";
                break;
            case 79:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "vehCombustible";
                break;
            case 80:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "vehContrasenyaHomologacion";
                break;
            case 81:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "vehEstacionUltimaValidez";
                break;
            case 82:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "vehFechaPrimeraMatriculacion";
                break;
            case 83:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "vehFechaPrimeraMatriculacionSpecified";
                break;
            case 84:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "vehFechaUltimaValidez";
                break;
            case 85:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "vehFechaUltimaValidezSpecified";
                break;
            case 86:
                info.type = Long.class;
                info.name = "vehIdVehiculoClasificacion";
                break;
            case 87:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "vehIdVehiculoClasificacionSpecified";
                break;
            case 88:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "vehMarcaVehiculo";
                break;
            case 89:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "vehMatricula";
                break;
            case 90:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "vehModeloVehiculo";
                break;
            case 91:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "vehNotasOcultas";
                break;
            case 92:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "vehNumEjes";
                break;
            case 93:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "vehNumEjesSpecified";
                break;
            case 94:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "vehPMA";
                break;
            case 95:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "vehPMASpecified";
                break;
            case 96:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "vehPlazas";
                break;
            case 97:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "vehPlazasSpecified";
                break;
            case 98:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "vehPotenciaFiscal";
                break;
            case 99:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "vehPotenciaFiscalSpecified";
                break;
            case 100:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "vehProvinciaPrimeraMatriculacion";
                break;
            case 101:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "vehTipoFichaTecnica";
                break;
            case 102:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "vehTipoMatricula";
                break;
            case 103:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "vehVehiculoClasificacionDescripcion";
                break;
            case 104:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "vehVelocidadMaxima";
                break;
            case 105:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "vehVelocidadMaximaSpecified";
                break;
            case 106:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 107:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
