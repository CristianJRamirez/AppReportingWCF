package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.ReportingService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 4/25/2017 7:43:53 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import java.util.List;
import org.ksoap2.SoapEnvelope;
import org.ksoap2.SoapFault;
import org.ksoap2.serialization.SoapSerializationEnvelope;
import org.ksoap2.transport.HttpTransportSE;
import org.ksoap2.HeaderProperty;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;
import android.os.AsyncTask;
import org.ksoap2.serialization.MarshalFloat;

public class ReportingService {
    
    public String NAMESPACE ="http://tempuri.org/";
    public String url="http://172.18.2.190/DNOTAReporting/ReportingService.svc";
    public int timeOut = 60000;
    public IWsdl2CodeEvents eventHandler;
    public WS_Enums.SoapProtocolVersion soapVersion;
    
    public ReportingService(){}
    
    public ReportingService(IWsdl2CodeEvents eventHandler)
    {
        this.eventHandler = eventHandler;
    }
    public ReportingService(IWsdl2CodeEvents eventHandler,String url)
    {
        this.eventHandler = eventHandler;
        this.url = url;
    }
    public ReportingService(IWsdl2CodeEvents eventHandler,String url,int timeOutInSeconds)
    {
        this.eventHandler = eventHandler;
        this.url = url;
        this.setTimeOut(timeOutInSeconds);
    }
    public void setTimeOut(int seconds){
        this.timeOut = seconds * 1000;
    }
    public void setUrl(String url){
        this.url = url;
    }
    public void ExecuteMicroAsync(long idUsuario,boolean idUsuarioSpecified,String query,String schema,VectorKeyValuePairOfstringanyType args) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        ExecuteMicroAsync(idUsuario, idUsuarioSpecified, query, schema, args, null);
    }
    
    public void ExecuteMicroAsync(final long idUsuario,final boolean idUsuarioSpecified,final String query,final String schema,final VectorKeyValuePairOfstringanyType args,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, Void>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected Void doInBackground(Void... params) {
                ExecuteMicro(idUsuario, idUsuarioSpecified, query, schema, args, headers);
                return null;
            }
            @Override
            protected void onPostExecute(Void result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("ExecuteMicro", result);
                }
            }
        }.execute();
    }
    
    public void ExecuteMicro(long idUsuario,boolean idUsuarioSpecified,String query,String schema,VectorKeyValuePairOfstringanyType args){
        ExecuteMicro(idUsuario, idUsuarioSpecified, query, schema, args, null);
    }
    
    public void ExecuteMicro(long idUsuario,boolean idUsuarioSpecified,String query,String schema,VectorKeyValuePairOfstringanyType args,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","ExecuteMicro");
        soapReq.addProperty("idUsuario",idUsuario);
        soapReq.addProperty("idUsuarioSpecified",idUsuarioSpecified);
        soapReq.addProperty("query",query);
        soapReq.addProperty("schema",schema);
        soapReq.addProperty("args",args);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/ExecuteMicro", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/ExecuteMicro", soapEnvelope);
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
    }
    
    public void getSolicitudDuplicadosAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getSolicitudDuplicadosAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getSolicitudDuplicadosAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_SolicitudDuplicados_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_SolicitudDuplicados_Result doInBackground(Void... params) {
                return getSolicitudDuplicados(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_SolicitudDuplicados_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getSolicitudDuplicados", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_SolicitudDuplicados_Result getSolicitudDuplicados(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getSolicitudDuplicados(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_SolicitudDuplicados_Result getSolicitudDuplicados(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getSolicitudDuplicados");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getSolicitudDuplicados", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getSolicitudDuplicados", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_SolicitudDuplicados_Result resultVariable = new VectorQUERY_SolicitudDuplicados_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getExpedientesVupueVuyAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getExpedientesVupueVuyAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getExpedientesVupueVuyAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ExpedientesVupueVuy_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ExpedientesVupueVuy_Result doInBackground(Void... params) {
                return getExpedientesVupueVuy(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ExpedientesVupueVuy_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getExpedientesVupueVuy", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ExpedientesVupueVuy_Result getExpedientesVupueVuy(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getExpedientesVupueVuy(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_ExpedientesVupueVuy_Result getExpedientesVupueVuy(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getExpedientesVupueVuy");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getExpedientesVupueVuy", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getExpedientesVupueVuy", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ExpedientesVupueVuy_Result resultVariable = new VectorQUERY_ExpedientesVupueVuy_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getDefectologiaEstacionSPCAsync(String idCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getDefectologiaEstacionSPCAsync(idCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getDefectologiaEstacionSPCAsync(final String idCentro,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_DefectologiaEstacionSPC_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_DefectologiaEstacionSPC_Result doInBackground(Void... params) {
                return getDefectologiaEstacionSPC(idCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_DefectologiaEstacionSPC_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getDefectologiaEstacionSPC", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_DefectologiaEstacionSPC_Result getDefectologiaEstacionSPC(String idCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getDefectologiaEstacionSPC(idCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_DefectologiaEstacionSPC_Result getDefectologiaEstacionSPC(String idCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getDefectologiaEstacionSPC");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getDefectologiaEstacionSPC", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getDefectologiaEstacionSPC", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_DefectologiaEstacionSPC_Result resultVariable = new VectorQUERY_DefectologiaEstacionSPC_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getDefectologiaUsuarioSPCAsync(String idCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getDefectologiaUsuarioSPCAsync(idCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getDefectologiaUsuarioSPCAsync(final String idCentro,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_DefectologiaUsuarioSPC_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_DefectologiaUsuarioSPC_Result doInBackground(Void... params) {
                return getDefectologiaUsuarioSPC(idCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_DefectologiaUsuarioSPC_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getDefectologiaUsuarioSPC", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_DefectologiaUsuarioSPC_Result getDefectologiaUsuarioSPC(String idCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getDefectologiaUsuarioSPC(idCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_DefectologiaUsuarioSPC_Result getDefectologiaUsuarioSPC(String idCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getDefectologiaUsuarioSPC");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getDefectologiaUsuarioSPC", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getDefectologiaUsuarioSPC", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_DefectologiaUsuarioSPC_Result resultVariable = new VectorQUERY_DefectologiaUsuarioSPC_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getGrupoServicioAsync() throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getGrupoServicioAsync(null);
    }
    
    public void getGrupoServicioAsync(final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_GetGrupoServicio_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_GetGrupoServicio_Result doInBackground(Void... params) {
                return getGrupoServicio(headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_GetGrupoServicio_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getGrupoServicio", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_GetGrupoServicio_Result getGrupoServicio(){
        return getGrupoServicio(null);
    }
    
    public VectorQUERY_GetGrupoServicio_Result getGrupoServicio(List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getGrupoServicio");
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getGrupoServicio", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getGrupoServicio", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_GetGrupoServicio_Result resultVariable = new VectorQUERY_GetGrupoServicio_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getCajadeVariosAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getCajadeVariosAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getCajadeVariosAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_CajadeVarios_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_CajadeVarios_Result doInBackground(Void... params) {
                return getCajadeVarios(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_CajadeVarios_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getCajadeVarios", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_CajadeVarios_Result getCajadeVarios(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getCajadeVarios(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_CajadeVarios_Result getCajadeVarios(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getCajadeVarios");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getCajadeVarios", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getCajadeVarios", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_CajadeVarios_Result resultVariable = new VectorQUERY_CajadeVarios_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getArqueoCajaResumidoAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String idUsuario) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getArqueoCajaResumidoAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, idUsuario, null);
    }
    
    public void getArqueoCajaResumidoAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final String idUsuario,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ArqueoCajaResumido_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ArqueoCajaResumido_Result doInBackground(Void... params) {
                return getArqueoCajaResumido(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, idUsuario, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ArqueoCajaResumido_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getArqueoCajaResumido", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ArqueoCajaResumido_Result getArqueoCajaResumido(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String idUsuario){
        return getArqueoCajaResumido(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, idUsuario, null);
    }
    
    public VectorQUERY_ArqueoCajaResumido_Result getArqueoCajaResumido(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String idUsuario,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getArqueoCajaResumido");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapReq.addProperty("IdUsuario",idUsuario);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getArqueoCajaResumido", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getArqueoCajaResumido", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ArqueoCajaResumido_Result resultVariable = new VectorQUERY_ArqueoCajaResumido_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getHistoricoEntregaSobresAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String idUsuario,int tipotrans,boolean tipotransSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getHistoricoEntregaSobresAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, idUsuario, tipotrans, tipotransSpecified, null);
    }
    
    public void getHistoricoEntregaSobresAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final String idUsuario,final int tipotrans,final boolean tipotransSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_HistoricoEntregaSobres_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_HistoricoEntregaSobres_Result doInBackground(Void... params) {
                return getHistoricoEntregaSobres(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, idUsuario, tipotrans, tipotransSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_HistoricoEntregaSobres_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getHistoricoEntregaSobres", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_HistoricoEntregaSobres_Result getHistoricoEntregaSobres(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String idUsuario,int tipotrans,boolean tipotransSpecified){
        return getHistoricoEntregaSobres(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, idUsuario, tipotrans, tipotransSpecified, null);
    }
    
    public VectorQUERY_HistoricoEntregaSobres_Result getHistoricoEntregaSobres(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String idUsuario,int tipotrans,boolean tipotransSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getHistoricoEntregaSobres");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapReq.addProperty("IdUsuario",idUsuario);
        soapReq.addProperty("tipotrans",tipotrans);
        soapReq.addProperty("tipotransSpecified",tipotransSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getHistoricoEntregaSobres", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getHistoricoEntregaSobres", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_HistoricoEntregaSobres_Result resultVariable = new VectorQUERY_HistoricoEntregaSobres_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getDefectologiaSPCAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getDefectologiaSPCAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getDefectologiaSPCAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_DefectologiaSPC_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_DefectologiaSPC_Result doInBackground(Void... params) {
                return getDefectologiaSPC(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_DefectologiaSPC_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getDefectologiaSPC", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_DefectologiaSPC_Result getDefectologiaSPC(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getDefectologiaSPC(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_DefectologiaSPC_Result getDefectologiaSPC(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getDefectologiaSPC");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getDefectologiaSPC", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getDefectologiaSPC", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_DefectologiaSPC_Result resultVariable = new VectorQUERY_DefectologiaSPC_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getInspeccionesFranjaHorariaAsync(String idCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,long variable,boolean variableSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getInspeccionesFranjaHorariaAsync(idCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, variable, variableSpecified, null);
    }
    
    public void getInspeccionesFranjaHorariaAsync(final String idCentro,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final long variable,final boolean variableSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_InspeccionesFranjaHoraria_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_InspeccionesFranjaHoraria_Result doInBackground(Void... params) {
                return getInspeccionesFranjaHoraria(idCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, variable, variableSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_InspeccionesFranjaHoraria_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getInspeccionesFranjaHoraria", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_InspeccionesFranjaHoraria_Result getInspeccionesFranjaHoraria(String idCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,long variable,boolean variableSpecified){
        return getInspeccionesFranjaHoraria(idCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, variable, variableSpecified, null);
    }
    
    public VectorQUERY_InspeccionesFranjaHoraria_Result getInspeccionesFranjaHoraria(String idCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,long variable,boolean variableSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getInspeccionesFranjaHoraria");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapReq.addProperty("variable",variable);
        soapReq.addProperty("variableSpecified",variableSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getInspeccionesFranjaHoraria", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getInspeccionesFranjaHoraria", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_InspeccionesFranjaHoraria_Result resultVariable = new VectorQUERY_InspeccionesFranjaHoraria_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getListadoProduccionMensualInspectorAsync(String idCentro,String fecha,boolean fechaSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getListadoProduccionMensualInspectorAsync(idCentro, fecha, fechaSpecified, null);
    }
    
    public void getListadoProduccionMensualInspectorAsync(final String idCentro,final String fecha,final boolean fechaSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ListadoProduccionMensualInspector_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ListadoProduccionMensualInspector_Result doInBackground(Void... params) {
                return getListadoProduccionMensualInspector(idCentro, fecha, fechaSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ListadoProduccionMensualInspector_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getListadoProduccionMensualInspector", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ListadoProduccionMensualInspector_Result getListadoProduccionMensualInspector(String idCentro,String fecha,boolean fechaSpecified){
        return getListadoProduccionMensualInspector(idCentro, fecha, fechaSpecified, null);
    }
    
    public VectorQUERY_ListadoProduccionMensualInspector_Result getListadoProduccionMensualInspector(String idCentro,String fecha,boolean fechaSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getListadoProduccionMensualInspector");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("Fecha",fecha);
        soapReq.addProperty("FechaSpecified",fechaSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getListadoProduccionMensualInspector", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getListadoProduccionMensualInspector", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ListadoProduccionMensualInspector_Result resultVariable = new VectorQUERY_ListadoProduccionMensualInspector_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getResumenEstadisticoDefectosAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getResumenEstadisticoDefectosAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getResumenEstadisticoDefectosAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ResumenEstadisticoDefectos_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ResumenEstadisticoDefectos_Result doInBackground(Void... params) {
                return getResumenEstadisticoDefectos(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ResumenEstadisticoDefectos_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getResumenEstadisticoDefectos", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ResumenEstadisticoDefectos_Result getResumenEstadisticoDefectos(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getResumenEstadisticoDefectos(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_ResumenEstadisticoDefectos_Result getResumenEstadisticoDefectos(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getResumenEstadisticoDefectos");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getResumenEstadisticoDefectos", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getResumenEstadisticoDefectos", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ResumenEstadisticoDefectos_Result resultVariable = new VectorQUERY_ResumenEstadisticoDefectos_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getProvinciasAsync() throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getProvinciasAsync(null);
    }
    
    public void getProvinciasAsync(final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_Provincias_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_Provincias_Result doInBackground(Void... params) {
                return getProvincias(headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_Provincias_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getProvincias", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_Provincias_Result getProvincias(){
        return getProvincias(null);
    }
    
    public VectorQUERY_Provincias_Result getProvincias(List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getProvincias");
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getProvincias", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getProvincias", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_Provincias_Result resultVariable = new VectorQUERY_Provincias_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getRelacionExpedienteTaxaIndustriaAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getRelacionExpedienteTaxaIndustriaAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getRelacionExpedienteTaxaIndustriaAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_RelacionExpedienteTaxaIndustria_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_RelacionExpedienteTaxaIndustria_Result doInBackground(Void... params) {
                return getRelacionExpedienteTaxaIndustria(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_RelacionExpedienteTaxaIndustria_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getRelacionExpedienteTaxaIndustria", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_RelacionExpedienteTaxaIndustria_Result getRelacionExpedienteTaxaIndustria(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getRelacionExpedienteTaxaIndustria(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_RelacionExpedienteTaxaIndustria_Result getRelacionExpedienteTaxaIndustria(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getRelacionExpedienteTaxaIndustria");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getRelacionExpedienteTaxaIndustria", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getRelacionExpedienteTaxaIndustria", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_RelacionExpedienteTaxaIndustria_Result resultVariable = new VectorQUERY_RelacionExpedienteTaxaIndustria_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getRelacionInspeccionesMovilAsync(String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getRelacionInspeccionesMovilAsync(fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getRelacionInspeccionesMovilAsync(final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_RelacionInspeccionesMovil_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_RelacionInspeccionesMovil_Result doInBackground(Void... params) {
                return getRelacionInspeccionesMovil(fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_RelacionInspeccionesMovil_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getRelacionInspeccionesMovil", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_RelacionInspeccionesMovil_Result getRelacionInspeccionesMovil(String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getRelacionInspeccionesMovil(fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_RelacionInspeccionesMovil_Result getRelacionInspeccionesMovil(String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getRelacionInspeccionesMovil");
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getRelacionInspeccionesMovil", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getRelacionInspeccionesMovil", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_RelacionInspeccionesMovil_Result resultVariable = new VectorQUERY_RelacionInspeccionesMovil_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getListadoAlbaranesAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String cliente) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getListadoAlbaranesAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, cliente, null);
    }
    
    public void getListadoAlbaranesAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final String cliente,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ListadoAlbaranes_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ListadoAlbaranes_Result doInBackground(Void... params) {
                return getListadoAlbaranes(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, cliente, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ListadoAlbaranes_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getListadoAlbaranes", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ListadoAlbaranes_Result getListadoAlbaranes(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String cliente){
        return getListadoAlbaranes(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, cliente, null);
    }
    
    public VectorQUERY_ListadoAlbaranes_Result getListadoAlbaranes(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String cliente,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getListadoAlbaranes");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapReq.addProperty("Cliente",cliente);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getListadoAlbaranes", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getListadoAlbaranes", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ListadoAlbaranes_Result resultVariable = new VectorQUERY_ListadoAlbaranes_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getDistribucionCargaAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getDistribucionCargaAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getDistribucionCargaAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_DistribucionCarga_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_DistribucionCarga_Result doInBackground(Void... params) {
                return getDistribucionCarga(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_DistribucionCarga_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getDistribucionCarga", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_DistribucionCarga_Result getDistribucionCarga(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getDistribucionCarga(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_DistribucionCarga_Result getDistribucionCarga(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getDistribucionCarga");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getDistribucionCarga", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getDistribucionCarga", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_DistribucionCarga_Result resultVariable = new VectorQUERY_DistribucionCarga_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getArqueoCajaResumidoCofreAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String idUsuario,int tipotrans,boolean tipotransSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getArqueoCajaResumidoCofreAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, idUsuario, tipotrans, tipotransSpecified, null);
    }
    
    public void getArqueoCajaResumidoCofreAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final String idUsuario,final int tipotrans,final boolean tipotransSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ArqueoCajaResumidoCofre_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ArqueoCajaResumidoCofre_Result doInBackground(Void... params) {
                return getArqueoCajaResumidoCofre(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, idUsuario, tipotrans, tipotransSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ArqueoCajaResumidoCofre_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getArqueoCajaResumidoCofre", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ArqueoCajaResumidoCofre_Result getArqueoCajaResumidoCofre(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String idUsuario,int tipotrans,boolean tipotransSpecified){
        return getArqueoCajaResumidoCofre(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, idUsuario, tipotrans, tipotransSpecified, null);
    }
    
    public VectorQUERY_ArqueoCajaResumidoCofre_Result getArqueoCajaResumidoCofre(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String idUsuario,int tipotrans,boolean tipotransSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getArqueoCajaResumidoCofre");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapReq.addProperty("IdUsuario",idUsuario);
        soapReq.addProperty("tipotrans",tipotrans);
        soapReq.addProperty("tipotransSpecified",tipotransSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getArqueoCajaResumidoCofre", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getArqueoCajaResumidoCofre", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ArqueoCajaResumidoCofre_Result resultVariable = new VectorQUERY_ArqueoCajaResumidoCofre_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getTiempoEsperaAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getTiempoEsperaAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getTiempoEsperaAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_TiempoMedioEspera_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_TiempoMedioEspera_Result doInBackground(Void... params) {
                return getTiempoEspera(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_TiempoMedioEspera_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getTiempoEspera", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_TiempoMedioEspera_Result getTiempoEspera(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getTiempoEspera(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_TiempoMedioEspera_Result getTiempoEspera(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getTiempoEspera");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getTiempoEspera", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getTiempoEspera", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_TiempoMedioEspera_Result resultVariable = new VectorQUERY_TiempoMedioEspera_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getResumenInspeccionesServicioClasificacionAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getResumenInspeccionesServicioClasificacionAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getResumenInspeccionesServicioClasificacionAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ResumenInspeccionesServicioClasificacion_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ResumenInspeccionesServicioClasificacion_Result doInBackground(Void... params) {
                return getResumenInspeccionesServicioClasificacion(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ResumenInspeccionesServicioClasificacion_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getResumenInspeccionesServicioClasificacion", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ResumenInspeccionesServicioClasificacion_Result getResumenInspeccionesServicioClasificacion(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getResumenInspeccionesServicioClasificacion(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_ResumenInspeccionesServicioClasificacion_Result getResumenInspeccionesServicioClasificacion(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getResumenInspeccionesServicioClasificacion");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getResumenInspeccionesServicioClasificacion", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getResumenInspeccionesServicioClasificacion", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ResumenInspeccionesServicioClasificacion_Result resultVariable = new VectorQUERY_ResumenInspeccionesServicioClasificacion_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void GetMicroUtilitiesAsync(long idUsuario,boolean idUsuarioSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        GetMicroUtilitiesAsync(idUsuario, idUsuarioSpecified, null);
    }
    
    public void GetMicroUtilitiesAsync(final long idUsuario,final boolean idUsuarioSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQueryDinamica>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQueryDinamica doInBackground(Void... params) {
                return GetMicroUtilities(idUsuario, idUsuarioSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQueryDinamica result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("GetMicroUtilities", result);
                }
            }
        }.execute();
    }
    
    public VectorQueryDinamica GetMicroUtilities(long idUsuario,boolean idUsuarioSpecified){
        return GetMicroUtilities(idUsuario, idUsuarioSpecified, null);
    }
    
    public VectorQueryDinamica GetMicroUtilities(long idUsuario,boolean idUsuarioSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","GetMicroUtilities");
        soapReq.addProperty("idUsuario",idUsuario);
        soapReq.addProperty("idUsuarioSpecified",idUsuarioSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/GetMicroUtilities", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/GetMicroUtilities", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQueryDinamica resultVariable = new VectorQueryDinamica(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void GetProcDataAsync(long idUsuario,boolean idUsuarioSpecified,String procedure,String schema) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        GetProcDataAsync(idUsuario, idUsuarioSpecified, procedure, schema, null);
    }
    
    public void GetProcDataAsync(final long idUsuario,final boolean idUsuarioSpecified,final String procedure,final String schema,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_GetProcData_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_GetProcData_Result doInBackground(Void... params) {
                return GetProcData(idUsuario, idUsuarioSpecified, procedure, schema, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_GetProcData_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("GetProcData", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_GetProcData_Result GetProcData(long idUsuario,boolean idUsuarioSpecified,String procedure,String schema){
        return GetProcData(idUsuario, idUsuarioSpecified, procedure, schema, null);
    }
    
    public VectorQUERY_GetProcData_Result GetProcData(long idUsuario,boolean idUsuarioSpecified,String procedure,String schema,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","GetProcData");
        soapReq.addProperty("idUsuario",idUsuario);
        soapReq.addProperty("idUsuarioSpecified",idUsuarioSpecified);
        soapReq.addProperty("procedure",procedure);
        soapReq.addProperty("schema",schema);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/GetProcData", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/GetProcData", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_GetProcData_Result resultVariable = new VectorQUERY_GetProcData_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getArqueoCajaClientesHabitualesAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getArqueoCajaClientesHabitualesAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getArqueoCajaClientesHabitualesAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ArqueoCajaClientesHabituales_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ArqueoCajaClientesHabituales_Result doInBackground(Void... params) {
                return getArqueoCajaClientesHabituales(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ArqueoCajaClientesHabituales_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getArqueoCajaClientesHabituales", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ArqueoCajaClientesHabituales_Result getArqueoCajaClientesHabituales(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getArqueoCajaClientesHabituales(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_ArqueoCajaClientesHabituales_Result getArqueoCajaClientesHabituales(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getArqueoCajaClientesHabituales");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getArqueoCajaClientesHabituales", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getArqueoCajaClientesHabituales", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ArqueoCajaClientesHabituales_Result resultVariable = new VectorQUERY_ArqueoCajaClientesHabituales_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getControlOficaAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getControlOficaAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getControlOficaAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ControlOfica_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ControlOfica_Result doInBackground(Void... params) {
                return getControlOfica(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ControlOfica_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getControlOfica", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ControlOfica_Result getControlOfica(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getControlOfica(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_ControlOfica_Result getControlOfica(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getControlOfica");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getControlOfica", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getControlOfica", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ControlOfica_Result resultVariable = new VectorQUERY_ControlOfica_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getInformeEconomicoInspeccionesAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getInformeEconomicoInspeccionesAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getInformeEconomicoInspeccionesAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_InformeEconomicoInspecciones_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_InformeEconomicoInspecciones_Result doInBackground(Void... params) {
                return getInformeEconomicoInspecciones(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_InformeEconomicoInspecciones_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getInformeEconomicoInspecciones", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_InformeEconomicoInspecciones_Result getInformeEconomicoInspecciones(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getInformeEconomicoInspecciones(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_InformeEconomicoInspecciones_Result getInformeEconomicoInspecciones(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getInformeEconomicoInspecciones");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getInformeEconomicoInspecciones", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getInformeEconomicoInspecciones", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_InformeEconomicoInspecciones_Result resultVariable = new VectorQUERY_InformeEconomicoInspecciones_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getInformeEconomicoInspeccionesDiaAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getInformeEconomicoInspeccionesDiaAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getInformeEconomicoInspeccionesDiaAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_InformeEconomicoInspeccionesDia_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_InformeEconomicoInspeccionesDia_Result doInBackground(Void... params) {
                return getInformeEconomicoInspeccionesDia(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_InformeEconomicoInspeccionesDia_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getInformeEconomicoInspeccionesDia", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_InformeEconomicoInspeccionesDia_Result getInformeEconomicoInspeccionesDia(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getInformeEconomicoInspeccionesDia(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_InformeEconomicoInspeccionesDia_Result getInformeEconomicoInspeccionesDia(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getInformeEconomicoInspeccionesDia");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getInformeEconomicoInspeccionesDia", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getInformeEconomicoInspeccionesDia", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_InformeEconomicoInspeccionesDia_Result resultVariable = new VectorQUERY_InformeEconomicoInspeccionesDia_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getInformeServiciosMatriculaAsync(long idCentro,boolean idCentroSpecified,String matricula,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getInformeServiciosMatriculaAsync(idCentro, idCentroSpecified, matricula, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getInformeServiciosMatriculaAsync(final long idCentro,final boolean idCentroSpecified,final String matricula,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_InformeServiciosMatricula_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_InformeServiciosMatricula_Result doInBackground(Void... params) {
                return getInformeServiciosMatricula(idCentro, idCentroSpecified, matricula, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_InformeServiciosMatricula_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getInformeServiciosMatricula", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_InformeServiciosMatricula_Result getInformeServiciosMatricula(long idCentro,boolean idCentroSpecified,String matricula,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getInformeServiciosMatricula(idCentro, idCentroSpecified, matricula, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_InformeServiciosMatricula_Result getInformeServiciosMatricula(long idCentro,boolean idCentroSpecified,String matricula,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getInformeServiciosMatricula");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("Matricula",matricula);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getInformeServiciosMatricula", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getInformeServiciosMatricula", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_InformeServiciosMatricula_Result resultVariable = new VectorQUERY_InformeServiciosMatricula_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getListadoIvaFacturasAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String nIF) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getListadoIvaFacturasAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, nIF, null);
    }
    
    public void getListadoIvaFacturasAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final String nIF,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ListadoIvaFacturas_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ListadoIvaFacturas_Result doInBackground(Void... params) {
                return getListadoIvaFacturas(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, nIF, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ListadoIvaFacturas_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getListadoIvaFacturas", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ListadoIvaFacturas_Result getListadoIvaFacturas(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String nIF){
        return getListadoIvaFacturas(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, nIF, null);
    }
    
    public VectorQUERY_ListadoIvaFacturas_Result getListadoIvaFacturas(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String nIF,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getListadoIvaFacturas");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapReq.addProperty("NIF",nIF);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getListadoIvaFacturas", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getListadoIvaFacturas", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ListadoIvaFacturas_Result resultVariable = new VectorQUERY_ListadoIvaFacturas_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getRegistroExpedientesAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,boolean abierto,boolean abiertoSpecified,VectorInt64 gruposServicio,VectorInt64 servicios) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getRegistroExpedientesAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, abierto, abiertoSpecified, gruposServicio, servicios, null);
    }
    
    public void getRegistroExpedientesAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final boolean abierto,final boolean abiertoSpecified,final VectorInt64 gruposServicio,final VectorInt64 servicios,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_RegistroExpedientes_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_RegistroExpedientes_Result doInBackground(Void... params) {
                return getRegistroExpedientes(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, abierto, abiertoSpecified, gruposServicio, servicios, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_RegistroExpedientes_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getRegistroExpedientes", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_RegistroExpedientes_Result getRegistroExpedientes(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,boolean abierto,boolean abiertoSpecified,VectorInt64 gruposServicio,VectorInt64 servicios){
        return getRegistroExpedientes(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, abierto, abiertoSpecified, gruposServicio, servicios, null);
    }
    
    public VectorQUERY_RegistroExpedientes_Result getRegistroExpedientes(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,boolean abierto,boolean abiertoSpecified,VectorInt64 gruposServicio,VectorInt64 servicios,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getRegistroExpedientes");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapReq.addProperty("Abierto",abierto);
        soapReq.addProperty("AbiertoSpecified",abiertoSpecified);
        soapReq.addProperty("GruposServicio",gruposServicio);
        soapReq.addProperty("Servicios",servicios);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getRegistroExpedientes", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getRegistroExpedientes", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_RegistroExpedientes_Result resultVariable = new VectorQUERY_RegistroExpedientes_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getRegistroExpedientesCerradosAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String provincia,String servicio) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getRegistroExpedientesCerradosAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, provincia, servicio, null);
    }
    
    public void getRegistroExpedientesCerradosAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final String provincia,final String servicio,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_RegistroExpedientesCerrados_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_RegistroExpedientesCerrados_Result doInBackground(Void... params) {
                return getRegistroExpedientesCerrados(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, provincia, servicio, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_RegistroExpedientesCerrados_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getRegistroExpedientesCerrados", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_RegistroExpedientesCerrados_Result getRegistroExpedientesCerrados(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String provincia,String servicio){
        return getRegistroExpedientesCerrados(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, provincia, servicio, null);
    }
    
    public VectorQUERY_RegistroExpedientesCerrados_Result getRegistroExpedientesCerrados(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String provincia,String servicio,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getRegistroExpedientesCerrados");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapReq.addProperty("Provincia",provincia);
        soapReq.addProperty("Servicio",servicio);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getRegistroExpedientesCerrados", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getRegistroExpedientesCerrados", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_RegistroExpedientesCerrados_Result resultVariable = new VectorQUERY_RegistroExpedientesCerrados_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getRegistroExpedientesAbiertoAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String provincia,String servicio) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getRegistroExpedientesAbiertoAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, provincia, servicio, null);
    }
    
    public void getRegistroExpedientesAbiertoAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final String provincia,final String servicio,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_RegistroExpedientesAbierto_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_RegistroExpedientesAbierto_Result doInBackground(Void... params) {
                return getRegistroExpedientesAbierto(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, provincia, servicio, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_RegistroExpedientesAbierto_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getRegistroExpedientesAbierto", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_RegistroExpedientesAbierto_Result getRegistroExpedientesAbierto(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String provincia,String servicio){
        return getRegistroExpedientesAbierto(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, provincia, servicio, null);
    }
    
    public VectorQUERY_RegistroExpedientesAbierto_Result getRegistroExpedientesAbierto(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String provincia,String servicio,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getRegistroExpedientesAbierto");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapReq.addProperty("Provincia",provincia);
        soapReq.addProperty("Servicio",servicio);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getRegistroExpedientesAbierto", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getRegistroExpedientesAbierto", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_RegistroExpedientesAbierto_Result resultVariable = new VectorQUERY_RegistroExpedientesAbierto_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getRelacionClientesImporteAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,double importeBase,boolean importeBaseSpecified,String nIF) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getRelacionClientesImporteAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, importeBase, importeBaseSpecified, nIF, null);
    }
    
    public void getRelacionClientesImporteAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final double importeBase,final boolean importeBaseSpecified,final String nIF,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_RelacionClientesImporte_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_RelacionClientesImporte_Result doInBackground(Void... params) {
                return getRelacionClientesImporte(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, importeBase, importeBaseSpecified, nIF, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_RelacionClientesImporte_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getRelacionClientesImporte", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_RelacionClientesImporte_Result getRelacionClientesImporte(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,double importeBase,boolean importeBaseSpecified,String nIF){
        return getRelacionClientesImporte(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, importeBase, importeBaseSpecified, nIF, null);
    }
    
    public VectorQUERY_RelacionClientesImporte_Result getRelacionClientesImporte(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,double importeBase,boolean importeBaseSpecified,String nIF,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getRelacionClientesImporte");
        MarshalFloat marshalFloat = new MarshalFloat();
        marshalFloat.register(soapEnvelope);
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapReq.addProperty("ImporteBase",importeBase);
        soapReq.addProperty("ImporteBaseSpecified",importeBaseSpecified);
        soapReq.addProperty("NIF",nIF);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getRelacionClientesImporte", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getRelacionClientesImporte", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_RelacionClientesImporte_Result resultVariable = new VectorQUERY_RelacionClientesImporte_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getResumenCajasAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getResumenCajasAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getResumenCajasAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ResumenCajas_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ResumenCajas_Result doInBackground(Void... params) {
                return getResumenCajas(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ResumenCajas_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getResumenCajas", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ResumenCajas_Result getResumenCajas(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getResumenCajas(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_ResumenCajas_Result getResumenCajas(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getResumenCajas");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getResumenCajas", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getResumenCajas", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ResumenCajas_Result resultVariable = new VectorQUERY_ResumenCajas_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getResumenCajasDiaAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getResumenCajasDiaAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getResumenCajasDiaAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ResumenCajasDia_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ResumenCajasDia_Result doInBackground(Void... params) {
                return getResumenCajasDia(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ResumenCajasDia_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getResumenCajasDia", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ResumenCajasDia_Result getResumenCajasDia(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getResumenCajasDia(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_ResumenCajasDia_Result getResumenCajasDia(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getResumenCajasDia");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getResumenCajasDia", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getResumenCajasDia", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ResumenCajasDia_Result resultVariable = new VectorQUERY_ResumenCajasDia_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getResumenEstadisticoReformasAsync(String codCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,VectorInt64 gruposServicio,VectorInt64 servicios) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getResumenEstadisticoReformasAsync(codCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, gruposServicio, servicios, null);
    }
    
    public void getResumenEstadisticoReformasAsync(final String codCentro,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final VectorInt64 gruposServicio,final VectorInt64 servicios,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ResumenEstadisticoReformas_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ResumenEstadisticoReformas_Result doInBackground(Void... params) {
                return getResumenEstadisticoReformas(codCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, gruposServicio, servicios, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ResumenEstadisticoReformas_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getResumenEstadisticoReformas", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ResumenEstadisticoReformas_Result getResumenEstadisticoReformas(String codCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,VectorInt64 gruposServicio,VectorInt64 servicios){
        return getResumenEstadisticoReformas(codCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, gruposServicio, servicios, null);
    }
    
    public VectorQUERY_ResumenEstadisticoReformas_Result getResumenEstadisticoReformas(String codCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,VectorInt64 gruposServicio,VectorInt64 servicios,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getResumenEstadisticoReformas");
        soapReq.addProperty("codCentro",codCentro);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapReq.addProperty("GruposServicio",gruposServicio);
        soapReq.addProperty("Servicios",servicios);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getResumenEstadisticoReformas", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getResumenEstadisticoReformas", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ResumenEstadisticoReformas_Result resultVariable = new VectorQUERY_ResumenEstadisticoReformas_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getResumenFacturasClienteAsync(long idCentro,boolean idCentroSpecified,String nombre,String apellidos,String nif,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getResumenFacturasClienteAsync(idCentro, idCentroSpecified, nombre, apellidos, nif, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getResumenFacturasClienteAsync(final long idCentro,final boolean idCentroSpecified,final String nombre,final String apellidos,final String nif,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ResumenFacturasCliente_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ResumenFacturasCliente_Result doInBackground(Void... params) {
                return getResumenFacturasCliente(idCentro, idCentroSpecified, nombre, apellidos, nif, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ResumenFacturasCliente_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getResumenFacturasCliente", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ResumenFacturasCliente_Result getResumenFacturasCliente(long idCentro,boolean idCentroSpecified,String nombre,String apellidos,String nif,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getResumenFacturasCliente(idCentro, idCentroSpecified, nombre, apellidos, nif, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_ResumenFacturasCliente_Result getResumenFacturasCliente(long idCentro,boolean idCentroSpecified,String nombre,String apellidos,String nif,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getResumenFacturasCliente");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("Nombre",nombre);
        soapReq.addProperty("Apellidos",apellidos);
        soapReq.addProperty("Nif",nif);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getResumenFacturasCliente", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getResumenFacturasCliente", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ResumenFacturasCliente_Result resultVariable = new VectorQUERY_ResumenFacturasCliente_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getResumenTasasTransitoAsync(String idCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getResumenTasasTransitoAsync(idCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getResumenTasasTransitoAsync(final String idCentro,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ResumenTasasTransito_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ResumenTasasTransito_Result doInBackground(Void... params) {
                return getResumenTasasTransito(idCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ResumenTasasTransito_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getResumenTasasTransito", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ResumenTasasTransito_Result getResumenTasasTransito(String idCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getResumenTasasTransito(idCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_ResumenTasasTransito_Result getResumenTasasTransito(String idCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getResumenTasasTransito");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getResumenTasasTransito", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getResumenTasasTransito", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ResumenTasasTransito_Result resultVariable = new VectorQUERY_ResumenTasasTransito_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getArqueoCajaDetalladoAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String usuario) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getArqueoCajaDetalladoAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, usuario, null);
    }
    
    public void getArqueoCajaDetalladoAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final String usuario,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ArqueoCajaDetallado_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ArqueoCajaDetallado_Result doInBackground(Void... params) {
                return getArqueoCajaDetallado(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, usuario, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ArqueoCajaDetallado_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getArqueoCajaDetallado", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ArqueoCajaDetallado_Result getArqueoCajaDetallado(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String usuario){
        return getArqueoCajaDetallado(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, usuario, null);
    }
    
    public VectorQUERY_ArqueoCajaDetallado_Result getArqueoCajaDetallado(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,String usuario,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getArqueoCajaDetallado");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapReq.addProperty("Usuario",usuario);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getArqueoCajaDetallado", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getArqueoCajaDetallado", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ArqueoCajaDetallado_Result resultVariable = new VectorQUERY_ArqueoCajaDetallado_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getAlbaranEntregaSobresAsync(long idCentro,boolean idCentroSpecified,int numeroEnvio,boolean numeroEnvioSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getAlbaranEntregaSobresAsync(idCentro, idCentroSpecified, numeroEnvio, numeroEnvioSpecified, null);
    }
    
    public void getAlbaranEntregaSobresAsync(final long idCentro,final boolean idCentroSpecified,final int numeroEnvio,final boolean numeroEnvioSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_AlbaranEntregaSobres_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_AlbaranEntregaSobres_Result doInBackground(Void... params) {
                return getAlbaranEntregaSobres(idCentro, idCentroSpecified, numeroEnvio, numeroEnvioSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_AlbaranEntregaSobres_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getAlbaranEntregaSobres", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_AlbaranEntregaSobres_Result getAlbaranEntregaSobres(long idCentro,boolean idCentroSpecified,int numeroEnvio,boolean numeroEnvioSpecified){
        return getAlbaranEntregaSobres(idCentro, idCentroSpecified, numeroEnvio, numeroEnvioSpecified, null);
    }
    
    public VectorQUERY_AlbaranEntregaSobres_Result getAlbaranEntregaSobres(long idCentro,boolean idCentroSpecified,int numeroEnvio,boolean numeroEnvioSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getAlbaranEntregaSobres");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("NumeroEnvio",numeroEnvio);
        soapReq.addProperty("NumeroEnvioSpecified",numeroEnvioSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getAlbaranEntregaSobres", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getAlbaranEntregaSobres", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_AlbaranEntregaSobres_Result resultVariable = new VectorQUERY_AlbaranEntregaSobres_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getRelacionIngresosAsync(String idCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getRelacionIngresosAsync(idCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getRelacionIngresosAsync(final String idCentro,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_RelacionIngresos_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_RelacionIngresos_Result doInBackground(Void... params) {
                return getRelacionIngresos(idCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_RelacionIngresos_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getRelacionIngresos", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_RelacionIngresos_Result getRelacionIngresos(String idCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getRelacionIngresos(idCentro, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_RelacionIngresos_Result getRelacionIngresos(String idCentro,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getRelacionIngresos");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getRelacionIngresos", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getRelacionIngresos", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_RelacionIngresos_Result resultVariable = new VectorQUERY_RelacionIngresos_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getResumenMensualInspeccionesAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getResumenMensualInspeccionesAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getResumenMensualInspeccionesAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ResumenMensualInspecciones_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ResumenMensualInspecciones_Result doInBackground(Void... params) {
                return getResumenMensualInspecciones(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ResumenMensualInspecciones_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getResumenMensualInspecciones", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ResumenMensualInspecciones_Result getResumenMensualInspecciones(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getResumenMensualInspecciones(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_ResumenMensualInspecciones_Result getResumenMensualInspecciones(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getResumenMensualInspecciones");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getResumenMensualInspecciones", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getResumenMensualInspecciones", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ResumenMensualInspecciones_Result resultVariable = new VectorQUERY_ResumenMensualInspecciones_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getFrecuenciaDefectosAsync(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getFrecuenciaDefectosAsync(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getFrecuenciaDefectosAsync(final long idCentro,final boolean idCentroSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_FrecuenciaDefectos_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_FrecuenciaDefectos_Result doInBackground(Void... params) {
                return getFrecuenciaDefectos(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_FrecuenciaDefectos_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getFrecuenciaDefectos", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_FrecuenciaDefectos_Result getFrecuenciaDefectos(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getFrecuenciaDefectos(idCentro, idCentroSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_FrecuenciaDefectos_Result getFrecuenciaDefectos(long idCentro,boolean idCentroSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getFrecuenciaDefectos");
        soapReq.addProperty("IdCentro",idCentro);
        soapReq.addProperty("IdCentroSpecified",idCentroSpecified);
        soapReq.addProperty("FechaInicio",fechaInicio);
        soapReq.addProperty("FechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("FechaFin",fechaFin);
        soapReq.addProperty("FechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IReportingService/getFrecuenciaDefectos", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IReportingService/getFrecuenciaDefectos", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_FrecuenciaDefectos_Result resultVariable = new VectorQUERY_FrecuenciaDefectos_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
}
