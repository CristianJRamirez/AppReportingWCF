package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.ReportingService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 4/25/2017 7:43:53 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class QUERY_ListadoAlbaranes_Result implements KvmSerializable {
    
    public double base;
    public boolean baseSpecified;
    public String centro;
    public String cliente;
    public String codigoCentro;
    public String fechaEmision;
    public boolean fechaEmisionSpecified;
    public String formaPago;
    public double iVA;
    public boolean iVASpecified;
    public String numFactura;
    public double tasas;
    public boolean tasasSpecified;
    public double total;
    public boolean totalSpecified;
    public double idMomentoPago;
    public boolean idMomentoPagoSpecified;
    public String matricula;
    public String id;
    public String ref;
    
    public QUERY_ListadoAlbaranes_Result(){}
    
    public QUERY_ListadoAlbaranes_Result(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Base"))
        {
            Object obj = soapObject.getProperty("Base");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                base = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                base = (Double) obj;
            }
        }
        if (soapObject.hasProperty("BaseSpecified"))
        {
            Object obj = soapObject.getProperty("BaseSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                baseSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                baseSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Centro"))
        {
            Object obj = soapObject.getProperty("Centro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                centro = j.toString();
            }else if (obj!= null && obj instanceof String){
                centro = (String) obj;
            }
        }
        if (soapObject.hasProperty("Cliente"))
        {
            Object obj = soapObject.getProperty("Cliente");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cliente = j.toString();
            }else if (obj!= null && obj instanceof String){
                cliente = (String) obj;
            }
        }
        if (soapObject.hasProperty("CodigoCentro"))
        {
            Object obj = soapObject.getProperty("CodigoCentro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                codigoCentro = j.toString();
            }else if (obj!= null && obj instanceof String){
                codigoCentro = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaEmision"))
        {
            Object obj = soapObject.getProperty("FechaEmision");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaEmision = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaEmision = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaEmisionSpecified"))
        {
            Object obj = soapObject.getProperty("FechaEmisionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaEmisionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaEmisionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FormaPago"))
        {
            Object obj = soapObject.getProperty("FormaPago");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                formaPago = j.toString();
            }else if (obj!= null && obj instanceof String){
                formaPago = (String) obj;
            }
        }
        if (soapObject.hasProperty("IVA"))
        {
            Object obj = soapObject.getProperty("IVA");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                iVA = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                iVA = (Double) obj;
            }
        }
        if (soapObject.hasProperty("IVASpecified"))
        {
            Object obj = soapObject.getProperty("IVASpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                iVASpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                iVASpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("NumFactura"))
        {
            Object obj = soapObject.getProperty("NumFactura");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numFactura = j.toString();
            }else if (obj!= null && obj instanceof String){
                numFactura = (String) obj;
            }
        }
        if (soapObject.hasProperty("Tasas"))
        {
            Object obj = soapObject.getProperty("Tasas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasas = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                tasas = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TasasSpecified"))
        {
            Object obj = soapObject.getProperty("TasasSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasasSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tasasSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Total"))
        {
            Object obj = soapObject.getProperty("Total");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                total = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                total = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TotalSpecified"))
        {
            Object obj = soapObject.getProperty("TotalSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                totalSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("idMomentoPago"))
        {
            Object obj = soapObject.getProperty("idMomentoPago");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idMomentoPago = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idMomentoPago = (Double) obj;
            }
        }
        if (soapObject.hasProperty("idMomentoPagoSpecified"))
        {
            Object obj = soapObject.getProperty("idMomentoPagoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idMomentoPagoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idMomentoPagoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("matricula"))
        {
            Object obj = soapObject.getProperty("matricula");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                matricula = j.toString();
            }else if (obj!= null && obj instanceof String){
                matricula = (String) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return base;
            case 1:
                return baseSpecified;
            case 2:
                return centro;
            case 3:
                return cliente;
            case 4:
                return codigoCentro;
            case 5:
                return fechaEmision;
            case 6:
                return fechaEmisionSpecified;
            case 7:
                return formaPago;
            case 8:
                return iVA;
            case 9:
                return iVASpecified;
            case 10:
                return numFactura;
            case 11:
                return tasas;
            case 12:
                return tasasSpecified;
            case 13:
                return total;
            case 14:
                return totalSpecified;
            case 15:
                return idMomentoPago;
            case 16:
                return idMomentoPagoSpecified;
            case 17:
                return matricula;
            case 18:
                return id;
            case 19:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 20;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = Double.class;
                info.name = "Base";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "BaseSpecified";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Centro";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Cliente";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CodigoCentro";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaEmision";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaEmisionSpecified";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FormaPago";
                break;
            case 8:
                info.type = Double.class;
                info.name = "IVA";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IVASpecified";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NumFactura";
                break;
            case 11:
                info.type = Double.class;
                info.name = "Tasas";
                break;
            case 12:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TasasSpecified";
                break;
            case 13:
                info.type = Double.class;
                info.name = "Total";
                break;
            case 14:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TotalSpecified";
                break;
            case 15:
                info.type = Double.class;
                info.name = "idMomentoPago";
                break;
            case 16:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "idMomentoPagoSpecified";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "matricula";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 19:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    

    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
