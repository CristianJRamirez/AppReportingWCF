package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService;
//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/15/2017 9:13:05 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.Factura;
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorFacturaPrestacionImporte;
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorByte;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class FacturaPrestacion implements KvmSerializable {
    
    public String descRecargos;
    public String descTasas;
    public String descripcion;
    public long fK_IdFactura;
    public boolean fK_IdFacturaSpecified;
    public long fK_IdServicio;
    public boolean fK_IdServicioSpecified;
    public long fK_IdTarifa;
    public boolean fK_IdTarifaSpecified;
    public Factura factura;
    public VectorFacturaPrestacionImporte facturaPrestacionImporte;
    public long idFacturaPrestacion;
    public boolean idFacturaPrestacionSpecified;
    public double importe;
    public boolean importeSpecified;
    public double importeBase;
    public boolean importeBaseSpecified;
    public double impuesto;
    public boolean impuestoSpecified;
    public boolean publicado;
    public boolean publicadoSpecified;
    public double recargos;
    public boolean recargosSpecified;
    public String servicio;
    public String tarifa;
    public double tasas;
    public boolean tasasSpecified;
    public String fechaModificacion;
    public boolean fechaModificacionSpecified;
    public VectorByte timestamp;
    public long usuarioModificacion;
    public boolean usuarioModificacionSpecified;
    public String id;
    public String ref;
    
    public FacturaPrestacion(){}
    
    public FacturaPrestacion(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("DescRecargos"))
        {
            Object obj = soapObject.getProperty("DescRecargos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                descRecargos = j.toString();
            }else if (obj!= null && obj instanceof String){
                descRecargos = (String) obj;
            }
        }
        if (soapObject.hasProperty("DescTasas"))
        {
            Object obj = soapObject.getProperty("DescTasas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                descTasas = j.toString();
            }else if (obj!= null && obj instanceof String){
                descTasas = (String) obj;
            }
        }
        if (soapObject.hasProperty("Descripcion"))
        {
            Object obj = soapObject.getProperty("Descripcion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                descripcion = j.toString();
            }else if (obj!= null && obj instanceof String){
                descripcion = (String) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdFactura"))
        {
            Object obj = soapObject.getProperty("FK_IdFactura");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdFactura = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdFactura = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdFacturaSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdFacturaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdFacturaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdFacturaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdServicio"))
        {
            Object obj = soapObject.getProperty("FK_IdServicio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdServicio = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdServicio = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdServicioSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdServicioSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdServicioSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdServicioSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTarifa"))
        {
            Object obj = soapObject.getProperty("FK_IdTarifa");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTarifa = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdTarifa = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTarifaSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdTarifaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTarifaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdTarifaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Factura"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Factura");
            factura =  new Factura (j);
            
        }
        if (soapObject.hasProperty("FacturaPrestacionImporte"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("FacturaPrestacionImporte");
            facturaPrestacionImporte = new VectorFacturaPrestacionImporte(j);
        }
        if (soapObject.hasProperty("IdFacturaPrestacion"))
        {
            Object obj = soapObject.getProperty("IdFacturaPrestacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idFacturaPrestacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idFacturaPrestacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdFacturaPrestacionSpecified"))
        {
            Object obj = soapObject.getProperty("IdFacturaPrestacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idFacturaPrestacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idFacturaPrestacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Importe"))
        {
            Object obj = soapObject.getProperty("Importe");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                importe = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                importe = (Double) obj;
            }
        }
        if (soapObject.hasProperty("ImporteSpecified"))
        {
            Object obj = soapObject.getProperty("ImporteSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                importeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                importeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ImporteBase"))
        {
            Object obj = soapObject.getProperty("ImporteBase");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                importeBase = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                importeBase = (Double) obj;
            }
        }
        if (soapObject.hasProperty("ImporteBaseSpecified"))
        {
            Object obj = soapObject.getProperty("ImporteBaseSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                importeBaseSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                importeBaseSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Impuesto"))
        {
            Object obj = soapObject.getProperty("Impuesto");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                impuesto = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                impuesto = (Double) obj;
            }
        }
        if (soapObject.hasProperty("ImpuestoSpecified"))
        {
            Object obj = soapObject.getProperty("ImpuestoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                impuestoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                impuestoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Publicado"))
        {
            Object obj = soapObject.getProperty("Publicado");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicado = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicado = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PublicadoSpecified"))
        {
            Object obj = soapObject.getProperty("PublicadoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicadoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicadoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Recargos"))
        {
            Object obj = soapObject.getProperty("Recargos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                recargos = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                recargos = (Double) obj;
            }
        }
        if (soapObject.hasProperty("RecargosSpecified"))
        {
            Object obj = soapObject.getProperty("RecargosSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                recargosSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                recargosSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Servicio"))
        {
            Object obj = soapObject.getProperty("Servicio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                servicio = j.toString();
            }else if (obj!= null && obj instanceof String){
                servicio = (String) obj;
            }
        }
        if (soapObject.hasProperty("Tarifa"))
        {
            Object obj = soapObject.getProperty("Tarifa");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tarifa = j.toString();
            }else if (obj!= null && obj instanceof String){
                tarifa = (String) obj;
            }
        }
        if (soapObject.hasProperty("Tasas"))
        {
            Object obj = soapObject.getProperty("Tasas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasas = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                tasas = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TasasSpecified"))
        {
            Object obj = soapObject.getProperty("TasasSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasasSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tasasSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacion"))
        {
            Object obj = soapObject.getProperty("fechaModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaModificacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("fechaModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("timestamp"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("timestamp");
            timestamp = new VectorByte(j);
        }
        if (soapObject.hasProperty("usuarioModificacion"))
        {
            Object obj = soapObject.getProperty("usuarioModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                usuarioModificacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("usuarioModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("usuarioModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                usuarioModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return descRecargos;
            case 1:
                return descTasas;
            case 2:
                return descripcion;
            case 3:
                return fK_IdFactura;
            case 4:
                return fK_IdFacturaSpecified;
            case 5:
                return fK_IdServicio;
            case 6:
                return fK_IdServicioSpecified;
            case 7:
                return fK_IdTarifa;
            case 8:
                return fK_IdTarifaSpecified;
            case 9:
                return factura;
            case 10:
                return facturaPrestacionImporte;
            case 11:
                return idFacturaPrestacion;
            case 12:
                return idFacturaPrestacionSpecified;
            case 13:
                return importe;
            case 14:
                return importeSpecified;
            case 15:
                return importeBase;
            case 16:
                return importeBaseSpecified;
            case 17:
                return impuesto;
            case 18:
                return impuestoSpecified;
            case 19:
                return publicado;
            case 20:
                return publicadoSpecified;
            case 21:
                return recargos;
            case 22:
                return recargosSpecified;
            case 23:
                return servicio;
            case 24:
                return tarifa;
            case 25:
                return tasas;
            case 26:
                return tasasSpecified;
            case 27:
                return fechaModificacion;
            case 28:
                return fechaModificacionSpecified;
            case 29:
                return timestamp.toString();
            case 30:
                return usuarioModificacion;
            case 31:
                return usuarioModificacionSpecified;
            case 32:
                return id;
            case 33:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 34;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DescRecargos";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DescTasas";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Descripcion";
                break;
            case 3:
                info.type = Long.class;
                info.name = "FK_IdFactura";
                break;
            case 4:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdFacturaSpecified";
                break;
            case 5:
                info.type = Long.class;
                info.name = "FK_IdServicio";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdServicioSpecified";
                break;
            case 7:
                info.type = Long.class;
                info.name = "FK_IdTarifa";
                break;
            case 8:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdTarifaSpecified";
                break;
            case 9:
                info.type = Factura.class;
                info.name = "Factura";
                break;
            case 10:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "FacturaPrestacionImporte";
                break;
            case 11:
                info.type = Long.class;
                info.name = "IdFacturaPrestacion";
                break;
            case 12:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdFacturaPrestacionSpecified";
                break;
            case 13:
                info.type = Double.class;
                info.name = "Importe";
                break;
            case 14:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ImporteSpecified";
                break;
            case 15:
                info.type = Double.class;
                info.name = "ImporteBase";
                break;
            case 16:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ImporteBaseSpecified";
                break;
            case 17:
                info.type = Double.class;
                info.name = "Impuesto";
                break;
            case 18:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ImpuestoSpecified";
                break;
            case 19:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Publicado";
                break;
            case 20:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PublicadoSpecified";
                break;
            case 21:
                info.type = Double.class;
                info.name = "Recargos";
                break;
            case 22:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "RecargosSpecified";
                break;
            case 23:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Servicio";
                break;
            case 24:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Tarifa";
                break;
            case 25:
                info.type = Double.class;
                info.name = "Tasas";
                break;
            case 26:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TasasSpecified";
                break;
            case 27:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "fechaModificacion";
                break;
            case 28:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "fechaModificacionSpecified";
                break;
            case 29:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "timestamp";
                break;
            case 30:
                info.type = Long.class;
                info.name = "usuarioModificacion";
                break;
            case 31:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "usuarioModificacionSpecified";
                break;
            case 32:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 33:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    

    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
