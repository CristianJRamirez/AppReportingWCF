package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService;
//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/15/2017 9:13:05 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import java.util.List;
import org.ksoap2.SoapEnvelope;
import org.ksoap2.SoapFault;
import org.ksoap2.serialization.SoapSerializationEnvelope;
import org.ksoap2.transport.HttpTransportSE;
import org.ksoap2.HeaderProperty;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;
import android.os.AsyncTask;

public class MostradorService {
    
    public String NAMESPACE ="http://tempuri.org/";
    public String url="http://172.18.2.190/DNOTAMostradorDev/MostradorService.svc";
    public int timeOut = 60000;
    public IWsdl2CodeEvents eventHandler;
    public WS_Enums.SoapProtocolVersion soapVersion;

    public MostradorService(){}
    
    public MostradorService(IWsdl2CodeEvents eventHandler)
    {
        this.eventHandler = eventHandler;
    }
    public MostradorService(IWsdl2CodeEvents eventHandler,String url)
    {
        this.eventHandler = eventHandler;
        this.url = url;
    }
    public MostradorService(IWsdl2CodeEvents eventHandler,String url,int timeOutInSeconds)
    {
        this.eventHandler = eventHandler;
        this.url = url;
        this.setTimeOut(timeOutInSeconds);
    }
    public void setTimeOut(int seconds){
        this.timeOut = seconds * 1000;
    }
    public void setUrl(String url){
        this.url = url;
    }
    public void getListaTipoImpresionesByTipoFichaAsync(String tipo,boolean soloBorradores,boolean soloBorradoresSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getListaTipoImpresionesByTipoFichaAsync(tipo, soloBorradores, soloBorradoresSpecified, null);
    }
    
    public void getListaTipoImpresionesByTipoFichaAsync(final String tipo,final boolean soloBorradores,final boolean soloBorradoresSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorFichaTecnicaCopiaServicioTexto>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorFichaTecnicaCopiaServicioTexto doInBackground(Void... params) {
                return getListaTipoImpresionesByTipoFicha(tipo, soloBorradores, soloBorradoresSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorFichaTecnicaCopiaServicioTexto result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getListaTipoImpresionesByTipoFicha", result);
                }
            }
        }.execute();
    }
    
    public VectorFichaTecnicaCopiaServicioTexto getListaTipoImpresionesByTipoFicha(String tipo,boolean soloBorradores,boolean soloBorradoresSpecified){
        return getListaTipoImpresionesByTipoFicha(tipo, soloBorradores, soloBorradoresSpecified, null);
    }
    
    public VectorFichaTecnicaCopiaServicioTexto getListaTipoImpresionesByTipoFicha(String tipo,boolean soloBorradores,boolean soloBorradoresSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getListaTipoImpresionesByTipoFicha");
        soapReq.addProperty("tipo",tipo);
        soapReq.addProperty("soloBorradores",soloBorradores);
        soapReq.addProperty("soloBorradoresSpecified",soloBorradoresSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getListaTipoImpresionesByTipoFicha", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getListaTipoImpresionesByTipoFicha", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorFichaTecnicaCopiaServicioTexto resultVariable = new VectorFichaTecnicaCopiaServicioTexto(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getListaTipoImpresionesByTipoFichaYGrupoServicioAsync(String tipo,VectorInt64 idGrupoServicio,boolean soloBorradores,boolean soloBorradoresSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getListaTipoImpresionesByTipoFichaYGrupoServicioAsync(tipo, idGrupoServicio, soloBorradores, soloBorradoresSpecified, null);
    }
    
    public void getListaTipoImpresionesByTipoFichaYGrupoServicioAsync(final String tipo,final VectorInt64 idGrupoServicio,final boolean soloBorradores,final boolean soloBorradoresSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorFichaTecnicaCopiaServicioTexto>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorFichaTecnicaCopiaServicioTexto doInBackground(Void... params) {
                return getListaTipoImpresionesByTipoFichaYGrupoServicio(tipo, idGrupoServicio, soloBorradores, soloBorradoresSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorFichaTecnicaCopiaServicioTexto result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getListaTipoImpresionesByTipoFichaYGrupoServicio", result);
                }
            }
        }.execute();
    }
    
    public VectorFichaTecnicaCopiaServicioTexto getListaTipoImpresionesByTipoFichaYGrupoServicio(String tipo,VectorInt64 idGrupoServicio,boolean soloBorradores,boolean soloBorradoresSpecified){
        return getListaTipoImpresionesByTipoFichaYGrupoServicio(tipo, idGrupoServicio, soloBorradores, soloBorradoresSpecified, null);
    }
    
    public VectorFichaTecnicaCopiaServicioTexto getListaTipoImpresionesByTipoFichaYGrupoServicio(String tipo,VectorInt64 idGrupoServicio,boolean soloBorradores,boolean soloBorradoresSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getListaTipoImpresionesByTipoFichaYGrupoServicio");
        soapReq.addProperty("tipo",tipo);
        soapReq.addProperty("idGrupoServicio",idGrupoServicio);
        soapReq.addProperty("soloBorradores",soloBorradores);
        soapReq.addProperty("soloBorradoresSpecified",soloBorradoresSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getListaTipoImpresionesByTipoFichaYGrupoServicio", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getListaTipoImpresionesByTipoFichaYGrupoServicio", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorFichaTecnicaCopiaServicioTexto resultVariable = new VectorFichaTecnicaCopiaServicioTexto(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void CaducarExpedientesAsync(String fechaCaducidad,boolean fechaCaducidadSpecified,long idUsuario,boolean idUsuarioSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        CaducarExpedientesAsync(fechaCaducidad, fechaCaducidadSpecified, idUsuario, idUsuarioSpecified, null);
    }
    
    public void CaducarExpedientesAsync(final String fechaCaducidad,final boolean fechaCaducidadSpecified,final long idUsuario,final boolean idUsuarioSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorExpediente>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorExpediente doInBackground(Void... params) {
                return CaducarExpedientes(fechaCaducidad, fechaCaducidadSpecified, idUsuario, idUsuarioSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorExpediente result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("CaducarExpedientes", result);
                }
            }
        }.execute();
    }
    
    public VectorExpediente CaducarExpedientes(String fechaCaducidad,boolean fechaCaducidadSpecified,long idUsuario,boolean idUsuarioSpecified){
        return CaducarExpedientes(fechaCaducidad, fechaCaducidadSpecified, idUsuario, idUsuarioSpecified, null);
    }
    
    public VectorExpediente CaducarExpedientes(String fechaCaducidad,boolean fechaCaducidadSpecified,long idUsuario,boolean idUsuarioSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","CaducarExpedientes");
        soapReq.addProperty("fechaCaducidad",fechaCaducidad);
        soapReq.addProperty("fechaCaducidadSpecified",fechaCaducidadSpecified);
        soapReq.addProperty("idUsuario",idUsuario);
        soapReq.addProperty("idUsuarioSpecified",idUsuarioSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/CaducarExpedientes", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/CaducarExpedientes", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorExpediente resultVariable = new VectorExpediente(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getReportFacturaAlbaran_PorServicioAsync(String numfac) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getReportFacturaAlbaran_PorServicioAsync(numfac, null);
    }
    
    public void getReportFacturaAlbaran_PorServicioAsync(final String numfac,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ReportFacturaAlbaran_PorServicio_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ReportFacturaAlbaran_PorServicio_Result doInBackground(Void... params) {
                return getReportFacturaAlbaran_PorServicio(numfac, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ReportFacturaAlbaran_PorServicio_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getReportFacturaAlbaran_PorServicio", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ReportFacturaAlbaran_PorServicio_Result getReportFacturaAlbaran_PorServicio(String numfac){
        return getReportFacturaAlbaran_PorServicio(numfac, null);
    }
    
    public VectorQUERY_ReportFacturaAlbaran_PorServicio_Result getReportFacturaAlbaran_PorServicio(String numfac,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getReportFacturaAlbaran_PorServicio");
        soapReq.addProperty("numfac",numfac);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getReportFacturaAlbaran_PorServicio", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getReportFacturaAlbaran_PorServicio", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ReportFacturaAlbaran_PorServicio_Result resultVariable = new VectorQUERY_ReportFacturaAlbaran_PorServicio_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getVehiculoDatosPlanosAsync(long idUsuario,boolean idUsuarioSpecified,long idVehiculo,boolean idVehiculoSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getVehiculoDatosPlanosAsync(idUsuario, idUsuarioSpecified, idVehiculo, idVehiculoSpecified, null);
    }
    
    public void getVehiculoDatosPlanosAsync(final long idUsuario,final boolean idUsuarioSpecified,final long idVehiculo,final boolean idVehiculoSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, Query_VehiculoDatosPlanos_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected Query_VehiculoDatosPlanos_Result doInBackground(Void... params) {
                return getVehiculoDatosPlanos(idUsuario, idUsuarioSpecified, idVehiculo, idVehiculoSpecified, headers);
            }
            @Override
            protected void onPostExecute(Query_VehiculoDatosPlanos_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getVehiculoDatosPlanos", result);
                }
            }
        }.execute();
    }
    
    public Query_VehiculoDatosPlanos_Result getVehiculoDatosPlanos(long idUsuario,boolean idUsuarioSpecified,long idVehiculo,boolean idVehiculoSpecified){
        return getVehiculoDatosPlanos(idUsuario, idUsuarioSpecified, idVehiculo, idVehiculoSpecified, null);
    }
    
    public Query_VehiculoDatosPlanos_Result getVehiculoDatosPlanos(long idUsuario,boolean idUsuarioSpecified,long idVehiculo,boolean idVehiculoSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getVehiculoDatosPlanos");
        soapReq.addProperty("idUsuario",idUsuario);
        soapReq.addProperty("idUsuarioSpecified",idUsuarioSpecified);
        soapReq.addProperty("idVehiculo",idVehiculo);
        soapReq.addProperty("idVehiculoSpecified",idVehiculoSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getVehiculoDatosPlanos", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getVehiculoDatosPlanos", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    Query_VehiculoDatosPlanos_Result resultVariable =  new Query_VehiculoDatosPlanos_Result (j);
                    return resultVariable;
                    
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getPortadorNIFByIDSolicitudAsync(long idsol,boolean idsolSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getPortadorNIFByIDSolicitudAsync(idsol, idsolSpecified, null);
    }
    
    public void getPortadorNIFByIDSolicitudAsync(final long idsol,final boolean idsolSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, String>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected String doInBackground(Void... params) {
                return getPortadorNIFByIDSolicitud(idsol, idsolSpecified, headers);
            }
            @Override
            protected void onPostExecute(String result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getPortadorNIFByIDSolicitud", result);
                }
            }
        }.execute();
    }
    
    public String getPortadorNIFByIDSolicitud(long idsol,boolean idsolSpecified){
        return getPortadorNIFByIDSolicitud(idsol, idsolSpecified, null);
    }
    
    public String getPortadorNIFByIDSolicitud(long idsol,boolean idsolSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getPortadorNIFByIDSolicitud");
        soapReq.addProperty("idsol",idsol);
        soapReq.addProperty("idsolSpecified",idsolSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getPortadorNIFByIDSolicitud", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getPortadorNIFByIDSolicitud", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                        SoapPrimitive j =(SoapPrimitive) obj;
                        String resultVariable = j.toString();
                        return resultVariable;
                    }else if (obj!= null && obj instanceof String){
                        String resultVariable = (String) obj;
                        return resultVariable;
                    }
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return "";
    }
    
    public void duplicarSolicitudAsync(long idUsuario,boolean idUsuarioSpecified,long idSol,boolean idSolSpecified,long idServicio,boolean idServicioSpecified,String centro) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        duplicarSolicitudAsync(idUsuario, idUsuarioSpecified, idSol, idSolSpecified, idServicio, idServicioSpecified, centro, null);
    }
    
    public void duplicarSolicitudAsync(final long idUsuario,final boolean idUsuarioSpecified,final long idSol,final boolean idSolSpecified,final long idServicio,final boolean idServicioSpecified,final String centro,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, SolicitudServicio>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected SolicitudServicio doInBackground(Void... params) {
                return duplicarSolicitud(idUsuario, idUsuarioSpecified, idSol, idSolSpecified, idServicio, idServicioSpecified, centro, headers);
            }
            @Override
            protected void onPostExecute(SolicitudServicio result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("duplicarSolicitud", result);
                }
            }
        }.execute();
    }
    
    public SolicitudServicio duplicarSolicitud(long idUsuario,boolean idUsuarioSpecified,long idSol,boolean idSolSpecified,long idServicio,boolean idServicioSpecified,String centro){
        return duplicarSolicitud(idUsuario, idUsuarioSpecified, idSol, idSolSpecified, idServicio, idServicioSpecified, centro, null);
    }
    
    public SolicitudServicio duplicarSolicitud(long idUsuario,boolean idUsuarioSpecified,long idSol,boolean idSolSpecified,long idServicio,boolean idServicioSpecified,String centro,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","duplicarSolicitud");
        soapReq.addProperty("idUsuario",idUsuario);
        soapReq.addProperty("idUsuarioSpecified",idUsuarioSpecified);
        soapReq.addProperty("idSol",idSol);
        soapReq.addProperty("idSolSpecified",idSolSpecified);
        soapReq.addProperty("idServicio",idServicio);
        soapReq.addProperty("idServicioSpecified",idServicioSpecified);
        soapReq.addProperty("centro",centro);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/duplicarSolicitud", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/duplicarSolicitud", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    SolicitudServicio resultVariable =  new SolicitudServicio (j);
                    return resultVariable;
                    
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void GetCitasPreviasPendientesAsync(long idCentro,boolean idCentroSpecified,String fecha,boolean fechaSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        GetCitasPreviasPendientesAsync(idCentro, idCentroSpecified, fecha, fechaSpecified, null);
    }
    
    public void GetCitasPreviasPendientesAsync(final long idCentro,final boolean idCentroSpecified,final String fecha,final boolean fechaSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorCitaPrevia>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorCitaPrevia doInBackground(Void... params) {
                return GetCitasPreviasPendientes(idCentro, idCentroSpecified, fecha, fechaSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorCitaPrevia result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("GetCitasPreviasPendientes", result);
                }
            }
        }.execute();
    }
    
    public VectorCitaPrevia GetCitasPreviasPendientes(long idCentro,boolean idCentroSpecified,String fecha,boolean fechaSpecified){
        return GetCitasPreviasPendientes(idCentro, idCentroSpecified, fecha, fechaSpecified, null);
    }
    
    public VectorCitaPrevia GetCitasPreviasPendientes(long idCentro,boolean idCentroSpecified,String fecha,boolean fechaSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","GetCitasPreviasPendientes");
        soapReq.addProperty("idCentro",idCentro);
        soapReq.addProperty("idCentroSpecified",idCentroSpecified);
        soapReq.addProperty("fecha",fecha);
        soapReq.addProperty("fechaSpecified",fechaSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/GetCitasPreviasPendientes", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/GetCitasPreviasPendientes", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorCitaPrevia resultVariable = new VectorCitaPrevia(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getExpedientesVehiculoAsync(long idVehiculo,boolean idVehiculoSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getExpedientesVehiculoAsync(idVehiculo, idVehiculoSpecified, null);
    }
    
    public void getExpedientesVehiculoAsync(final long idVehiculo,final boolean idVehiculoSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorExpediente>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorExpediente doInBackground(Void... params) {
                return getExpedientesVehiculo(idVehiculo, idVehiculoSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorExpediente result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getExpedientesVehiculo", result);
                }
            }
        }.execute();
    }
    
    public VectorExpediente getExpedientesVehiculo(long idVehiculo,boolean idVehiculoSpecified){
        return getExpedientesVehiculo(idVehiculo, idVehiculoSpecified, null);
    }
    
    public VectorExpediente getExpedientesVehiculo(long idVehiculo,boolean idVehiculoSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getExpedientesVehiculo");
        soapReq.addProperty("idVehiculo",idVehiculo);
        soapReq.addProperty("idVehiculoSpecified",idVehiculoSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getExpedientesVehiculo", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getExpedientesVehiculo", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorExpediente resultVariable = new VectorExpediente(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getInspeccionesParaExpedienteAsync(long idExpediente,boolean idExpedienteSpecified,long idVehiculo,boolean idVehiculoSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getInspeccionesParaExpedienteAsync(idExpediente, idExpedienteSpecified, idVehiculo, idVehiculoSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getInspeccionesParaExpedienteAsync(final long idExpediente,final boolean idExpedienteSpecified,final long idVehiculo,final boolean idVehiculoSpecified,final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQuery_InpeccionesParaExpediente_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQuery_InpeccionesParaExpediente_Result doInBackground(Void... params) {
                return getInspeccionesParaExpediente(idExpediente, idExpedienteSpecified, idVehiculo, idVehiculoSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQuery_InpeccionesParaExpediente_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getInspeccionesParaExpediente", result);
                }
            }
        }.execute();
    }
    
    public VectorQuery_InpeccionesParaExpediente_Result getInspeccionesParaExpediente(long idExpediente,boolean idExpedienteSpecified,long idVehiculo,boolean idVehiculoSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getInspeccionesParaExpediente(idExpediente, idExpedienteSpecified, idVehiculo, idVehiculoSpecified, fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQuery_InpeccionesParaExpediente_Result getInspeccionesParaExpediente(long idExpediente,boolean idExpedienteSpecified,long idVehiculo,boolean idVehiculoSpecified,String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getInspeccionesParaExpediente");
        soapReq.addProperty("idExpediente",idExpediente);
        soapReq.addProperty("idExpedienteSpecified",idExpedienteSpecified);
        soapReq.addProperty("idVehiculo",idVehiculo);
        soapReq.addProperty("idVehiculoSpecified",idVehiculoSpecified);
        soapReq.addProperty("fechaInicio",fechaInicio);
        soapReq.addProperty("fechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("fechaFin",fechaFin);
        soapReq.addProperty("fechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getInspeccionesParaExpediente", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getInspeccionesParaExpediente", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQuery_InpeccionesParaExpediente_Result resultVariable = new VectorQuery_InpeccionesParaExpediente_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getInspeccionesPendientesCobroAsync(String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,long idCentro,boolean idCentroSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getInspeccionesPendientesCobroAsync(fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, idCentro, idCentroSpecified, null);
    }
    
    public void getInspeccionesPendientesCobroAsync(final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final long idCentro,final boolean idCentroSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_InspeccionesPendientesCobro_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_InspeccionesPendientesCobro_Result doInBackground(Void... params) {
                return getInspeccionesPendientesCobro(fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, idCentro, idCentroSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_InspeccionesPendientesCobro_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getInspeccionesPendientesCobro", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_InspeccionesPendientesCobro_Result getInspeccionesPendientesCobro(String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,long idCentro,boolean idCentroSpecified){
        return getInspeccionesPendientesCobro(fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, idCentro, idCentroSpecified, null);
    }
    
    public VectorQUERY_InspeccionesPendientesCobro_Result getInspeccionesPendientesCobro(String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,long idCentro,boolean idCentroSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getInspeccionesPendientesCobro");
        soapReq.addProperty("fechaInicio",fechaInicio);
        soapReq.addProperty("fechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("fechaFin",fechaFin);
        soapReq.addProperty("fechaFinSpecified",fechaFinSpecified);
        soapReq.addProperty("idCentro",idCentro);
        soapReq.addProperty("idCentroSpecified",idCentroSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getInspeccionesPendientesCobro", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getInspeccionesPendientesCobro", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_InspeccionesPendientesCobro_Result resultVariable = new VectorQUERY_InspeccionesPendientesCobro_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getAlbaranesPendientesCobroAsync(String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getAlbaranesPendientesCobroAsync(fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getAlbaranesPendientesCobroAsync(final String fechaInicio,final boolean fechaInicioSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_AlbaranesPendientesCobro_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_AlbaranesPendientesCobro_Result doInBackground(Void... params) {
                return getAlbaranesPendientesCobro(fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_AlbaranesPendientesCobro_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getAlbaranesPendientesCobro", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_AlbaranesPendientesCobro_Result getAlbaranesPendientesCobro(String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified){
        return getAlbaranesPendientesCobro(fechaInicio, fechaInicioSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQUERY_AlbaranesPendientesCobro_Result getAlbaranesPendientesCobro(String fechaInicio,boolean fechaInicioSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getAlbaranesPendientesCobro");
        soapReq.addProperty("fechaInicio",fechaInicio);
        soapReq.addProperty("fechaInicioSpecified",fechaInicioSpecified);
        soapReq.addProperty("fechaFin",fechaFin);
        soapReq.addProperty("fechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getAlbaranesPendientesCobro", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getAlbaranesPendientesCobro", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_AlbaranesPendientesCobro_Result resultVariable = new VectorQUERY_AlbaranesPendientesCobro_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getVehiculoInspeccionesAsync(long idUsuario,boolean idUsuarioSpecified,long idVehiculo,boolean idVehiculoSpecified,String fechaIni,boolean fechaIniSpecified,String fechaFin,boolean fechaFinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getVehiculoInspeccionesAsync(idUsuario, idUsuarioSpecified, idVehiculo, idVehiculoSpecified, fechaIni, fechaIniSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public void getVehiculoInspeccionesAsync(final long idUsuario,final boolean idUsuarioSpecified,final long idVehiculo,final boolean idVehiculoSpecified,final String fechaIni,final boolean fechaIniSpecified,final String fechaFin,final boolean fechaFinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQuery_InspeccionesVehiculo_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQuery_InspeccionesVehiculo_Result doInBackground(Void... params) {
                return getVehiculoInspecciones(idUsuario, idUsuarioSpecified, idVehiculo, idVehiculoSpecified, fechaIni, fechaIniSpecified, fechaFin, fechaFinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQuery_InspeccionesVehiculo_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getVehiculoInspecciones", result);
                }
            }
        }.execute();
    }
    
    public VectorQuery_InspeccionesVehiculo_Result getVehiculoInspecciones(long idUsuario,boolean idUsuarioSpecified,long idVehiculo,boolean idVehiculoSpecified,String fechaIni,boolean fechaIniSpecified,String fechaFin,boolean fechaFinSpecified){
        return getVehiculoInspecciones(idUsuario, idUsuarioSpecified, idVehiculo, idVehiculoSpecified, fechaIni, fechaIniSpecified, fechaFin, fechaFinSpecified, null);
    }
    
    public VectorQuery_InspeccionesVehiculo_Result getVehiculoInspecciones(long idUsuario,boolean idUsuarioSpecified,long idVehiculo,boolean idVehiculoSpecified,String fechaIni,boolean fechaIniSpecified,String fechaFin,boolean fechaFinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getVehiculoInspecciones");
        soapReq.addProperty("idUsuario",idUsuario);
        soapReq.addProperty("idUsuarioSpecified",idUsuarioSpecified);
        soapReq.addProperty("idVehiculo",idVehiculo);
        soapReq.addProperty("idVehiculoSpecified",idVehiculoSpecified);
        soapReq.addProperty("fechaIni",fechaIni);
        soapReq.addProperty("fechaIniSpecified",fechaIniSpecified);
        soapReq.addProperty("fechaFin",fechaFin);
        soapReq.addProperty("fechaFinSpecified",fechaFinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getVehiculoInspecciones", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getVehiculoInspecciones", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQuery_InspeccionesVehiculo_Result resultVariable = new VectorQuery_InspeccionesVehiculo_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getListadoFacturaAsync(long idCentro,boolean idCentroSpecified,FiltroListadoFactura filtro) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getListadoFacturaAsync(idCentro, idCentroSpecified, filtro, null);
    }
    
    public void getListadoFacturaAsync(final long idCentro,final boolean idCentroSpecified,final FiltroListadoFactura filtro,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ListadoFacturas_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ListadoFacturas_Result doInBackground(Void... params) {
                return getListadoFactura(idCentro, idCentroSpecified, filtro, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ListadoFacturas_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getListadoFactura", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ListadoFacturas_Result getListadoFactura(long idCentro,boolean idCentroSpecified,FiltroListadoFactura filtro){
        return getListadoFactura(idCentro, idCentroSpecified, filtro, null);
    }
    
    public VectorQUERY_ListadoFacturas_Result getListadoFactura(long idCentro,boolean idCentroSpecified,FiltroListadoFactura filtro,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getListadoFactura");
        soapEnvelope.addMapping("http://tempuri.org/","filtro",new FiltroListadoFactura().getClass());
        soapReq.addProperty("idCentro",idCentro);
        soapReq.addProperty("idCentroSpecified",idCentroSpecified);
        soapReq.addProperty("filtro",filtro);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getListadoFactura", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getListadoFactura", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ListadoFacturas_Result resultVariable = new VectorQUERY_ListadoFacturas_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void RegistrarLogAsync(long idUsuario,boolean idUsuarioSpecified,WS_Enums.LogTramaeTipoLog tipo,boolean tipoSpecified,String tabla,String proceso,String mensaje,long idClaveDato,boolean idClaveDatoSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        RegistrarLogAsync(idUsuario, idUsuarioSpecified, tipo, tipoSpecified, tabla, proceso, mensaje, idClaveDato, idClaveDatoSpecified, null);
    }
    
    public void RegistrarLogAsync(final long idUsuario,final boolean idUsuarioSpecified,final WS_Enums.LogTramaeTipoLog tipo,final boolean tipoSpecified,final String tabla,final String proceso,final String mensaje,final long idClaveDato,final boolean idClaveDatoSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, Void>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected Void doInBackground(Void... params) {
                RegistrarLog(idUsuario, idUsuarioSpecified, tipo, tipoSpecified, tabla, proceso, mensaje, idClaveDato, idClaveDatoSpecified, headers);
                return null;
            }
            @Override
            protected void onPostExecute(Void result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("RegistrarLog", result);
                }
            }
        }.execute();
    }
    
    public void RegistrarLog(long idUsuario,boolean idUsuarioSpecified,WS_Enums.LogTramaeTipoLog tipo,boolean tipoSpecified,String tabla,String proceso,String mensaje,long idClaveDato,boolean idClaveDatoSpecified){
        RegistrarLog(idUsuario, idUsuarioSpecified, tipo, tipoSpecified, tabla, proceso, mensaje, idClaveDato, idClaveDatoSpecified, null);
    }
    
    public void RegistrarLog(long idUsuario,boolean idUsuarioSpecified,WS_Enums.LogTramaeTipoLog tipo,boolean tipoSpecified,String tabla,String proceso,String mensaje,long idClaveDato,boolean idClaveDatoSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","RegistrarLog");
        soapReq.addProperty("idUsuario",idUsuario);
        soapReq.addProperty("idUsuarioSpecified",idUsuarioSpecified);
        soapReq.addProperty("tipo",tipo.toString());
        soapReq.addProperty("tipoSpecified",tipoSpecified);
        soapReq.addProperty("tabla",tabla);
        soapReq.addProperty("proceso",proceso);
        soapReq.addProperty("mensaje",mensaje);
        soapReq.addProperty("idClaveDato",idClaveDato);
        soapReq.addProperty("idClaveDatoSpecified",idClaveDatoSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/RegistrarLog", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/RegistrarLog", soapEnvelope);
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
    }
    
    public void getFacturasEnFacturaDiferidaAsync(long idFactura,boolean idFacturaSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getFacturasEnFacturaDiferidaAsync(idFactura, idFacturaSpecified, null);
    }
    
    public void getFacturasEnFacturaDiferidaAsync(final long idFactura,final boolean idFacturaSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorFactura>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorFactura doInBackground(Void... params) {
                return getFacturasEnFacturaDiferida(idFactura, idFacturaSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorFactura result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getFacturasEnFacturaDiferida", result);
                }
            }
        }.execute();
    }
    
    public VectorFactura getFacturasEnFacturaDiferida(long idFactura,boolean idFacturaSpecified){
        return getFacturasEnFacturaDiferida(idFactura, idFacturaSpecified, null);
    }
    
    public VectorFactura getFacturasEnFacturaDiferida(long idFactura,boolean idFacturaSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getFacturasEnFacturaDiferida");
        soapReq.addProperty("idFactura",idFactura);
        soapReq.addProperty("idFacturaSpecified",idFacturaSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getFacturasEnFacturaDiferida", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getFacturasEnFacturaDiferida", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorFactura resultVariable = new VectorFactura(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void GenerarNumeroSolicitudAsync(String codigoNumericoCentro) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        GenerarNumeroSolicitudAsync(codigoNumericoCentro, null);
    }
    
    public void GenerarNumeroSolicitudAsync(final String codigoNumericoCentro,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, String>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected String doInBackground(Void... params) {
                return GenerarNumeroSolicitud(codigoNumericoCentro, headers);
            }
            @Override
            protected void onPostExecute(String result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("GenerarNumeroSolicitud", result);
                }
            }
        }.execute();
    }
    
    public String GenerarNumeroSolicitud(String codigoNumericoCentro){
        return GenerarNumeroSolicitud(codigoNumericoCentro, null);
    }
    
    public String GenerarNumeroSolicitud(String codigoNumericoCentro,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","GenerarNumeroSolicitud");
        soapReq.addProperty("codigoNumericoCentro",codigoNumericoCentro);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/GenerarNumeroSolicitud", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/GenerarNumeroSolicitud", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                        SoapPrimitive j =(SoapPrimitive) obj;
                        String resultVariable = j.toString();
                        return resultVariable;
                    }else if (obj!= null && obj instanceof String){
                        String resultVariable = (String) obj;
                        return resultVariable;
                    }
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return "";
    }
    
    public void GenerarNumeroExpedienteAsync(String codigoNumericoCentro) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        GenerarNumeroExpedienteAsync(codigoNumericoCentro, null);
    }
    
    public void GenerarNumeroExpedienteAsync(final String codigoNumericoCentro,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, String>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected String doInBackground(Void... params) {
                return GenerarNumeroExpediente(codigoNumericoCentro, headers);
            }
            @Override
            protected void onPostExecute(String result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("GenerarNumeroExpediente", result);
                }
            }
        }.execute();
    }
    
    public String GenerarNumeroExpediente(String codigoNumericoCentro){
        return GenerarNumeroExpediente(codigoNumericoCentro, null);
    }
    
    public String GenerarNumeroExpediente(String codigoNumericoCentro,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","GenerarNumeroExpediente");
        soapReq.addProperty("codigoNumericoCentro",codigoNumericoCentro);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/GenerarNumeroExpediente", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/GenerarNumeroExpediente", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                        SoapPrimitive j =(SoapPrimitive) obj;
                        String resultVariable = j.toString();
                        return resultVariable;
                    }else if (obj!= null && obj instanceof String){
                        String resultVariable = (String) obj;
                        return resultVariable;
                    }
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return "";
    }
    
    public void GenerarNumeroFacturaAsync(String codigoNumericoCentro,WS_Enums.eCodigoCertio tipo,boolean tipoSpecified,boolean facturaAlbaran,boolean facturaAlbaranSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        GenerarNumeroFacturaAsync(codigoNumericoCentro, tipo, tipoSpecified, facturaAlbaran, facturaAlbaranSpecified, null);
    }
    
    public void GenerarNumeroFacturaAsync(final String codigoNumericoCentro,final WS_Enums.eCodigoCertio tipo,final boolean tipoSpecified,final boolean facturaAlbaran,final boolean facturaAlbaranSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, String>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected String doInBackground(Void... params) {
                return GenerarNumeroFactura(codigoNumericoCentro, tipo, tipoSpecified, facturaAlbaran, facturaAlbaranSpecified, headers);
            }
            @Override
            protected void onPostExecute(String result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("GenerarNumeroFactura", result);
                }
            }
        }.execute();
    }
    
    public String GenerarNumeroFactura(String codigoNumericoCentro,WS_Enums.eCodigoCertio tipo,boolean tipoSpecified,boolean facturaAlbaran,boolean facturaAlbaranSpecified){
        return GenerarNumeroFactura(codigoNumericoCentro, tipo, tipoSpecified, facturaAlbaran, facturaAlbaranSpecified, null);
    }
    
    public String GenerarNumeroFactura(String codigoNumericoCentro,WS_Enums.eCodigoCertio tipo,boolean tipoSpecified,boolean facturaAlbaran,boolean facturaAlbaranSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","GenerarNumeroFactura");
        soapReq.addProperty("codigoNumericoCentro",codigoNumericoCentro);
        soapReq.addProperty("tipo",tipo.toString());
        soapReq.addProperty("tipoSpecified",tipoSpecified);
        soapReq.addProperty("facturaAlbaran",facturaAlbaran);
        soapReq.addProperty("facturaAlbaranSpecified",facturaAlbaranSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/GenerarNumeroFactura", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/GenerarNumeroFactura", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                        SoapPrimitive j =(SoapPrimitive) obj;
                        String resultVariable = j.toString();
                        return resultVariable;
                    }else if (obj!= null && obj instanceof String){
                        String resultVariable = (String) obj;
                        return resultVariable;
                    }
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return "";
    }
    
    public void RecuperarClientePorNIFAsync(String nIF) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        RecuperarClientePorNIFAsync(nIF, null);
    }
    
    public void RecuperarClientePorNIFAsync(final String nIF,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, Cliente>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected Cliente doInBackground(Void... params) {
                return RecuperarClientePorNIF(nIF, headers);
            }
            @Override
            protected void onPostExecute(Cliente result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("RecuperarClientePorNIF", result);
                }
            }
        }.execute();
    }
    
    public Cliente RecuperarClientePorNIF(String nIF){
        return RecuperarClientePorNIF(nIF, null);
    }
    
    public Cliente RecuperarClientePorNIF(String nIF,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","RecuperarClientePorNIF");
        soapReq.addProperty("NIF",nIF);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/RecuperarClientePorNIF", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/RecuperarClientePorNIF", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    Cliente resultVariable =  new Cliente (j);
                    return resultVariable;
                    
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getImpresionTIT_TodasAsync(boolean esBorrador,boolean esBorradorSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getImpresionTIT_TodasAsync(esBorrador, esBorradorSpecified, null);
    }
    
    public void getImpresionTIT_TodasAsync(final boolean esBorrador,final boolean esBorradorSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQuery_ImpresionTIT_Todas_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQuery_ImpresionTIT_Todas_Result doInBackground(Void... params) {
                return getImpresionTIT_Todas(esBorrador, esBorradorSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQuery_ImpresionTIT_Todas_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getImpresionTIT_Todas", result);
                }
            }
        }.execute();
    }
    
    public VectorQuery_ImpresionTIT_Todas_Result getImpresionTIT_Todas(boolean esBorrador,boolean esBorradorSpecified){
        return getImpresionTIT_Todas(esBorrador, esBorradorSpecified, null);
    }
    
    public VectorQuery_ImpresionTIT_Todas_Result getImpresionTIT_Todas(boolean esBorrador,boolean esBorradorSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getImpresionTIT_Todas");
        soapReq.addProperty("esBorrador",esBorrador);
        soapReq.addProperty("esBorradorSpecified",esBorradorSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getImpresionTIT_Todas", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getImpresionTIT_Todas", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQuery_ImpresionTIT_Todas_Result resultVariable = new VectorQuery_ImpresionTIT_Todas_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getImpresionTIT_SolicitudAsync(long solicitud,boolean solicitudSpecified,String fecha,boolean fechaSpecified,String idsTextos,boolean esBorrador,boolean esBorradorSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getImpresionTIT_SolicitudAsync(solicitud, solicitudSpecified, fecha, fechaSpecified, idsTextos, esBorrador, esBorradorSpecified, null);
    }
    
    public void getImpresionTIT_SolicitudAsync(final long solicitud,final boolean solicitudSpecified,final String fecha,final boolean fechaSpecified,final String idsTextos,final boolean esBorrador,final boolean esBorradorSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQuery_ImpresionTIT_Solicitud_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQuery_ImpresionTIT_Solicitud_Result doInBackground(Void... params) {
                return getImpresionTIT_Solicitud(solicitud, solicitudSpecified, fecha, fechaSpecified, idsTextos, esBorrador, esBorradorSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQuery_ImpresionTIT_Solicitud_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getImpresionTIT_Solicitud", result);
                }
            }
        }.execute();
    }
    
    public VectorQuery_ImpresionTIT_Solicitud_Result getImpresionTIT_Solicitud(long solicitud,boolean solicitudSpecified,String fecha,boolean fechaSpecified,String idsTextos,boolean esBorrador,boolean esBorradorSpecified){
        return getImpresionTIT_Solicitud(solicitud, solicitudSpecified, fecha, fechaSpecified, idsTextos, esBorrador, esBorradorSpecified, null);
    }
    
    public VectorQuery_ImpresionTIT_Solicitud_Result getImpresionTIT_Solicitud(long solicitud,boolean solicitudSpecified,String fecha,boolean fechaSpecified,String idsTextos,boolean esBorrador,boolean esBorradorSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getImpresionTIT_Solicitud");
        soapReq.addProperty("solicitud",solicitud);
        soapReq.addProperty("solicitudSpecified",solicitudSpecified);
        soapReq.addProperty("fecha",fecha);
        soapReq.addProperty("fechaSpecified",fechaSpecified);
        soapReq.addProperty("idsTextos",idsTextos);
        soapReq.addProperty("esBorrador",esBorrador);
        soapReq.addProperty("esBorradorSpecified",esBorradorSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getImpresionTIT_Solicitud", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getImpresionTIT_Solicitud", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQuery_ImpresionTIT_Solicitud_Result resultVariable = new VectorQuery_ImpresionTIT_Solicitud_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getQUERY_ListaTITAsync(String tipoFit,String fechaini,boolean fechainiSpecified,String fechafin,boolean fechafinSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getQUERY_ListaTITAsync(tipoFit, fechaini, fechainiSpecified, fechafin, fechafinSpecified, null);
    }
    
    public void getQUERY_ListaTITAsync(final String tipoFit,final String fechaini,final boolean fechainiSpecified,final String fechafin,final boolean fechafinSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ListaTIT_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ListaTIT_Result doInBackground(Void... params) {
                return getQUERY_ListaTIT(tipoFit, fechaini, fechainiSpecified, fechafin, fechafinSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ListaTIT_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getQUERY_ListaTIT", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ListaTIT_Result getQUERY_ListaTIT(String tipoFit,String fechaini,boolean fechainiSpecified,String fechafin,boolean fechafinSpecified){
        return getQUERY_ListaTIT(tipoFit, fechaini, fechainiSpecified, fechafin, fechafinSpecified, null);
    }
    
    public VectorQUERY_ListaTIT_Result getQUERY_ListaTIT(String tipoFit,String fechaini,boolean fechainiSpecified,String fechafin,boolean fechafinSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getQUERY_ListaTIT");
        soapReq.addProperty("tipoFit",tipoFit);
        soapReq.addProperty("fechaini",fechaini);
        soapReq.addProperty("fechainiSpecified",fechainiSpecified);
        soapReq.addProperty("fechafin",fechafin);
        soapReq.addProperty("fechafinSpecified",fechafinSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getQUERY_ListaTIT", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getQUERY_ListaTIT", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ListaTIT_Result resultVariable = new VectorQUERY_ListaTIT_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getListadoSolicitudesAsync(FiltroListadoSolicitud filtro) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getListadoSolicitudesAsync(filtro, null);
    }
    
    public void getListadoSolicitudesAsync(final FiltroListadoSolicitud filtro,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ListaSolicitudes_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ListaSolicitudes_Result doInBackground(Void... params) {
                return getListadoSolicitudes(filtro, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ListaSolicitudes_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getListadoSolicitudes", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ListaSolicitudes_Result getListadoSolicitudes(FiltroListadoSolicitud filtro){
        return getListadoSolicitudes(filtro, null);
    }
    
    public VectorQUERY_ListaSolicitudes_Result getListadoSolicitudes(FiltroListadoSolicitud filtro,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getListadoSolicitudes");
        soapEnvelope.addMapping("http://tempuri.org/","filtro",new FiltroListadoSolicitud().getClass());
        soapReq.addProperty("filtro",filtro);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getListadoSolicitudes", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getListadoSolicitudes", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ListaSolicitudes_Result resultVariable = new VectorQUERY_ListaSolicitudes_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getListadoaFacturaAlbaranAsync(String nif,String ini,boolean iniSpecified,String fin,boolean finSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getListadoaFacturaAlbaranAsync(nif, ini, iniSpecified, fin, finSpecified, null);
    }
    
    public void getListadoaFacturaAlbaranAsync(final String nif,final String ini,final boolean iniSpecified,final String fin,final boolean finSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorQUERY_ListaFacturaAlbaran_Result>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorQUERY_ListaFacturaAlbaran_Result doInBackground(Void... params) {
                return getListadoaFacturaAlbaran(nif, ini, iniSpecified, fin, finSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorQUERY_ListaFacturaAlbaran_Result result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getListadoaFacturaAlbaran", result);
                }
            }
        }.execute();
    }
    
    public VectorQUERY_ListaFacturaAlbaran_Result getListadoaFacturaAlbaran(String nif,String ini,boolean iniSpecified,String fin,boolean finSpecified){
        return getListadoaFacturaAlbaran(nif, ini, iniSpecified, fin, finSpecified, null);
    }
    
    public VectorQUERY_ListaFacturaAlbaran_Result getListadoaFacturaAlbaran(String nif,String ini,boolean iniSpecified,String fin,boolean finSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://tempuri.org/","getListadoaFacturaAlbaran");
        soapReq.addProperty("nif",nif);
        soapReq.addProperty("ini",ini);
        soapReq.addProperty("iniSpecified",iniSpecified);
        soapReq.addProperty("fin",fin);
        soapReq.addProperty("finSpecified",finSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("http://tempuri.org/IMostradorService/getListadoaFacturaAlbaran", soapEnvelope,headers);
            }else{
                httpTransport.call("http://tempuri.org/IMostradorService/getListadoaFacturaAlbaran", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorQUERY_ListaFacturaAlbaran_Result resultVariable = new VectorQUERY_ListaFacturaAlbaran_Result(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
}
