package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.ReportingService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 4/25/2017 7:43:53 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class QUERY_DistribucionCarga_Result implements KvmSerializable {
    
    public int fK_IdTipoEstadoInspeccion;
    public boolean fK_IdTipoEstadoInspeccionSpecified;
    public int numeroInspecciones;
    public boolean numeroInspeccionesSpecified;
    public String hora;
    public String id;
    public String ref;
    
    public QUERY_DistribucionCarga_Result(){}
    
    public QUERY_DistribucionCarga_Result(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("FK_IdTipoEstadoInspeccion"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoEstadoInspeccion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoEstadoInspeccion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdTipoEstadoInspeccion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTipoEstadoInspeccionSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoEstadoInspeccionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoEstadoInspeccionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdTipoEstadoInspeccionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("NumeroInspecciones"))
        {
            Object obj = soapObject.getProperty("NumeroInspecciones");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numeroInspecciones = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                numeroInspecciones = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("NumeroInspeccionesSpecified"))
        {
            Object obj = soapObject.getProperty("NumeroInspeccionesSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numeroInspeccionesSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                numeroInspeccionesSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("hora"))
        {
            Object obj = soapObject.getProperty("hora");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                hora = j.toString();
            }else if (obj!= null && obj instanceof String){
                hora = (String) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return fK_IdTipoEstadoInspeccion;
            case 1:
                return fK_IdTipoEstadoInspeccionSpecified;
            case 2:
                return numeroInspecciones;
            case 3:
                return numeroInspeccionesSpecified;
            case 4:
                return hora;
            case 5:
                return id;
            case 6:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 7;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "FK_IdTipoEstadoInspeccion";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdTipoEstadoInspeccionSpecified";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "NumeroInspecciones";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "NumeroInspeccionesSpecified";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "hora";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }

    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
