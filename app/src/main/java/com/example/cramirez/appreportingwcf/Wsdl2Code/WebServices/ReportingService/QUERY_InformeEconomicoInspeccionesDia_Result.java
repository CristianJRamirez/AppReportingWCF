package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.ReportingService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 4/25/2017 7:43:53 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class QUERY_InformeEconomicoInspeccionesDia_Result implements KvmSerializable {
    
    public double base;
    public boolean baseSpecified;
    public String centro;
    public String codigoCentro;
    public String descripcionTasa1;
    public String descripcionTasa2;
    public String descripcionTasa3;
    public String dia;
    public boolean diaSpecified;
    public int inspecciones;
    public boolean inspeccionesSpecified;
    public double iva;
    public boolean ivaSpecified;
    public int prestaciones;
    public boolean prestacionesSpecified;
    public double tasa1;
    public boolean tasa1Specified;
    public double tasa2;
    public boolean tasa2Specified;
    public double tasa3;
    public boolean tasa3Specified;
    public double total;
    public boolean totalSpecified;
    public String id;
    public String ref;
    
    public QUERY_InformeEconomicoInspeccionesDia_Result(){}
    
    public QUERY_InformeEconomicoInspeccionesDia_Result(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Base"))
        {
            Object obj = soapObject.getProperty("Base");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                base = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                base = (Double) obj;
            }
        }
        if (soapObject.hasProperty("BaseSpecified"))
        {
            Object obj = soapObject.getProperty("BaseSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                baseSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                baseSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Centro"))
        {
            Object obj = soapObject.getProperty("Centro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                centro = j.toString();
            }else if (obj!= null && obj instanceof String){
                centro = (String) obj;
            }
        }
        if (soapObject.hasProperty("CodigoCentro"))
        {
            Object obj = soapObject.getProperty("CodigoCentro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                codigoCentro = j.toString();
            }else if (obj!= null && obj instanceof String){
                codigoCentro = (String) obj;
            }
        }
        if (soapObject.hasProperty("DescripcionTasa1"))
        {
            Object obj = soapObject.getProperty("DescripcionTasa1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                descripcionTasa1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                descripcionTasa1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("DescripcionTasa2"))
        {
            Object obj = soapObject.getProperty("DescripcionTasa2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                descripcionTasa2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                descripcionTasa2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("DescripcionTasa3"))
        {
            Object obj = soapObject.getProperty("DescripcionTasa3");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                descripcionTasa3 = j.toString();
            }else if (obj!= null && obj instanceof String){
                descripcionTasa3 = (String) obj;
            }
        }
        if (soapObject.hasProperty("Dia"))
        {
            Object obj = soapObject.getProperty("Dia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                dia = j.toString();
            }else if (obj!= null && obj instanceof String){
                dia = (String) obj;
            }
        }
        if (soapObject.hasProperty("DiaSpecified"))
        {
            Object obj = soapObject.getProperty("DiaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                diaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                diaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Inspecciones"))
        {
            Object obj = soapObject.getProperty("Inspecciones");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                inspecciones = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                inspecciones = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("InspeccionesSpecified"))
        {
            Object obj = soapObject.getProperty("InspeccionesSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                inspeccionesSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                inspeccionesSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Iva"))
        {
            Object obj = soapObject.getProperty("Iva");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                iva = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                iva = (Double) obj;
            }
        }
        if (soapObject.hasProperty("IvaSpecified"))
        {
            Object obj = soapObject.getProperty("IvaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ivaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                ivaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Prestaciones"))
        {
            Object obj = soapObject.getProperty("Prestaciones");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                prestaciones = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                prestaciones = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PrestacionesSpecified"))
        {
            Object obj = soapObject.getProperty("PrestacionesSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                prestacionesSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                prestacionesSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Tasa1"))
        {
            Object obj = soapObject.getProperty("Tasa1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasa1 = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                tasa1 = (Double) obj;
            }
        }
        if (soapObject.hasProperty("Tasa1Specified"))
        {
            Object obj = soapObject.getProperty("Tasa1Specified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasa1Specified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tasa1Specified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Tasa2"))
        {
            Object obj = soapObject.getProperty("Tasa2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasa2 = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                tasa2 = (Double) obj;
            }
        }
        if (soapObject.hasProperty("Tasa2Specified"))
        {
            Object obj = soapObject.getProperty("Tasa2Specified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasa2Specified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tasa2Specified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Tasa3"))
        {
            Object obj = soapObject.getProperty("Tasa3");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasa3 = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                tasa3 = (Double) obj;
            }
        }
        if (soapObject.hasProperty("Tasa3Specified"))
        {
            Object obj = soapObject.getProperty("Tasa3Specified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasa3Specified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tasa3Specified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Total"))
        {
            Object obj = soapObject.getProperty("Total");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                total = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                total = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TotalSpecified"))
        {
            Object obj = soapObject.getProperty("TotalSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                totalSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return base;
            case 1:
                return baseSpecified;
            case 2:
                return centro;
            case 3:
                return codigoCentro;
            case 4:
                return descripcionTasa1;
            case 5:
                return descripcionTasa2;
            case 6:
                return descripcionTasa3;
            case 7:
                return dia;
            case 8:
                return diaSpecified;
            case 9:
                return inspecciones;
            case 10:
                return inspeccionesSpecified;
            case 11:
                return iva;
            case 12:
                return ivaSpecified;
            case 13:
                return prestaciones;
            case 14:
                return prestacionesSpecified;
            case 15:
                return tasa1;
            case 16:
                return tasa1Specified;
            case 17:
                return tasa2;
            case 18:
                return tasa2Specified;
            case 19:
                return tasa3;
            case 20:
                return tasa3Specified;
            case 21:
                return total;
            case 22:
                return totalSpecified;
            case 23:
                return id;
            case 24:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 25;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = Double.class;
                info.name = "Base";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "BaseSpecified";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Centro";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CodigoCentro";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DescripcionTasa1";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DescripcionTasa2";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DescripcionTasa3";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Dia";
                break;
            case 8:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "DiaSpecified";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Inspecciones";
                break;
            case 10:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "InspeccionesSpecified";
                break;
            case 11:
                info.type = Double.class;
                info.name = "Iva";
                break;
            case 12:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IvaSpecified";
                break;
            case 13:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Prestaciones";
                break;
            case 14:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PrestacionesSpecified";
                break;
            case 15:
                info.type = Double.class;
                info.name = "Tasa1";
                break;
            case 16:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Tasa1Specified";
                break;
            case 17:
                info.type = Double.class;
                info.name = "Tasa2";
                break;
            case 18:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Tasa2Specified";
                break;
            case 19:
                info.type = Double.class;
                info.name = "Tasa3";
                break;
            case 20:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Tasa3Specified";
                break;
            case 21:
                info.type = Double.class;
                info.name = "Total";
                break;
            case 22:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TotalSpecified";
                break;
            case 23:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 24:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    

    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
