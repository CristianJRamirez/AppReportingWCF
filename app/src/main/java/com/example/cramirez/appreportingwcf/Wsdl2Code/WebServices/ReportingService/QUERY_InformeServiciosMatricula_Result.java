package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.ReportingService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 4/25/2017 7:43:53 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class QUERY_InformeServiciosMatricula_Result implements KvmSerializable {
    
    public String centro;
    public String codigoCentro;
    public String documento;
    public String fecha;
    public boolean fechaSpecified;
    public String matricula;
    public String resultado;
    public String servicio;
    public String tipo;
    public String id;
    public String ref;
    
    public QUERY_InformeServiciosMatricula_Result(){}
    
    public QUERY_InformeServiciosMatricula_Result(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Centro"))
        {
            Object obj = soapObject.getProperty("Centro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                centro = j.toString();
            }else if (obj!= null && obj instanceof String){
                centro = (String) obj;
            }
        }
        if (soapObject.hasProperty("CodigoCentro"))
        {
            Object obj = soapObject.getProperty("CodigoCentro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                codigoCentro = j.toString();
            }else if (obj!= null && obj instanceof String){
                codigoCentro = (String) obj;
            }
        }
        if (soapObject.hasProperty("Documento"))
        {
            Object obj = soapObject.getProperty("Documento");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                documento = j.toString();
            }else if (obj!= null && obj instanceof String){
                documento = (String) obj;
            }
        }
        if (soapObject.hasProperty("Fecha"))
        {
            Object obj = soapObject.getProperty("Fecha");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fecha = j.toString();
            }else if (obj!= null && obj instanceof String){
                fecha = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaSpecified"))
        {
            Object obj = soapObject.getProperty("FechaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Matricula"))
        {
            Object obj = soapObject.getProperty("Matricula");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                matricula = j.toString();
            }else if (obj!= null && obj instanceof String){
                matricula = (String) obj;
            }
        }
        if (soapObject.hasProperty("Resultado"))
        {
            Object obj = soapObject.getProperty("Resultado");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                resultado = j.toString();
            }else if (obj!= null && obj instanceof String){
                resultado = (String) obj;
            }
        }
        if (soapObject.hasProperty("Servicio"))
        {
            Object obj = soapObject.getProperty("Servicio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                servicio = j.toString();
            }else if (obj!= null && obj instanceof String){
                servicio = (String) obj;
            }
        }
        if (soapObject.hasProperty("Tipo"))
        {
            Object obj = soapObject.getProperty("Tipo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tipo = j.toString();
            }else if (obj!= null && obj instanceof String){
                tipo = (String) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return centro;
            case 1:
                return codigoCentro;
            case 2:
                return documento;
            case 3:
                return fecha;
            case 4:
                return fechaSpecified;
            case 5:
                return matricula;
            case 6:
                return resultado;
            case 7:
                return servicio;
            case 8:
                return tipo;
            case 9:
                return id;
            case 10:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 11;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Centro";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CodigoCentro";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Documento";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Fecha";
                break;
            case 4:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaSpecified";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Matricula";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Resultado";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Servicio";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Tipo";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    

    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
