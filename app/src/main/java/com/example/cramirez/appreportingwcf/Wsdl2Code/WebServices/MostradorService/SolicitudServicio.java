package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService;
//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/15/2017 9:13:05 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.CitaPrevia;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.Cliente;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.Expediente;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorFactura;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorFichaTecnica;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorSolicitudAlcanceServicio;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorSolicitudDatosPlanos;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.SolicitudServicio;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorSolicitudServicioServicio;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorSolicitudVehiculoSaliente;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.Vehiculo;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorByte;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class SolicitudServicio implements KvmSerializable {
    
    public boolean cancelada;
    public boolean canceladaSpecified;
    public CitaPrevia citaPrevia;
    public Cliente cliente;
    public Cliente cliente1;
    public String culturaDocumento;
    public int estadoSeguro;
    public boolean estadoSeguroSpecified;
    public Expediente expediente;
    public String externoCentro;
    public boolean externoDeCertio;
    public boolean externoDeCertioSpecified;
    public String externoFecha;
    public boolean externoFechaSpecified;
    public long externoIdInspCertio;
    public boolean externoIdInspCertioSpecified;
    public String externoNumInspeccion;
    public long fK_IdCentro;
    public boolean fK_IdCentroSpecified;
    public long fK_IdCitaPrevia;
    public boolean fK_IdCitaPreviaSpecified;
    public long fK_IdClientePortador;
    public boolean fK_IdClientePortadorSpecified;
    public long fK_IdClienteTitular;
    public boolean fK_IdClienteTitularSpecified;
    public long fK_IdExpediente;
    public boolean fK_IdExpedienteSpecified;
    public long fK_IdTipoCliente;
    public boolean fK_IdTipoClienteSpecified;
    public long fK_IdVehiculo;
    public boolean fK_IdVehiculoSpecified;
    public VectorFactura factura;
    public String fechaAlta;
    public boolean fechaAltaSpecified;
    public VectorFichaTecnica fichaTecnica;
    public String numSolicitud;
    public boolean publicado;
    public boolean publicadoSpecified;
    public VectorSolicitudAlcanceServicio solicitudAlcanceServicio;
    public VectorSolicitudDatosPlanos solicitudDatosPlanos;
    public SolicitudServicio solicitudServicio1;
    public SolicitudServicio solicitudServicio2;
    public VectorSolicitudServicioServicio solicitudServicioServicio;
    public VectorSolicitudVehiculoSaliente solicitudVehiculoSaliente;
    public Vehiculo vehiculo;
    public String fechaModificacion;
    public boolean fechaModificacionSpecified;
    public long idSolicitudServicio;
    public boolean idSolicitudServicioSpecified;
    public VectorByte timestamp;
    public long usuarioModificacion;
    public boolean usuarioModificacionSpecified;
    public String id;
    public String ref;
    
    public SolicitudServicio(){}
    
    public SolicitudServicio(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Cancelada"))
        {
            Object obj = soapObject.getProperty("Cancelada");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cancelada = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cancelada = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("CanceladaSpecified"))
        {
            Object obj = soapObject.getProperty("CanceladaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                canceladaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                canceladaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("CitaPrevia"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("CitaPrevia");
            citaPrevia =  new CitaPrevia (j);
            
        }
        if (soapObject.hasProperty("Cliente"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Cliente");
            cliente =  new Cliente (j);
            
        }
        if (soapObject.hasProperty("Cliente1"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Cliente1");
            cliente1 =  new Cliente (j);
            
        }
        if (soapObject.hasProperty("CulturaDocumento"))
        {
            Object obj = soapObject.getProperty("CulturaDocumento");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                culturaDocumento = j.toString();
            }else if (obj!= null && obj instanceof String){
                culturaDocumento = (String) obj;
            }
        }
        if (soapObject.hasProperty("EstadoSeguro"))
        {
            Object obj = soapObject.getProperty("EstadoSeguro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                estadoSeguro = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                estadoSeguro = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("EstadoSeguroSpecified"))
        {
            Object obj = soapObject.getProperty("EstadoSeguroSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                estadoSeguroSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                estadoSeguroSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Expediente"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Expediente");
            expediente =  new Expediente (j);
            
        }
        if (soapObject.hasProperty("ExternoCentro"))
        {
            Object obj = soapObject.getProperty("ExternoCentro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                externoCentro = j.toString();
            }else if (obj!= null && obj instanceof String){
                externoCentro = (String) obj;
            }
        }
        if (soapObject.hasProperty("ExternoDeCertio"))
        {
            Object obj = soapObject.getProperty("ExternoDeCertio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                externoDeCertio = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                externoDeCertio = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ExternoDeCertioSpecified"))
        {
            Object obj = soapObject.getProperty("ExternoDeCertioSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                externoDeCertioSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                externoDeCertioSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ExternoFecha"))
        {
            Object obj = soapObject.getProperty("ExternoFecha");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                externoFecha = j.toString();
            }else if (obj!= null && obj instanceof String){
                externoFecha = (String) obj;
            }
        }
        if (soapObject.hasProperty("ExternoFechaSpecified"))
        {
            Object obj = soapObject.getProperty("ExternoFechaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                externoFechaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                externoFechaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ExternoIdInspCertio"))
        {
            Object obj = soapObject.getProperty("ExternoIdInspCertio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                externoIdInspCertio = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                externoIdInspCertio = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ExternoIdInspCertioSpecified"))
        {
            Object obj = soapObject.getProperty("ExternoIdInspCertioSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                externoIdInspCertioSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                externoIdInspCertioSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ExternoNumInspeccion"))
        {
            Object obj = soapObject.getProperty("ExternoNumInspeccion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                externoNumInspeccion = j.toString();
            }else if (obj!= null && obj instanceof String){
                externoNumInspeccion = (String) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCentro"))
        {
            Object obj = soapObject.getProperty("FK_IdCentro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCentro = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdCentro = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCentroSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdCentroSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCentroSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdCentroSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCitaPrevia"))
        {
            Object obj = soapObject.getProperty("FK_IdCitaPrevia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCitaPrevia = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdCitaPrevia = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCitaPreviaSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdCitaPreviaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCitaPreviaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdCitaPreviaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdClientePortador"))
        {
            Object obj = soapObject.getProperty("FK_IdClientePortador");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdClientePortador = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdClientePortador = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdClientePortadorSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdClientePortadorSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdClientePortadorSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdClientePortadorSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdClienteTitular"))
        {
            Object obj = soapObject.getProperty("FK_IdClienteTitular");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdClienteTitular = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdClienteTitular = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdClienteTitularSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdClienteTitularSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdClienteTitularSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdClienteTitularSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdExpediente"))
        {
            Object obj = soapObject.getProperty("FK_IdExpediente");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdExpediente = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdExpediente = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdExpedienteSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdExpedienteSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdExpedienteSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdExpedienteSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTipoCliente"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoCliente");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoCliente = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdTipoCliente = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTipoClienteSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoClienteSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoClienteSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdTipoClienteSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdVehiculo"))
        {
            Object obj = soapObject.getProperty("FK_IdVehiculo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdVehiculo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdVehiculo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdVehiculoSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdVehiculoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdVehiculoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdVehiculoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Factura"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Factura");
            factura = new VectorFactura(j);
        }
        if (soapObject.hasProperty("FechaAlta"))
        {
            Object obj = soapObject.getProperty("FechaAlta");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaAlta = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaAlta = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaAltaSpecified"))
        {
            Object obj = soapObject.getProperty("FechaAltaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaAltaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaAltaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FichaTecnica"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("FichaTecnica");
            fichaTecnica = new VectorFichaTecnica(j);
        }
        if (soapObject.hasProperty("NumSolicitud"))
        {
            Object obj = soapObject.getProperty("NumSolicitud");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numSolicitud = j.toString();
            }else if (obj!= null && obj instanceof String){
                numSolicitud = (String) obj;
            }
        }
        if (soapObject.hasProperty("Publicado"))
        {
            Object obj = soapObject.getProperty("Publicado");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicado = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicado = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PublicadoSpecified"))
        {
            Object obj = soapObject.getProperty("PublicadoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicadoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicadoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("SolicitudAlcanceServicio"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("SolicitudAlcanceServicio");
            solicitudAlcanceServicio = new VectorSolicitudAlcanceServicio(j);
        }
        if (soapObject.hasProperty("SolicitudDatosPlanos"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("SolicitudDatosPlanos");
            solicitudDatosPlanos = new VectorSolicitudDatosPlanos(j);
        }
        if (soapObject.hasProperty("SolicitudServicio1"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("SolicitudServicio1");
            solicitudServicio1 =  new SolicitudServicio (j);
            
        }
        if (soapObject.hasProperty("SolicitudServicio2"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("SolicitudServicio2");
            solicitudServicio2 =  new SolicitudServicio (j);
            
        }
        if (soapObject.hasProperty("SolicitudServicioServicio"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("SolicitudServicioServicio");
            solicitudServicioServicio = new VectorSolicitudServicioServicio(j);
        }
        if (soapObject.hasProperty("SolicitudVehiculoSaliente"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("SolicitudVehiculoSaliente");
            solicitudVehiculoSaliente = new VectorSolicitudVehiculoSaliente(j);
        }
        if (soapObject.hasProperty("Vehiculo"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Vehiculo");
            vehiculo =  new Vehiculo (j);
            
        }
        if (soapObject.hasProperty("fechaModificacion"))
        {
            Object obj = soapObject.getProperty("fechaModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaModificacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("fechaModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("idSolicitudServicio"))
        {
            Object obj = soapObject.getProperty("idSolicitudServicio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idSolicitudServicio = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idSolicitudServicio = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("idSolicitudServicioSpecified"))
        {
            Object obj = soapObject.getProperty("idSolicitudServicioSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idSolicitudServicioSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idSolicitudServicioSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("timestamp"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("timestamp");
            timestamp = new VectorByte(j);
        }
        if (soapObject.hasProperty("usuarioModificacion"))
        {
            Object obj = soapObject.getProperty("usuarioModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                usuarioModificacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("usuarioModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("usuarioModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                usuarioModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return cancelada;
            case 1:
                return canceladaSpecified;
            case 2:
                return citaPrevia;
            case 3:
                return cliente;
            case 4:
                return cliente1;
            case 5:
                return culturaDocumento;
            case 6:
                return estadoSeguro;
            case 7:
                return estadoSeguroSpecified;
            case 8:
                return expediente;
            case 9:
                return externoCentro;
            case 10:
                return externoDeCertio;
            case 11:
                return externoDeCertioSpecified;
            case 12:
                return externoFecha;
            case 13:
                return externoFechaSpecified;
            case 14:
                return externoIdInspCertio;
            case 15:
                return externoIdInspCertioSpecified;
            case 16:
                return externoNumInspeccion;
            case 17:
                return fK_IdCentro;
            case 18:
                return fK_IdCentroSpecified;
            case 19:
                return fK_IdCitaPrevia;
            case 20:
                return fK_IdCitaPreviaSpecified;
            case 21:
                return fK_IdClientePortador;
            case 22:
                return fK_IdClientePortadorSpecified;
            case 23:
                return fK_IdClienteTitular;
            case 24:
                return fK_IdClienteTitularSpecified;
            case 25:
                return fK_IdExpediente;
            case 26:
                return fK_IdExpedienteSpecified;
            case 27:
                return fK_IdTipoCliente;
            case 28:
                return fK_IdTipoClienteSpecified;
            case 29:
                return fK_IdVehiculo;
            case 30:
                return fK_IdVehiculoSpecified;
            case 31:
                return factura;
            case 32:
                return fechaAlta;
            case 33:
                return fechaAltaSpecified;
            case 34:
                return fichaTecnica;
            case 35:
                return numSolicitud;
            case 36:
                return publicado;
            case 37:
                return publicadoSpecified;
            case 38:
                return solicitudAlcanceServicio;
            case 39:
                return solicitudDatosPlanos;
            case 40:
                return solicitudServicio1;
            case 41:
                return solicitudServicio2;
            case 42:
                return solicitudServicioServicio;
            case 43:
                return solicitudVehiculoSaliente;
            case 44:
                return vehiculo;
            case 45:
                return fechaModificacion;
            case 46:
                return fechaModificacionSpecified;
            case 47:
                return idSolicitudServicio;
            case 48:
                return idSolicitudServicioSpecified;
            case 49:
                return timestamp.toString();
            case 50:
                return usuarioModificacion;
            case 51:
                return usuarioModificacionSpecified;
            case 52:
                return id;
            case 53:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 54;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Cancelada";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CanceladaSpecified";
                break;
            case 2:
                info.type = CitaPrevia.class;
                info.name = "CitaPrevia";
                break;
            case 3:
                info.type = Cliente.class;
                info.name = "Cliente";
                break;
            case 4:
                info.type = Cliente.class;
                info.name = "Cliente1";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CulturaDocumento";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "EstadoSeguro";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "EstadoSeguroSpecified";
                break;
            case 8:
                info.type = Expediente.class;
                info.name = "Expediente";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExternoCentro";
                break;
            case 10:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ExternoDeCertio";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ExternoDeCertioSpecified";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExternoFecha";
                break;
            case 13:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ExternoFechaSpecified";
                break;
            case 14:
                info.type = Long.class;
                info.name = "ExternoIdInspCertio";
                break;
            case 15:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ExternoIdInspCertioSpecified";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExternoNumInspeccion";
                break;
            case 17:
                info.type = Long.class;
                info.name = "FK_IdCentro";
                break;
            case 18:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdCentroSpecified";
                break;
            case 19:
                info.type = Long.class;
                info.name = "FK_IdCitaPrevia";
                break;
            case 20:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdCitaPreviaSpecified";
                break;
            case 21:
                info.type = Long.class;
                info.name = "FK_IdClientePortador";
                break;
            case 22:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdClientePortadorSpecified";
                break;
            case 23:
                info.type = Long.class;
                info.name = "FK_IdClienteTitular";
                break;
            case 24:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdClienteTitularSpecified";
                break;
            case 25:
                info.type = Long.class;
                info.name = "FK_IdExpediente";
                break;
            case 26:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdExpedienteSpecified";
                break;
            case 27:
                info.type = Long.class;
                info.name = "FK_IdTipoCliente";
                break;
            case 28:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdTipoClienteSpecified";
                break;
            case 29:
                info.type = Long.class;
                info.name = "FK_IdVehiculo";
                break;
            case 30:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdVehiculoSpecified";
                break;
            case 31:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "Factura";
                break;
            case 32:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaAlta";
                break;
            case 33:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaAltaSpecified";
                break;
            case 34:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "FichaTecnica";
                break;
            case 35:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NumSolicitud";
                break;
            case 36:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Publicado";
                break;
            case 37:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PublicadoSpecified";
                break;
            case 38:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "SolicitudAlcanceServicio";
                break;
            case 39:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "SolicitudDatosPlanos";
                break;
            case 40:
                info.type = SolicitudServicio.class;
                info.name = "SolicitudServicio1";
                break;
            case 41:
                info.type = SolicitudServicio.class;
                info.name = "SolicitudServicio2";
                break;
            case 42:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "SolicitudServicioServicio";
                break;
            case 43:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "SolicitudVehiculoSaliente";
                break;
            case 44:
                info.type = Vehiculo.class;
                info.name = "Vehiculo";
                break;
            case 45:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "fechaModificacion";
                break;
            case 46:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "fechaModificacionSpecified";
                break;
            case 47:
                info.type = Long.class;
                info.name = "idSolicitudServicio";
                break;
            case 48:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "idSolicitudServicioSpecified";
                break;
            case 49:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "timestamp";
                break;
            case 50:
                info.type = Long.class;
                info.name = "usuarioModificacion";
                break;
            case 51:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "usuarioModificacionSpecified";
                break;
            case 52:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 53:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
