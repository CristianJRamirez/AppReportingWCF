package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.ReportingService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 4/25/2017 7:43:53 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class QUERY_ResumenFacturasCliente_Result implements KvmSerializable {
    
    public String cP;
    public String domicilio;
    public String fecha;
    public boolean fechaSpecified;
    public String formaPago;
    public String matricula;
    public String nIF;
    public String nombre;
    public String numFactura;
    public String poblacion;
    public String provincia;
    public String telefono;
    public double total;
    public boolean totalSpecified;
    public String id;
    public String ref;
    
    public QUERY_ResumenFacturasCliente_Result(){}
    
    public QUERY_ResumenFacturasCliente_Result(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("CP"))
        {
            Object obj = soapObject.getProperty("CP");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cP = j.toString();
            }else if (obj!= null && obj instanceof String){
                cP = (String) obj;
            }
        }
        if (soapObject.hasProperty("Domicilio"))
        {
            Object obj = soapObject.getProperty("Domicilio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                domicilio = j.toString();
            }else if (obj!= null && obj instanceof String){
                domicilio = (String) obj;
            }
        }
        if (soapObject.hasProperty("Fecha"))
        {
            Object obj = soapObject.getProperty("Fecha");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fecha = j.toString();
            }else if (obj!= null && obj instanceof String){
                fecha = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaSpecified"))
        {
            Object obj = soapObject.getProperty("FechaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FormaPago"))
        {
            Object obj = soapObject.getProperty("FormaPago");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                formaPago = j.toString();
            }else if (obj!= null && obj instanceof String){
                formaPago = (String) obj;
            }
        }
        if (soapObject.hasProperty("Matricula"))
        {
            Object obj = soapObject.getProperty("Matricula");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                matricula = j.toString();
            }else if (obj!= null && obj instanceof String){
                matricula = (String) obj;
            }
        }
        if (soapObject.hasProperty("NIF"))
        {
            Object obj = soapObject.getProperty("NIF");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nIF = j.toString();
            }else if (obj!= null && obj instanceof String){
                nIF = (String) obj;
            }
        }
        if (soapObject.hasProperty("Nombre"))
        {
            Object obj = soapObject.getProperty("Nombre");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nombre = j.toString();
            }else if (obj!= null && obj instanceof String){
                nombre = (String) obj;
            }
        }
        if (soapObject.hasProperty("NumFactura"))
        {
            Object obj = soapObject.getProperty("NumFactura");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numFactura = j.toString();
            }else if (obj!= null && obj instanceof String){
                numFactura = (String) obj;
            }
        }
        if (soapObject.hasProperty("Poblacion"))
        {
            Object obj = soapObject.getProperty("Poblacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                poblacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                poblacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("Provincia"))
        {
            Object obj = soapObject.getProperty("Provincia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                provincia = j.toString();
            }else if (obj!= null && obj instanceof String){
                provincia = (String) obj;
            }
        }
        if (soapObject.hasProperty("Telefono"))
        {
            Object obj = soapObject.getProperty("Telefono");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                telefono = j.toString();
            }else if (obj!= null && obj instanceof String){
                telefono = (String) obj;
            }
        }
        if (soapObject.hasProperty("Total"))
        {
            Object obj = soapObject.getProperty("Total");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                total = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                total = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TotalSpecified"))
        {
            Object obj = soapObject.getProperty("TotalSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                totalSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return cP;
            case 1:
                return domicilio;
            case 2:
                return fecha;
            case 3:
                return fechaSpecified;
            case 4:
                return formaPago;
            case 5:
                return matricula;
            case 6:
                return nIF;
            case 7:
                return nombre;
            case 8:
                return numFactura;
            case 9:
                return poblacion;
            case 10:
                return provincia;
            case 11:
                return telefono;
            case 12:
                return total;
            case 13:
                return totalSpecified;
            case 14:
                return id;
            case 15:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 16;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CP";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Domicilio";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Fecha";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaSpecified";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FormaPago";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Matricula";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NIF";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Nombre";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NumFactura";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Poblacion";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Provincia";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Telefono";
                break;
            case 12:
                info.type = Double.class;
                info.name = "Total";
                break;
            case 13:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TotalSpecified";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }

    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
