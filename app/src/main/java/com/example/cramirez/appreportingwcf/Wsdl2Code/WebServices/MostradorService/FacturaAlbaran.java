package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService;
//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/15/2017 9:13:05 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.Centro;
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.Cliente;
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.EstadoFactura;
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorFacturaAlbaran;
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.FacturaAlbaran;
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorFacturaAlbaranAlbaran;
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorFacturaAlbaranSubTotal;
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.MecanismoPago;
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.TipoDocumento;
import com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorByte;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class FacturaAlbaran implements KvmSerializable {
    
    public boolean abono;
    public boolean abonoSpecified;
    public String apellidos;
    public Centro centro;
    public Cliente cliente;
    public String codigoPostal;
    public String domicilio;
    public String email;
    public String envioAtencionDe;
    public String envioCalleNum;
    public String envioNombre;
    public String envioPoblacionCP;
    public String escPisoPta;
    public EstadoFactura estadoFactura;
    public long fK_IdCentro;
    public boolean fK_IdCentroSpecified;
    public long fK_IdCliente;
    public boolean fK_IdClienteSpecified;
    public long fK_IdEstadoFactura;
    public boolean fK_IdEstadoFacturaSpecified;
    public long fK_IdFacturaAlbaranPrevia;
    public boolean fK_IdFacturaAlbaranPreviaSpecified;
    public long fK_IdMecanismoPago;
    public boolean fK_IdMecanismoPagoSpecified;
    public long fK_IdTipoDocumento;
    public boolean fK_IdTipoDocumentoSpecified;
    public VectorFacturaAlbaran facturaAlbaran1;
    public FacturaAlbaran facturaAlbaran2;
    public VectorFacturaAlbaranAlbaran facturaAlbaranAlbaran;
    public VectorFacturaAlbaranSubTotal facturaAlbaranSubTotal;
    public String fechaCobro;
    public boolean fechaCobroSpecified;
    public String fechaEmision;
    public boolean fechaEmisionSpecified;
    public String fechaFinPeriodo;
    public boolean fechaFinPeriodoSpecified;
    public String fechaIniPeriodo;
    public boolean fechaIniPeriodoSpecified;
    public String fechaVencimiento;
    public boolean fechaVencimientoSpecified;
    public long idFacturaAlbaran;
    public boolean idFacturaAlbaranSpecified;
    public MecanismoPago mecanismoPago;
    public String movil;
    public String nIF;
    public String nombre;
    public String notasOcultas;
    public String numFactura;
    public String numero;
    public String observaciones;
    public String poblacion;
    public String provincia;
    public boolean publicado;
    public boolean publicadoSpecified;
    public boolean rectificativa;
    public boolean rectificativaSpecified;
    public String telefono;
    public TipoDocumento tipoDocumento;
    public String tipoVia;
    public double totalFactura;
    public boolean totalFacturaSpecified;
    public String usuarioCobro;
    public String usuarioEmision;
    public String fechaModificacion;
    public boolean fechaModificacionSpecified;
    public VectorByte timestamp;
    public long usuarioModificacion;
    public boolean usuarioModificacionSpecified;
    public String id;
    public String ref;
    
    public FacturaAlbaran(){}
    
    public FacturaAlbaran(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Abono"))
        {
            Object obj = soapObject.getProperty("Abono");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                abono = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                abono = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AbonoSpecified"))
        {
            Object obj = soapObject.getProperty("AbonoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                abonoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                abonoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Apellidos"))
        {
            Object obj = soapObject.getProperty("Apellidos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                apellidos = j.toString();
            }else if (obj!= null && obj instanceof String){
                apellidos = (String) obj;
            }
        }
        if (soapObject.hasProperty("Centro"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Centro");
            centro =  new Centro (j);
            
        }
        if (soapObject.hasProperty("Cliente"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Cliente");
            cliente =  new Cliente (j);
            
        }
        if (soapObject.hasProperty("CodigoPostal"))
        {
            Object obj = soapObject.getProperty("CodigoPostal");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                codigoPostal = j.toString();
            }else if (obj!= null && obj instanceof String){
                codigoPostal = (String) obj;
            }
        }
        if (soapObject.hasProperty("Domicilio"))
        {
            Object obj = soapObject.getProperty("Domicilio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                domicilio = j.toString();
            }else if (obj!= null && obj instanceof String){
                domicilio = (String) obj;
            }
        }
        if (soapObject.hasProperty("Email"))
        {
            Object obj = soapObject.getProperty("Email");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                email = j.toString();
            }else if (obj!= null && obj instanceof String){
                email = (String) obj;
            }
        }
        if (soapObject.hasProperty("EnvioAtencionDe"))
        {
            Object obj = soapObject.getProperty("EnvioAtencionDe");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                envioAtencionDe = j.toString();
            }else if (obj!= null && obj instanceof String){
                envioAtencionDe = (String) obj;
            }
        }
        if (soapObject.hasProperty("EnvioCalleNum"))
        {
            Object obj = soapObject.getProperty("EnvioCalleNum");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                envioCalleNum = j.toString();
            }else if (obj!= null && obj instanceof String){
                envioCalleNum = (String) obj;
            }
        }
        if (soapObject.hasProperty("EnvioNombre"))
        {
            Object obj = soapObject.getProperty("EnvioNombre");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                envioNombre = j.toString();
            }else if (obj!= null && obj instanceof String){
                envioNombre = (String) obj;
            }
        }
        if (soapObject.hasProperty("EnvioPoblacionCP"))
        {
            Object obj = soapObject.getProperty("EnvioPoblacionCP");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                envioPoblacionCP = j.toString();
            }else if (obj!= null && obj instanceof String){
                envioPoblacionCP = (String) obj;
            }
        }
        if (soapObject.hasProperty("EscPisoPta"))
        {
            Object obj = soapObject.getProperty("EscPisoPta");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                escPisoPta = j.toString();
            }else if (obj!= null && obj instanceof String){
                escPisoPta = (String) obj;
            }
        }
        if (soapObject.hasProperty("EstadoFactura"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("EstadoFactura");
            estadoFactura =  new EstadoFactura (j);
            
        }
        if (soapObject.hasProperty("FK_IdCentro"))
        {
            Object obj = soapObject.getProperty("FK_IdCentro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCentro = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdCentro = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCentroSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdCentroSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCentroSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdCentroSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCliente"))
        {
            Object obj = soapObject.getProperty("FK_IdCliente");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCliente = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdCliente = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdClienteSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdClienteSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdClienteSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdClienteSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdEstadoFactura"))
        {
            Object obj = soapObject.getProperty("FK_IdEstadoFactura");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdEstadoFactura = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdEstadoFactura = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdEstadoFacturaSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdEstadoFacturaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdEstadoFacturaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdEstadoFacturaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdFacturaAlbaranPrevia"))
        {
            Object obj = soapObject.getProperty("FK_IdFacturaAlbaranPrevia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdFacturaAlbaranPrevia = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdFacturaAlbaranPrevia = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdFacturaAlbaranPreviaSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdFacturaAlbaranPreviaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdFacturaAlbaranPreviaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdFacturaAlbaranPreviaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdMecanismoPago"))
        {
            Object obj = soapObject.getProperty("FK_IdMecanismoPago");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdMecanismoPago = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdMecanismoPago = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdMecanismoPagoSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdMecanismoPagoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdMecanismoPagoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdMecanismoPagoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTipoDocumento"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoDocumento");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoDocumento = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdTipoDocumento = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTipoDocumentoSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoDocumentoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoDocumentoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdTipoDocumentoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FacturaAlbaran1"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("FacturaAlbaran1");
            facturaAlbaran1 = new VectorFacturaAlbaran(j);
        }
        if (soapObject.hasProperty("FacturaAlbaran2"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("FacturaAlbaran2");
            facturaAlbaran2 =  new FacturaAlbaran (j);
            
        }
        if (soapObject.hasProperty("FacturaAlbaranAlbaran"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("FacturaAlbaranAlbaran");
            facturaAlbaranAlbaran = new VectorFacturaAlbaranAlbaran(j);
        }
        if (soapObject.hasProperty("FacturaAlbaranSubTotal"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("FacturaAlbaranSubTotal");
            facturaAlbaranSubTotal = new VectorFacturaAlbaranSubTotal(j);
        }
        if (soapObject.hasProperty("FechaCobro"))
        {
            Object obj = soapObject.getProperty("FechaCobro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaCobro = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaCobro = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaCobroSpecified"))
        {
            Object obj = soapObject.getProperty("FechaCobroSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaCobroSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaCobroSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaEmision"))
        {
            Object obj = soapObject.getProperty("FechaEmision");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaEmision = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaEmision = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaEmisionSpecified"))
        {
            Object obj = soapObject.getProperty("FechaEmisionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaEmisionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaEmisionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaFinPeriodo"))
        {
            Object obj = soapObject.getProperty("FechaFinPeriodo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaFinPeriodo = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaFinPeriodo = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaFinPeriodoSpecified"))
        {
            Object obj = soapObject.getProperty("FechaFinPeriodoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaFinPeriodoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaFinPeriodoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaIniPeriodo"))
        {
            Object obj = soapObject.getProperty("FechaIniPeriodo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaIniPeriodo = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaIniPeriodo = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaIniPeriodoSpecified"))
        {
            Object obj = soapObject.getProperty("FechaIniPeriodoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaIniPeriodoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaIniPeriodoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaVencimiento"))
        {
            Object obj = soapObject.getProperty("FechaVencimiento");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaVencimiento = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaVencimiento = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaVencimientoSpecified"))
        {
            Object obj = soapObject.getProperty("FechaVencimientoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaVencimientoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaVencimientoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdFacturaAlbaran"))
        {
            Object obj = soapObject.getProperty("IdFacturaAlbaran");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idFacturaAlbaran = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idFacturaAlbaran = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdFacturaAlbaranSpecified"))
        {
            Object obj = soapObject.getProperty("IdFacturaAlbaranSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idFacturaAlbaranSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idFacturaAlbaranSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("MecanismoPago"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("MecanismoPago");
            mecanismoPago =  new MecanismoPago (j);
            
        }
        if (soapObject.hasProperty("Movil"))
        {
            Object obj = soapObject.getProperty("Movil");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                movil = j.toString();
            }else if (obj!= null && obj instanceof String){
                movil = (String) obj;
            }
        }
        if (soapObject.hasProperty("NIF"))
        {
            Object obj = soapObject.getProperty("NIF");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nIF = j.toString();
            }else if (obj!= null && obj instanceof String){
                nIF = (String) obj;
            }
        }
        if (soapObject.hasProperty("Nombre"))
        {
            Object obj = soapObject.getProperty("Nombre");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nombre = j.toString();
            }else if (obj!= null && obj instanceof String){
                nombre = (String) obj;
            }
        }
        if (soapObject.hasProperty("NotasOcultas"))
        {
            Object obj = soapObject.getProperty("NotasOcultas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                notasOcultas = j.toString();
            }else if (obj!= null && obj instanceof String){
                notasOcultas = (String) obj;
            }
        }
        if (soapObject.hasProperty("NumFactura"))
        {
            Object obj = soapObject.getProperty("NumFactura");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numFactura = j.toString();
            }else if (obj!= null && obj instanceof String){
                numFactura = (String) obj;
            }
        }
        if (soapObject.hasProperty("Numero"))
        {
            Object obj = soapObject.getProperty("Numero");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numero = j.toString();
            }else if (obj!= null && obj instanceof String){
                numero = (String) obj;
            }
        }
        if (soapObject.hasProperty("Observaciones"))
        {
            Object obj = soapObject.getProperty("Observaciones");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                observaciones = j.toString();
            }else if (obj!= null && obj instanceof String){
                observaciones = (String) obj;
            }
        }
        if (soapObject.hasProperty("Poblacion"))
        {
            Object obj = soapObject.getProperty("Poblacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                poblacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                poblacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("Provincia"))
        {
            Object obj = soapObject.getProperty("Provincia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                provincia = j.toString();
            }else if (obj!= null && obj instanceof String){
                provincia = (String) obj;
            }
        }
        if (soapObject.hasProperty("Publicado"))
        {
            Object obj = soapObject.getProperty("Publicado");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicado = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicado = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PublicadoSpecified"))
        {
            Object obj = soapObject.getProperty("PublicadoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicadoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicadoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Rectificativa"))
        {
            Object obj = soapObject.getProperty("Rectificativa");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                rectificativa = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                rectificativa = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("RectificativaSpecified"))
        {
            Object obj = soapObject.getProperty("RectificativaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                rectificativaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                rectificativaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Telefono"))
        {
            Object obj = soapObject.getProperty("Telefono");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                telefono = j.toString();
            }else if (obj!= null && obj instanceof String){
                telefono = (String) obj;
            }
        }
        if (soapObject.hasProperty("TipoDocumento"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("TipoDocumento");
            tipoDocumento =  new TipoDocumento (j);
            
        }
        if (soapObject.hasProperty("TipoVia"))
        {
            Object obj = soapObject.getProperty("TipoVia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tipoVia = j.toString();
            }else if (obj!= null && obj instanceof String){
                tipoVia = (String) obj;
            }
        }
        if (soapObject.hasProperty("TotalFactura"))
        {
            Object obj = soapObject.getProperty("TotalFactura");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalFactura = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                totalFactura = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TotalFacturaSpecified"))
        {
            Object obj = soapObject.getProperty("TotalFacturaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalFacturaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                totalFacturaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("UsuarioCobro"))
        {
            Object obj = soapObject.getProperty("UsuarioCobro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioCobro = j.toString();
            }else if (obj!= null && obj instanceof String){
                usuarioCobro = (String) obj;
            }
        }
        if (soapObject.hasProperty("UsuarioEmision"))
        {
            Object obj = soapObject.getProperty("UsuarioEmision");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioEmision = j.toString();
            }else if (obj!= null && obj instanceof String){
                usuarioEmision = (String) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacion"))
        {
            Object obj = soapObject.getProperty("fechaModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaModificacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("fechaModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("timestamp"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("timestamp");
            timestamp = new VectorByte(j);
        }
        if (soapObject.hasProperty("usuarioModificacion"))
        {
            Object obj = soapObject.getProperty("usuarioModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                usuarioModificacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("usuarioModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("usuarioModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                usuarioModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return abono;
            case 1:
                return abonoSpecified;
            case 2:
                return apellidos;
            case 3:
                return centro;
            case 4:
                return cliente;
            case 5:
                return codigoPostal;
            case 6:
                return domicilio;
            case 7:
                return email;
            case 8:
                return envioAtencionDe;
            case 9:
                return envioCalleNum;
            case 10:
                return envioNombre;
            case 11:
                return envioPoblacionCP;
            case 12:
                return escPisoPta;
            case 13:
                return estadoFactura;
            case 14:
                return fK_IdCentro;
            case 15:
                return fK_IdCentroSpecified;
            case 16:
                return fK_IdCliente;
            case 17:
                return fK_IdClienteSpecified;
            case 18:
                return fK_IdEstadoFactura;
            case 19:
                return fK_IdEstadoFacturaSpecified;
            case 20:
                return fK_IdFacturaAlbaranPrevia;
            case 21:
                return fK_IdFacturaAlbaranPreviaSpecified;
            case 22:
                return fK_IdMecanismoPago;
            case 23:
                return fK_IdMecanismoPagoSpecified;
            case 24:
                return fK_IdTipoDocumento;
            case 25:
                return fK_IdTipoDocumentoSpecified;
            case 26:
                return facturaAlbaran1;
            case 27:
                return facturaAlbaran2;
            case 28:
                return facturaAlbaranAlbaran;
            case 29:
                return facturaAlbaranSubTotal;
            case 30:
                return fechaCobro;
            case 31:
                return fechaCobroSpecified;
            case 32:
                return fechaEmision;
            case 33:
                return fechaEmisionSpecified;
            case 34:
                return fechaFinPeriodo;
            case 35:
                return fechaFinPeriodoSpecified;
            case 36:
                return fechaIniPeriodo;
            case 37:
                return fechaIniPeriodoSpecified;
            case 38:
                return fechaVencimiento;
            case 39:
                return fechaVencimientoSpecified;
            case 40:
                return idFacturaAlbaran;
            case 41:
                return idFacturaAlbaranSpecified;
            case 42:
                return mecanismoPago;
            case 43:
                return movil;
            case 44:
                return nIF;
            case 45:
                return nombre;
            case 46:
                return notasOcultas;
            case 47:
                return numFactura;
            case 48:
                return numero;
            case 49:
                return observaciones;
            case 50:
                return poblacion;
            case 51:
                return provincia;
            case 52:
                return publicado;
            case 53:
                return publicadoSpecified;
            case 54:
                return rectificativa;
            case 55:
                return rectificativaSpecified;
            case 56:
                return telefono;
            case 57:
                return tipoDocumento;
            case 58:
                return tipoVia;
            case 59:
                return totalFactura;
            case 60:
                return totalFacturaSpecified;
            case 61:
                return usuarioCobro;
            case 62:
                return usuarioEmision;
            case 63:
                return fechaModificacion;
            case 64:
                return fechaModificacionSpecified;
            case 65:
                return timestamp.toString();
            case 66:
                return usuarioModificacion;
            case 67:
                return usuarioModificacionSpecified;
            case 68:
                return id;
            case 69:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 70;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Abono";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AbonoSpecified";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Apellidos";
                break;
            case 3:
                info.type = Centro.class;
                info.name = "Centro";
                break;
            case 4:
                info.type = Cliente.class;
                info.name = "Cliente";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CodigoPostal";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Domicilio";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Email";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EnvioAtencionDe";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EnvioCalleNum";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EnvioNombre";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EnvioPoblacionCP";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EscPisoPta";
                break;
            case 13:
                info.type = EstadoFactura.class;
                info.name = "EstadoFactura";
                break;
            case 14:
                info.type = Long.class;
                info.name = "FK_IdCentro";
                break;
            case 15:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdCentroSpecified";
                break;
            case 16:
                info.type = Long.class;
                info.name = "FK_IdCliente";
                break;
            case 17:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdClienteSpecified";
                break;
            case 18:
                info.type = Long.class;
                info.name = "FK_IdEstadoFactura";
                break;
            case 19:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdEstadoFacturaSpecified";
                break;
            case 20:
                info.type = Long.class;
                info.name = "FK_IdFacturaAlbaranPrevia";
                break;
            case 21:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdFacturaAlbaranPreviaSpecified";
                break;
            case 22:
                info.type = Long.class;
                info.name = "FK_IdMecanismoPago";
                break;
            case 23:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdMecanismoPagoSpecified";
                break;
            case 24:
                info.type = Long.class;
                info.name = "FK_IdTipoDocumento";
                break;
            case 25:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdTipoDocumentoSpecified";
                break;
            case 26:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "FacturaAlbaran1";
                break;
            case 27:
                info.type = FacturaAlbaran.class;
                info.name = "FacturaAlbaran2";
                break;
            case 28:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "FacturaAlbaranAlbaran";
                break;
            case 29:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "FacturaAlbaranSubTotal";
                break;
            case 30:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaCobro";
                break;
            case 31:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaCobroSpecified";
                break;
            case 32:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaEmision";
                break;
            case 33:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaEmisionSpecified";
                break;
            case 34:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaFinPeriodo";
                break;
            case 35:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaFinPeriodoSpecified";
                break;
            case 36:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaIniPeriodo";
                break;
            case 37:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaIniPeriodoSpecified";
                break;
            case 38:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaVencimiento";
                break;
            case 39:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaVencimientoSpecified";
                break;
            case 40:
                info.type = Long.class;
                info.name = "IdFacturaAlbaran";
                break;
            case 41:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdFacturaAlbaranSpecified";
                break;
            case 42:
                info.type = MecanismoPago.class;
                info.name = "MecanismoPago";
                break;
            case 43:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Movil";
                break;
            case 44:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NIF";
                break;
            case 45:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Nombre";
                break;
            case 46:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NotasOcultas";
                break;
            case 47:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NumFactura";
                break;
            case 48:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Numero";
                break;
            case 49:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Observaciones";
                break;
            case 50:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Poblacion";
                break;
            case 51:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Provincia";
                break;
            case 52:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Publicado";
                break;
            case 53:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PublicadoSpecified";
                break;
            case 54:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Rectificativa";
                break;
            case 55:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "RectificativaSpecified";
                break;
            case 56:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Telefono";
                break;
            case 57:
                info.type = TipoDocumento.class;
                info.name = "TipoDocumento";
                break;
            case 58:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TipoVia";
                break;
            case 59:
                info.type = Double.class;
                info.name = "TotalFactura";
                break;
            case 60:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TotalFacturaSpecified";
                break;
            case 61:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "UsuarioCobro";
                break;
            case 62:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "UsuarioEmision";
                break;
            case 63:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "fechaModificacion";
                break;
            case 64:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "fechaModificacionSpecified";
                break;
            case 65:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "timestamp";
                break;
            case 66:
                info.type = Long.class;
                info.name = "usuarioModificacion";
                break;
            case 67:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "usuarioModificacionSpecified";
                break;
            case 68:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 69:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    

    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
