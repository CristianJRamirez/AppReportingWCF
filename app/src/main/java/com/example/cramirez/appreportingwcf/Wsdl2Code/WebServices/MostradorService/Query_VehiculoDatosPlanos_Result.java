package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService;
//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/15/2017 9:13:05 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class Query_VehiculoDatosPlanos_Result implements KvmSerializable {
    
    public String bastidor;
    public boolean cambioManual;
    public boolean cambioManualSpecified;
    public int cilindada;
    public boolean cilindadaSpecified;
    public String codigo;
    public String codigoGrupoVehiculo;
    public String codigoInterno;
    public String combustible;
    public boolean conRemolque;
    public boolean conRemolqueSpecified;
    public boolean conTurbo;
    public boolean conTurboSpecified;
    public String construccion;
    public String contrasenyaHomologacion;
    public boolean cuatroTiempos;
    public boolean cuatroTiemposSpecified;
    public String extensionBastidor;
    public String fechaPrimeraMatriculacion;
    public boolean fechaPrimeraMatriculacionSpecified;
    public String fechaUltimaValidez;
    public boolean fechaUltimaValidezSpecified;
    public long idCombustible;
    public boolean idCombustibleSpecified;
    public long idGrupoVehiculo;
    public boolean idGrupoVehiculoSpecified;
    public long idMarca;
    public boolean idMarcaSpecified;
    public long idModelo;
    public boolean idModeloSpecified;
    public long idVehiculo;
    public boolean idVehiculoSpecified;
    public long idVehiculoClasificacion;
    public boolean idVehiculoClasificacionSpecified;
    public long idVehiculoCodigoInterno;
    public boolean idVehiculoCodigoInternoSpecified;
    public long idVehiculoConstruccion;
    public boolean idVehiculoConstruccionSpecified;
    public long idVehiculoUtilizacion;
    public boolean idVehiculoUtilizacionSpecified;
    public int kilometros;
    public boolean kilometrosSpecified;
    public int mMA;
    public boolean mMASpecified;
    public int mOM;
    public boolean mOMSpecified;
    public String marca;
    public String matricula;
    public String modelo;
    public int numEjes;
    public boolean numEjesSpecified;
    public int pMA;
    public boolean pMASpecified;
    public int plazas;
    public boolean plazasSpecified;
    public int potenciaFiscal;
    public boolean potenciaFiscalSpecified;
    public String tipoFichaTecnica;
    public String utilizacion;
    public int velocidadMaxima;
    public boolean velocidadMaximaSpecified;
    public String id;
    public String ref;
    
    public Query_VehiculoDatosPlanos_Result(){}
    
    public Query_VehiculoDatosPlanos_Result(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Bastidor"))
        {
            Object obj = soapObject.getProperty("Bastidor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                bastidor = j.toString();
            }else if (obj!= null && obj instanceof String){
                bastidor = (String) obj;
            }
        }
        if (soapObject.hasProperty("CambioManual"))
        {
            Object obj = soapObject.getProperty("CambioManual");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cambioManual = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cambioManual = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("CambioManualSpecified"))
        {
            Object obj = soapObject.getProperty("CambioManualSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cambioManualSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cambioManualSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Cilindada"))
        {
            Object obj = soapObject.getProperty("Cilindada");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cilindada = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                cilindada = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CilindadaSpecified"))
        {
            Object obj = soapObject.getProperty("CilindadaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cilindadaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cilindadaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Codigo"))
        {
            Object obj = soapObject.getProperty("Codigo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                codigo = j.toString();
            }else if (obj!= null && obj instanceof String){
                codigo = (String) obj;
            }
        }
        if (soapObject.hasProperty("CodigoGrupoVehiculo"))
        {
            Object obj = soapObject.getProperty("CodigoGrupoVehiculo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                codigoGrupoVehiculo = j.toString();
            }else if (obj!= null && obj instanceof String){
                codigoGrupoVehiculo = (String) obj;
            }
        }
        if (soapObject.hasProperty("CodigoInterno"))
        {
            Object obj = soapObject.getProperty("CodigoInterno");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                codigoInterno = j.toString();
            }else if (obj!= null && obj instanceof String){
                codigoInterno = (String) obj;
            }
        }
        if (soapObject.hasProperty("Combustible"))
        {
            Object obj = soapObject.getProperty("Combustible");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                combustible = j.toString();
            }else if (obj!= null && obj instanceof String){
                combustible = (String) obj;
            }
        }
        if (soapObject.hasProperty("ConRemolque"))
        {
            Object obj = soapObject.getProperty("ConRemolque");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                conRemolque = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                conRemolque = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ConRemolqueSpecified"))
        {
            Object obj = soapObject.getProperty("ConRemolqueSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                conRemolqueSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                conRemolqueSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ConTurbo"))
        {
            Object obj = soapObject.getProperty("ConTurbo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                conTurbo = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                conTurbo = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ConTurboSpecified"))
        {
            Object obj = soapObject.getProperty("ConTurboSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                conTurboSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                conTurboSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Construccion"))
        {
            Object obj = soapObject.getProperty("Construccion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                construccion = j.toString();
            }else if (obj!= null && obj instanceof String){
                construccion = (String) obj;
            }
        }
        if (soapObject.hasProperty("ContrasenyaHomologacion"))
        {
            Object obj = soapObject.getProperty("ContrasenyaHomologacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                contrasenyaHomologacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                contrasenyaHomologacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("CuatroTiempos"))
        {
            Object obj = soapObject.getProperty("CuatroTiempos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cuatroTiempos = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cuatroTiempos = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("CuatroTiemposSpecified"))
        {
            Object obj = soapObject.getProperty("CuatroTiemposSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cuatroTiemposSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cuatroTiemposSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ExtensionBastidor"))
        {
            Object obj = soapObject.getProperty("ExtensionBastidor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                extensionBastidor = j.toString();
            }else if (obj!= null && obj instanceof String){
                extensionBastidor = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaPrimeraMatriculacion"))
        {
            Object obj = soapObject.getProperty("FechaPrimeraMatriculacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaPrimeraMatriculacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaPrimeraMatriculacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaPrimeraMatriculacionSpecified"))
        {
            Object obj = soapObject.getProperty("FechaPrimeraMatriculacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaPrimeraMatriculacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaPrimeraMatriculacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaUltimaValidez"))
        {
            Object obj = soapObject.getProperty("FechaUltimaValidez");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaUltimaValidez = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaUltimaValidez = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaUltimaValidezSpecified"))
        {
            Object obj = soapObject.getProperty("FechaUltimaValidezSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaUltimaValidezSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaUltimaValidezSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdCombustible"))
        {
            Object obj = soapObject.getProperty("IdCombustible");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idCombustible = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idCombustible = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdCombustibleSpecified"))
        {
            Object obj = soapObject.getProperty("IdCombustibleSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idCombustibleSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idCombustibleSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdGrupoVehiculo"))
        {
            Object obj = soapObject.getProperty("IdGrupoVehiculo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idGrupoVehiculo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idGrupoVehiculo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdGrupoVehiculoSpecified"))
        {
            Object obj = soapObject.getProperty("IdGrupoVehiculoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idGrupoVehiculoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idGrupoVehiculoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdMarca"))
        {
            Object obj = soapObject.getProperty("IdMarca");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idMarca = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idMarca = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdMarcaSpecified"))
        {
            Object obj = soapObject.getProperty("IdMarcaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idMarcaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idMarcaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdModelo"))
        {
            Object obj = soapObject.getProperty("IdModelo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idModelo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idModelo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdModeloSpecified"))
        {
            Object obj = soapObject.getProperty("IdModeloSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idModeloSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idModeloSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdVehiculo"))
        {
            Object obj = soapObject.getProperty("IdVehiculo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idVehiculo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idVehiculo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdVehiculoSpecified"))
        {
            Object obj = soapObject.getProperty("IdVehiculoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idVehiculoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idVehiculoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdVehiculoClasificacion"))
        {
            Object obj = soapObject.getProperty("IdVehiculoClasificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idVehiculoClasificacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idVehiculoClasificacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdVehiculoClasificacionSpecified"))
        {
            Object obj = soapObject.getProperty("IdVehiculoClasificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idVehiculoClasificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idVehiculoClasificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdVehiculoCodigoInterno"))
        {
            Object obj = soapObject.getProperty("IdVehiculoCodigoInterno");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idVehiculoCodigoInterno = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idVehiculoCodigoInterno = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdVehiculoCodigoInternoSpecified"))
        {
            Object obj = soapObject.getProperty("IdVehiculoCodigoInternoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idVehiculoCodigoInternoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idVehiculoCodigoInternoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdVehiculoConstruccion"))
        {
            Object obj = soapObject.getProperty("IdVehiculoConstruccion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idVehiculoConstruccion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idVehiculoConstruccion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdVehiculoConstruccionSpecified"))
        {
            Object obj = soapObject.getProperty("IdVehiculoConstruccionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idVehiculoConstruccionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idVehiculoConstruccionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdVehiculoUtilizacion"))
        {
            Object obj = soapObject.getProperty("IdVehiculoUtilizacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idVehiculoUtilizacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idVehiculoUtilizacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdVehiculoUtilizacionSpecified"))
        {
            Object obj = soapObject.getProperty("IdVehiculoUtilizacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idVehiculoUtilizacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idVehiculoUtilizacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Kilometros"))
        {
            Object obj = soapObject.getProperty("Kilometros");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                kilometros = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                kilometros = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("KilometrosSpecified"))
        {
            Object obj = soapObject.getProperty("KilometrosSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                kilometrosSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                kilometrosSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("MMA"))
        {
            Object obj = soapObject.getProperty("MMA");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mMA = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                mMA = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("MMASpecified"))
        {
            Object obj = soapObject.getProperty("MMASpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mMASpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                mMASpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("MOM"))
        {
            Object obj = soapObject.getProperty("MOM");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mOM = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                mOM = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("MOMSpecified"))
        {
            Object obj = soapObject.getProperty("MOMSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mOMSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                mOMSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Marca"))
        {
            Object obj = soapObject.getProperty("Marca");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                marca = j.toString();
            }else if (obj!= null && obj instanceof String){
                marca = (String) obj;
            }
        }
        if (soapObject.hasProperty("Matricula"))
        {
            Object obj = soapObject.getProperty("Matricula");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                matricula = j.toString();
            }else if (obj!= null && obj instanceof String){
                matricula = (String) obj;
            }
        }
        if (soapObject.hasProperty("Modelo"))
        {
            Object obj = soapObject.getProperty("Modelo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                modelo = j.toString();
            }else if (obj!= null && obj instanceof String){
                modelo = (String) obj;
            }
        }
        if (soapObject.hasProperty("NumEjes"))
        {
            Object obj = soapObject.getProperty("NumEjes");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numEjes = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                numEjes = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("NumEjesSpecified"))
        {
            Object obj = soapObject.getProperty("NumEjesSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numEjesSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                numEjesSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PMA"))
        {
            Object obj = soapObject.getProperty("PMA");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pMA = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                pMA = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PMASpecified"))
        {
            Object obj = soapObject.getProperty("PMASpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pMASpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                pMASpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Plazas"))
        {
            Object obj = soapObject.getProperty("Plazas");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                plazas = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                plazas = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PlazasSpecified"))
        {
            Object obj = soapObject.getProperty("PlazasSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                plazasSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                plazasSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PotenciaFiscal"))
        {
            Object obj = soapObject.getProperty("PotenciaFiscal");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                potenciaFiscal = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                potenciaFiscal = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PotenciaFiscalSpecified"))
        {
            Object obj = soapObject.getProperty("PotenciaFiscalSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                potenciaFiscalSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                potenciaFiscalSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("TipoFichaTecnica"))
        {
            Object obj = soapObject.getProperty("TipoFichaTecnica");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tipoFichaTecnica = j.toString();
            }else if (obj!= null && obj instanceof String){
                tipoFichaTecnica = (String) obj;
            }
        }
        if (soapObject.hasProperty("Utilizacion"))
        {
            Object obj = soapObject.getProperty("Utilizacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                utilizacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                utilizacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("VelocidadMaxima"))
        {
            Object obj = soapObject.getProperty("VelocidadMaxima");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                velocidadMaxima = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                velocidadMaxima = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("VelocidadMaximaSpecified"))
        {
            Object obj = soapObject.getProperty("VelocidadMaximaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                velocidadMaximaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                velocidadMaximaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return bastidor;
            case 1:
                return cambioManual;
            case 2:
                return cambioManualSpecified;
            case 3:
                return cilindada;
            case 4:
                return cilindadaSpecified;
            case 5:
                return codigo;
            case 6:
                return codigoGrupoVehiculo;
            case 7:
                return codigoInterno;
            case 8:
                return combustible;
            case 9:
                return conRemolque;
            case 10:
                return conRemolqueSpecified;
            case 11:
                return conTurbo;
            case 12:
                return conTurboSpecified;
            case 13:
                return construccion;
            case 14:
                return contrasenyaHomologacion;
            case 15:
                return cuatroTiempos;
            case 16:
                return cuatroTiemposSpecified;
            case 17:
                return extensionBastidor;
            case 18:
                return fechaPrimeraMatriculacion;
            case 19:
                return fechaPrimeraMatriculacionSpecified;
            case 20:
                return fechaUltimaValidez;
            case 21:
                return fechaUltimaValidezSpecified;
            case 22:
                return idCombustible;
            case 23:
                return idCombustibleSpecified;
            case 24:
                return idGrupoVehiculo;
            case 25:
                return idGrupoVehiculoSpecified;
            case 26:
                return idMarca;
            case 27:
                return idMarcaSpecified;
            case 28:
                return idModelo;
            case 29:
                return idModeloSpecified;
            case 30:
                return idVehiculo;
            case 31:
                return idVehiculoSpecified;
            case 32:
                return idVehiculoClasificacion;
            case 33:
                return idVehiculoClasificacionSpecified;
            case 34:
                return idVehiculoCodigoInterno;
            case 35:
                return idVehiculoCodigoInternoSpecified;
            case 36:
                return idVehiculoConstruccion;
            case 37:
                return idVehiculoConstruccionSpecified;
            case 38:
                return idVehiculoUtilizacion;
            case 39:
                return idVehiculoUtilizacionSpecified;
            case 40:
                return kilometros;
            case 41:
                return kilometrosSpecified;
            case 42:
                return mMA;
            case 43:
                return mMASpecified;
            case 44:
                return mOM;
            case 45:
                return mOMSpecified;
            case 46:
                return marca;
            case 47:
                return matricula;
            case 48:
                return modelo;
            case 49:
                return numEjes;
            case 50:
                return numEjesSpecified;
            case 51:
                return pMA;
            case 52:
                return pMASpecified;
            case 53:
                return plazas;
            case 54:
                return plazasSpecified;
            case 55:
                return potenciaFiscal;
            case 56:
                return potenciaFiscalSpecified;
            case 57:
                return tipoFichaTecnica;
            case 58:
                return utilizacion;
            case 59:
                return velocidadMaxima;
            case 60:
                return velocidadMaximaSpecified;
            case 61:
                return id;
            case 62:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 63;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Bastidor";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CambioManual";
                break;
            case 2:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CambioManualSpecified";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Cilindada";
                break;
            case 4:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CilindadaSpecified";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Codigo";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CodigoGrupoVehiculo";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CodigoInterno";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Combustible";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ConRemolque";
                break;
            case 10:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ConRemolqueSpecified";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ConTurbo";
                break;
            case 12:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ConTurboSpecified";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Construccion";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ContrasenyaHomologacion";
                break;
            case 15:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CuatroTiempos";
                break;
            case 16:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CuatroTiemposSpecified";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExtensionBastidor";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaPrimeraMatriculacion";
                break;
            case 19:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaPrimeraMatriculacionSpecified";
                break;
            case 20:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaUltimaValidez";
                break;
            case 21:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaUltimaValidezSpecified";
                break;
            case 22:
                info.type = Long.class;
                info.name = "IdCombustible";
                break;
            case 23:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdCombustibleSpecified";
                break;
            case 24:
                info.type = Long.class;
                info.name = "IdGrupoVehiculo";
                break;
            case 25:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdGrupoVehiculoSpecified";
                break;
            case 26:
                info.type = Long.class;
                info.name = "IdMarca";
                break;
            case 27:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdMarcaSpecified";
                break;
            case 28:
                info.type = Long.class;
                info.name = "IdModelo";
                break;
            case 29:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdModeloSpecified";
                break;
            case 30:
                info.type = Long.class;
                info.name = "IdVehiculo";
                break;
            case 31:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdVehiculoSpecified";
                break;
            case 32:
                info.type = Long.class;
                info.name = "IdVehiculoClasificacion";
                break;
            case 33:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdVehiculoClasificacionSpecified";
                break;
            case 34:
                info.type = Long.class;
                info.name = "IdVehiculoCodigoInterno";
                break;
            case 35:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdVehiculoCodigoInternoSpecified";
                break;
            case 36:
                info.type = Long.class;
                info.name = "IdVehiculoConstruccion";
                break;
            case 37:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdVehiculoConstruccionSpecified";
                break;
            case 38:
                info.type = Long.class;
                info.name = "IdVehiculoUtilizacion";
                break;
            case 39:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdVehiculoUtilizacionSpecified";
                break;
            case 40:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Kilometros";
                break;
            case 41:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "KilometrosSpecified";
                break;
            case 42:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "MMA";
                break;
            case 43:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "MMASpecified";
                break;
            case 44:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "MOM";
                break;
            case 45:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "MOMSpecified";
                break;
            case 46:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Marca";
                break;
            case 47:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Matricula";
                break;
            case 48:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Modelo";
                break;
            case 49:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "NumEjes";
                break;
            case 50:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "NumEjesSpecified";
                break;
            case 51:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PMA";
                break;
            case 52:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PMASpecified";
                break;
            case 53:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Plazas";
                break;
            case 54:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PlazasSpecified";
                break;
            case 55:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PotenciaFiscal";
                break;
            case 56:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PotenciaFiscalSpecified";
                break;
            case 57:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TipoFichaTecnica";
                break;
            case 58:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Utilizacion";
                break;
            case 59:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "VelocidadMaxima";
                break;
            case 60:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "VelocidadMaximaSpecified";
                break;
            case 61:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 62:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
