package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.ReportingService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 4/25/2017 7:43:53 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class QUERY_ExpedientesVupueVuy_Result implements KvmSerializable {
    
    public String bastidor;
    public String centro;
    public String cliente;
    public String marcaModelo;
    public String nIF;
    public String numExpediente;
    public String pais;
    public String telefono;
    public String id;
    public String ref;
    
    public QUERY_ExpedientesVupueVuy_Result(){}
    
    public QUERY_ExpedientesVupueVuy_Result(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Bastidor"))
        {
            Object obj = soapObject.getProperty("Bastidor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                bastidor = j.toString();
            }else if (obj!= null && obj instanceof String){
                bastidor = (String) obj;
            }
        }
        if (soapObject.hasProperty("Centro"))
        {
            Object obj = soapObject.getProperty("Centro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                centro = j.toString();
            }else if (obj!= null && obj instanceof String){
                centro = (String) obj;
            }
        }
        if (soapObject.hasProperty("Cliente"))
        {
            Object obj = soapObject.getProperty("Cliente");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cliente = j.toString();
            }else if (obj!= null && obj instanceof String){
                cliente = (String) obj;
            }
        }
        if (soapObject.hasProperty("MarcaModelo"))
        {
            Object obj = soapObject.getProperty("MarcaModelo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                marcaModelo = j.toString();
            }else if (obj!= null && obj instanceof String){
                marcaModelo = (String) obj;
            }
        }
        if (soapObject.hasProperty("NIF"))
        {
            Object obj = soapObject.getProperty("NIF");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nIF = j.toString();
            }else if (obj!= null && obj instanceof String){
                nIF = (String) obj;
            }
        }
        if (soapObject.hasProperty("NumExpediente"))
        {
            Object obj = soapObject.getProperty("NumExpediente");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numExpediente = j.toString();
            }else if (obj!= null && obj instanceof String){
                numExpediente = (String) obj;
            }
        }
        if (soapObject.hasProperty("Pais"))
        {
            Object obj = soapObject.getProperty("Pais");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pais = j.toString();
            }else if (obj!= null && obj instanceof String){
                pais = (String) obj;
            }
        }
        if (soapObject.hasProperty("Telefono"))
        {
            Object obj = soapObject.getProperty("Telefono");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                telefono = j.toString();
            }else if (obj!= null && obj instanceof String){
                telefono = (String) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return bastidor;
            case 1:
                return centro;
            case 2:
                return cliente;
            case 3:
                return marcaModelo;
            case 4:
                return nIF;
            case 5:
                return numExpediente;
            case 6:
                return pais;
            case 7:
                return telefono;
            case 8:
                return id;
            case 9:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 10;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Bastidor";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Centro";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Cliente";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "MarcaModelo";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NIF";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NumExpediente";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Pais";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Telefono";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    

    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
