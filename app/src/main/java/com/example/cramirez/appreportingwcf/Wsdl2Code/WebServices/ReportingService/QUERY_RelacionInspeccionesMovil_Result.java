package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.ReportingService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 4/25/2017 7:43:53 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class QUERY_RelacionInspeccionesMovil_Result implements KvmSerializable {
    
    public String domicilio;
    public String estacion;
    public String fecha;
    public boolean fechaSpecified;
    public String fechaCaducidad;
    public boolean fechaCaducidadSpecified;
    public String fechaMAtriculacion;
    public boolean fechaMAtriculacionSpecified;
    public long idInspeccion;
    public boolean idInspeccionSpecified;
    public long idSolicitud;
    public boolean idSolicitudSpecified;
    public long idVehiculo;
    public boolean idVehiculoSpecified;
    public String inspeccion;
    public String matricula;
    public String poblacion;
    public String propietario;
    public String telefono;
    public String tipoVehiculo;
    public String cP;
    public String id;
    public String ref;
    
    public QUERY_RelacionInspeccionesMovil_Result(){}
    
    public QUERY_RelacionInspeccionesMovil_Result(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Domicilio"))
        {
            Object obj = soapObject.getProperty("Domicilio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                domicilio = j.toString();
            }else if (obj!= null && obj instanceof String){
                domicilio = (String) obj;
            }
        }
        if (soapObject.hasProperty("Estacion"))
        {
            Object obj = soapObject.getProperty("Estacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                estacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                estacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("Fecha"))
        {
            Object obj = soapObject.getProperty("Fecha");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fecha = j.toString();
            }else if (obj!= null && obj instanceof String){
                fecha = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaSpecified"))
        {
            Object obj = soapObject.getProperty("FechaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaCaducidad"))
        {
            Object obj = soapObject.getProperty("FechaCaducidad");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaCaducidad = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaCaducidad = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaCaducidadSpecified"))
        {
            Object obj = soapObject.getProperty("FechaCaducidadSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaCaducidadSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaCaducidadSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaMAtriculacion"))
        {
            Object obj = soapObject.getProperty("FechaMAtriculacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaMAtriculacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaMAtriculacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaMAtriculacionSpecified"))
        {
            Object obj = soapObject.getProperty("FechaMAtriculacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaMAtriculacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaMAtriculacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdInspeccion"))
        {
            Object obj = soapObject.getProperty("IdInspeccion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idInspeccion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idInspeccion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdInspeccionSpecified"))
        {
            Object obj = soapObject.getProperty("IdInspeccionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idInspeccionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idInspeccionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdSolicitud"))
        {
            Object obj = soapObject.getProperty("IdSolicitud");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idSolicitud = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idSolicitud = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdSolicitudSpecified"))
        {
            Object obj = soapObject.getProperty("IdSolicitudSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idSolicitudSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idSolicitudSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdVehiculo"))
        {
            Object obj = soapObject.getProperty("IdVehiculo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idVehiculo = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idVehiculo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdVehiculoSpecified"))
        {
            Object obj = soapObject.getProperty("IdVehiculoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idVehiculoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idVehiculoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Inspeccion"))
        {
            Object obj = soapObject.getProperty("Inspeccion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                inspeccion = j.toString();
            }else if (obj!= null && obj instanceof String){
                inspeccion = (String) obj;
            }
        }
        if (soapObject.hasProperty("Matricula"))
        {
            Object obj = soapObject.getProperty("Matricula");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                matricula = j.toString();
            }else if (obj!= null && obj instanceof String){
                matricula = (String) obj;
            }
        }
        if (soapObject.hasProperty("Poblacion"))
        {
            Object obj = soapObject.getProperty("Poblacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                poblacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                poblacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("Propietario"))
        {
            Object obj = soapObject.getProperty("Propietario");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                propietario = j.toString();
            }else if (obj!= null && obj instanceof String){
                propietario = (String) obj;
            }
        }
        if (soapObject.hasProperty("Telefono"))
        {
            Object obj = soapObject.getProperty("Telefono");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                telefono = j.toString();
            }else if (obj!= null && obj instanceof String){
                telefono = (String) obj;
            }
        }
        if (soapObject.hasProperty("TipoVehiculo"))
        {
            Object obj = soapObject.getProperty("TipoVehiculo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tipoVehiculo = j.toString();
            }else if (obj!= null && obj instanceof String){
                tipoVehiculo = (String) obj;
            }
        }
        if (soapObject.hasProperty("cP"))
        {
            Object obj = soapObject.getProperty("cP");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cP = j.toString();
            }else if (obj!= null && obj instanceof String){
                cP = (String) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return domicilio;
            case 1:
                return estacion;
            case 2:
                return fecha;
            case 3:
                return fechaSpecified;
            case 4:
                return fechaCaducidad;
            case 5:
                return fechaCaducidadSpecified;
            case 6:
                return fechaMAtriculacion;
            case 7:
                return fechaMAtriculacionSpecified;
            case 8:
                return idInspeccion;
            case 9:
                return idInspeccionSpecified;
            case 10:
                return idSolicitud;
            case 11:
                return idSolicitudSpecified;
            case 12:
                return idVehiculo;
            case 13:
                return idVehiculoSpecified;
            case 14:
                return inspeccion;
            case 15:
                return matricula;
            case 16:
                return poblacion;
            case 17:
                return propietario;
            case 18:
                return telefono;
            case 19:
                return tipoVehiculo;
            case 20:
                return cP;
            case 21:
                return id;
            case 22:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 23;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Domicilio";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Estacion";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Fecha";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaSpecified";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaCaducidad";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaCaducidadSpecified";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaMAtriculacion";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaMAtriculacionSpecified";
                break;
            case 8:
                info.type = Long.class;
                info.name = "IdInspeccion";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdInspeccionSpecified";
                break;
            case 10:
                info.type = Long.class;
                info.name = "IdSolicitud";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdSolicitudSpecified";
                break;
            case 12:
                info.type = Long.class;
                info.name = "IdVehiculo";
                break;
            case 13:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdVehiculoSpecified";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Inspeccion";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Matricula";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Poblacion";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Propietario";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Telefono";
                break;
            case 19:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TipoVehiculo";
                break;
            case 20:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "cP";
                break;
            case 21:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 22:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    

    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
