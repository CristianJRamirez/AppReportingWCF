package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.ReportingService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 4/25/2017 7:43:53 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class QUERY_RelacionExpedienteTaxaIndustria_Result implements KvmSerializable {
    
    public String centro;
    public String codCentro;
    public String fechaValidez;
    public boolean fechaValidezSpecified;
    public double importe;
    public boolean importeSpecified;
    public String matricula;
    public String nº_Expediente;
    public String nom_del_client;
    public double tasa;
    public boolean tasaSpecified;
    public String tipos_de_Reforma;
    public String id;
    public String ref;
    
    public QUERY_RelacionExpedienteTaxaIndustria_Result(){}
    
    public QUERY_RelacionExpedienteTaxaIndustria_Result(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Centro"))
        {
            Object obj = soapObject.getProperty("Centro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                centro = j.toString();
            }else if (obj!= null && obj instanceof String){
                centro = (String) obj;
            }
        }
        if (soapObject.hasProperty("CodCentro"))
        {
            Object obj = soapObject.getProperty("CodCentro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                codCentro = j.toString();
            }else if (obj!= null && obj instanceof String){
                codCentro = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaValidez"))
        {
            Object obj = soapObject.getProperty("FechaValidez");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaValidez = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaValidez = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaValidezSpecified"))
        {
            Object obj = soapObject.getProperty("FechaValidezSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaValidezSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaValidezSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Importe"))
        {
            Object obj = soapObject.getProperty("Importe");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                importe = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                importe = (Double) obj;
            }
        }
        if (soapObject.hasProperty("ImporteSpecified"))
        {
            Object obj = soapObject.getProperty("ImporteSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                importeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                importeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Matricula"))
        {
            Object obj = soapObject.getProperty("Matricula");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                matricula = j.toString();
            }else if (obj!= null && obj instanceof String){
                matricula = (String) obj;
            }
        }
        if (soapObject.hasProperty("Nº_Expediente"))
        {
            Object obj = soapObject.getProperty("Nº_Expediente");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nº_Expediente = j.toString();
            }else if (obj!= null && obj instanceof String){
                nº_Expediente = (String) obj;
            }
        }
        if (soapObject.hasProperty("Nom_del_client"))
        {
            Object obj = soapObject.getProperty("Nom_del_client");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nom_del_client = j.toString();
            }else if (obj!= null && obj instanceof String){
                nom_del_client = (String) obj;
            }
        }
        if (soapObject.hasProperty("Tasa"))
        {
            Object obj = soapObject.getProperty("Tasa");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasa = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                tasa = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TasaSpecified"))
        {
            Object obj = soapObject.getProperty("TasaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tasaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                tasaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Tipos_de_Reforma"))
        {
            Object obj = soapObject.getProperty("Tipos_de_Reforma");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tipos_de_Reforma = j.toString();
            }else if (obj!= null && obj instanceof String){
                tipos_de_Reforma = (String) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return centro;
            case 1:
                return codCentro;
            case 2:
                return fechaValidez;
            case 3:
                return fechaValidezSpecified;
            case 4:
                return importe;
            case 5:
                return importeSpecified;
            case 6:
                return matricula;
            case 7:
                return nº_Expediente;
            case 8:
                return nom_del_client;
            case 9:
                return tasa;
            case 10:
                return tasaSpecified;
            case 11:
                return tipos_de_Reforma;
            case 12:
                return id;
            case 13:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 14;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Centro";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CodCentro";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaValidez";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaValidezSpecified";
                break;
            case 4:
                info.type = Double.class;
                info.name = "Importe";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ImporteSpecified";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Matricula";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Nº_Expediente";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Nom_del_client";
                break;
            case 9:
                info.type = Double.class;
                info.name = "Tasa";
                break;
            case 10:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "TasaSpecified";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Tipos_de_Reforma";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    

    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
