package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService;
//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/15/2017 9:13:05 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.Centro;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.TipoGastoEstacion;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.TipoTransferencia;
import package com.example.cramirez.appreportingwcf.Wsdl2Code.WebServices.MostradorService.VectorByte;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class Transferencia implements KvmSerializable {
    
    public boolean anulada;
    public boolean anuladaSpecified;
    public double cantidad;
    public boolean cantidadSpecified;
    public Centro centro;
    public String concepto;
    public boolean enviado;
    public boolean enviadoSpecified;
    public long fK_IdCentro;
    public boolean fK_IdCentroSpecified;
    public long fK_IdGastoEstacion;
    public boolean fK_IdGastoEstacionSpecified;
    public long fK_IdTipoTransferencia;
    public boolean fK_IdTipoTransferenciaSpecified;
    public long fK_IdUsuario;
    public boolean fK_IdUsuarioSpecified;
    public String fechaProceso;
    public boolean fechaProcesoSpecified;
    public long idTransferencia;
    public boolean idTransferenciaSpecified;
    public String numeroEnvio;
    public boolean publicado;
    public boolean publicadoSpecified;
    public TipoGastoEstacion tipoGastoEstacion;
    public TipoTransferencia tipoTransferencia;
    public String fechaModificacion;
    public boolean fechaModificacionSpecified;
    public VectorByte timestamp;
    public long usuarioModificacion;
    public boolean usuarioModificacionSpecified;
    public String id;
    public String ref;
    
    public Transferencia(){}
    
    public Transferencia(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Anulada"))
        {
            Object obj = soapObject.getProperty("Anulada");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                anulada = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                anulada = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AnuladaSpecified"))
        {
            Object obj = soapObject.getProperty("AnuladaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                anuladaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                anuladaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Cantidad"))
        {
            Object obj = soapObject.getProperty("Cantidad");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cantidad = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                cantidad = (Double) obj;
            }
        }
        if (soapObject.hasProperty("CantidadSpecified"))
        {
            Object obj = soapObject.getProperty("CantidadSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cantidadSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cantidadSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Centro"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Centro");
            centro =  new Centro (j);
            
        }
        if (soapObject.hasProperty("Concepto"))
        {
            Object obj = soapObject.getProperty("Concepto");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                concepto = j.toString();
            }else if (obj!= null && obj instanceof String){
                concepto = (String) obj;
            }
        }
        if (soapObject.hasProperty("Enviado"))
        {
            Object obj = soapObject.getProperty("Enviado");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                enviado = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                enviado = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("EnviadoSpecified"))
        {
            Object obj = soapObject.getProperty("EnviadoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                enviadoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                enviadoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCentro"))
        {
            Object obj = soapObject.getProperty("FK_IdCentro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCentro = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdCentro = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdCentroSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdCentroSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdCentroSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdCentroSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdGastoEstacion"))
        {
            Object obj = soapObject.getProperty("FK_IdGastoEstacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdGastoEstacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdGastoEstacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdGastoEstacionSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdGastoEstacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdGastoEstacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdGastoEstacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTipoTransferencia"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoTransferencia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoTransferencia = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdTipoTransferencia = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdTipoTransferenciaSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdTipoTransferenciaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdTipoTransferenciaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdTipoTransferenciaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdUsuario"))
        {
            Object obj = soapObject.getProperty("FK_IdUsuario");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdUsuario = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fK_IdUsuario = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FK_IdUsuarioSpecified"))
        {
            Object obj = soapObject.getProperty("FK_IdUsuarioSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fK_IdUsuarioSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fK_IdUsuarioSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FechaProceso"))
        {
            Object obj = soapObject.getProperty("FechaProceso");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaProceso = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaProceso = (String) obj;
            }
        }
        if (soapObject.hasProperty("FechaProcesoSpecified"))
        {
            Object obj = soapObject.getProperty("FechaProcesoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaProcesoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaProcesoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IdTransferencia"))
        {
            Object obj = soapObject.getProperty("IdTransferencia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idTransferencia = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                idTransferencia = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdTransferenciaSpecified"))
        {
            Object obj = soapObject.getProperty("IdTransferenciaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idTransferenciaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idTransferenciaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("NumeroEnvio"))
        {
            Object obj = soapObject.getProperty("NumeroEnvio");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numeroEnvio = j.toString();
            }else if (obj!= null && obj instanceof String){
                numeroEnvio = (String) obj;
            }
        }
        if (soapObject.hasProperty("Publicado"))
        {
            Object obj = soapObject.getProperty("Publicado");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicado = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicado = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PublicadoSpecified"))
        {
            Object obj = soapObject.getProperty("PublicadoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                publicadoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                publicadoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("TipoGastoEstacion"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("TipoGastoEstacion");
            tipoGastoEstacion =  new TipoGastoEstacion (j);
            
        }
        if (soapObject.hasProperty("TipoTransferencia"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("TipoTransferencia");
            tipoTransferencia =  new TipoTransferencia (j);
            
        }
        if (soapObject.hasProperty("fechaModificacion"))
        {
            Object obj = soapObject.getProperty("fechaModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacion = j.toString();
            }else if (obj!= null && obj instanceof String){
                fechaModificacion = (String) obj;
            }
        }
        if (soapObject.hasProperty("fechaModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("fechaModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fechaModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fechaModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("timestamp"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("timestamp");
            timestamp = new VectorByte(j);
        }
        if (soapObject.hasProperty("usuarioModificacion"))
        {
            Object obj = soapObject.getProperty("usuarioModificacion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacion = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                usuarioModificacion = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("usuarioModificacionSpecified"))
        {
            Object obj = soapObject.getProperty("usuarioModificacionSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                usuarioModificacionSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                usuarioModificacionSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Id"))
        {
            Object obj = soapObject.getProperty("Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = j.toString();
            }else if (obj!= null && obj instanceof String){
                id = (String) obj;
            }
        }
        if (soapObject.hasProperty("Ref"))
        {
            Object obj = soapObject.getProperty("Ref");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ref = j.toString();
            }else if (obj!= null && obj instanceof String){
                ref = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return anulada;
            case 1:
                return anuladaSpecified;
            case 2:
                return cantidad;
            case 3:
                return cantidadSpecified;
            case 4:
                return centro;
            case 5:
                return concepto;
            case 6:
                return enviado;
            case 7:
                return enviadoSpecified;
            case 8:
                return fK_IdCentro;
            case 9:
                return fK_IdCentroSpecified;
            case 10:
                return fK_IdGastoEstacion;
            case 11:
                return fK_IdGastoEstacionSpecified;
            case 12:
                return fK_IdTipoTransferencia;
            case 13:
                return fK_IdTipoTransferenciaSpecified;
            case 14:
                return fK_IdUsuario;
            case 15:
                return fK_IdUsuarioSpecified;
            case 16:
                return fechaProceso;
            case 17:
                return fechaProcesoSpecified;
            case 18:
                return idTransferencia;
            case 19:
                return idTransferenciaSpecified;
            case 20:
                return numeroEnvio;
            case 21:
                return publicado;
            case 22:
                return publicadoSpecified;
            case 23:
                return tipoGastoEstacion;
            case 24:
                return tipoTransferencia;
            case 25:
                return fechaModificacion;
            case 26:
                return fechaModificacionSpecified;
            case 27:
                return timestamp.toString();
            case 28:
                return usuarioModificacion;
            case 29:
                return usuarioModificacionSpecified;
            case 30:
                return id;
            case 31:
                return ref;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 32;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Anulada";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AnuladaSpecified";
                break;
            case 2:
                info.type = Double.class;
                info.name = "Cantidad";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "CantidadSpecified";
                break;
            case 4:
                info.type = Centro.class;
                info.name = "Centro";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Concepto";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Enviado";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "EnviadoSpecified";
                break;
            case 8:
                info.type = Long.class;
                info.name = "FK_IdCentro";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdCentroSpecified";
                break;
            case 10:
                info.type = Long.class;
                info.name = "FK_IdGastoEstacion";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdGastoEstacionSpecified";
                break;
            case 12:
                info.type = Long.class;
                info.name = "FK_IdTipoTransferencia";
                break;
            case 13:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdTipoTransferenciaSpecified";
                break;
            case 14:
                info.type = Long.class;
                info.name = "FK_IdUsuario";
                break;
            case 15:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FK_IdUsuarioSpecified";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FechaProceso";
                break;
            case 17:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "FechaProcesoSpecified";
                break;
            case 18:
                info.type = Long.class;
                info.name = "IdTransferencia";
                break;
            case 19:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IdTransferenciaSpecified";
                break;
            case 20:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NumeroEnvio";
                break;
            case 21:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Publicado";
                break;
            case 22:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PublicadoSpecified";
                break;
            case 23:
                info.type = TipoGastoEstacion.class;
                info.name = "TipoGastoEstacion";
                break;
            case 24:
                info.type = TipoTransferencia.class;
                info.name = "TipoTransferencia";
                break;
            case 25:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "fechaModificacion";
                break;
            case 26:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "fechaModificacionSpecified";
                break;
            case 27:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "timestamp";
                break;
            case 28:
                info.type = Long.class;
                info.name = "usuarioModificacion";
                break;
            case 29:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "usuarioModificacionSpecified";
                break;
            case 30:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Id";
                break;
            case 31:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Ref";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
